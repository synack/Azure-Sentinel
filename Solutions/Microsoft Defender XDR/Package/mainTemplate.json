{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Microsoft Defender XDR"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Microsoft Defender XDR MDOWorkbook",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "workbook2-name": {
      "type": "string",
      "defaultValue": "Microsoft Defender For EndPoint",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "workbook3-name": {
      "type": "string",
      "defaultValue": "Microsoft Defender For Identity",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Microsoft Defender XDR",
    "_solutionVersion": "3.0.8",
    "solutionId": "azuresentinel.azure-sentinel-solution-microsoft365defender",
    "_solutionId": "[variables('solutionId')]",
    "uiConfigId1": "MicrosoftThreatProtection",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "MicrosoftThreatProtection",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "analyticRuleObject1": {
      "analyticRuleVersion1": "1.1.2",
      "_analyticRulecontentId1": "6c3a1258-bcdd-4fcd-b753-1a9bc826ce12",
      "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6c3a1258-bcdd-4fcd-b753-1a9bc826ce12')]",
      "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('6c3a1258-bcdd-4fcd-b753-1a9bc826ce12')))]",
      "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','6c3a1258-bcdd-4fcd-b753-1a9bc826ce12','-', '1.1.2')))]"
    },
    "analyticRuleObject2": {
      "analyticRuleVersion2": "1.0.2",
      "_analyticRulecontentId2": "53e936c6-6c30-4d12-8343-b8a0456e8429",
      "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '53e936c6-6c30-4d12-8343-b8a0456e8429')]",
      "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('53e936c6-6c30-4d12-8343-b8a0456e8429')))]",
      "_analyticRulecontentProductId2": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','53e936c6-6c30-4d12-8343-b8a0456e8429','-', '1.0.2')))]"
    },
    "analyticRuleObject3": {
      "analyticRuleVersion3": "1.1.0",
      "_analyticRulecontentId3": "1bf6e165-5e32-420e-ab4f-0da8558a8be2",
      "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1bf6e165-5e32-420e-ab4f-0da8558a8be2')]",
      "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1bf6e165-5e32-420e-ab4f-0da8558a8be2')))]",
      "_analyticRulecontentProductId3": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1bf6e165-5e32-420e-ab4f-0da8558a8be2','-', '1.1.0')))]"
    },
    "analyticRuleObject4": {
      "analyticRuleVersion4": "1.0.6",
      "_analyticRulecontentId4": "738702fd-0a66-42c7-8586-e30f0583f8fe",
      "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '738702fd-0a66-42c7-8586-e30f0583f8fe')]",
      "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('738702fd-0a66-42c7-8586-e30f0583f8fe')))]",
      "_analyticRulecontentProductId4": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','738702fd-0a66-42c7-8586-e30f0583f8fe','-', '1.0.6')))]"
    },
    "analyticRuleObject5": {
      "analyticRuleVersion5": "1.0.5",
      "_analyticRulecontentId5": "ce1e7025-866c-41f3-9b08-ec170e05e73e",
      "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'ce1e7025-866c-41f3-9b08-ec170e05e73e')]",
      "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('ce1e7025-866c-41f3-9b08-ec170e05e73e')))]",
      "_analyticRulecontentProductId5": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','ce1e7025-866c-41f3-9b08-ec170e05e73e','-', '1.0.5')))]"
    },
    "analyticRuleObject6": {
      "analyticRuleVersion6": "1.0.7",
      "_analyticRulecontentId6": "a3c144f9-8051-47d4-ac29-ffb0c312c910",
      "analyticRuleId6": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a3c144f9-8051-47d4-ac29-ffb0c312c910')]",
      "analyticRuleTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('a3c144f9-8051-47d4-ac29-ffb0c312c910')))]",
      "_analyticRulecontentProductId6": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','a3c144f9-8051-47d4-ac29-ffb0c312c910','-', '1.0.7')))]"
    },
    "analyticRuleObject7": {
      "analyticRuleVersion7": "1.1.3",
      "_analyticRulecontentId7": "b6685757-3ed1-4b05-a5bd-2cacadc86c2a",
      "analyticRuleId7": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b6685757-3ed1-4b05-a5bd-2cacadc86c2a')]",
      "analyticRuleTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('b6685757-3ed1-4b05-a5bd-2cacadc86c2a')))]",
      "_analyticRulecontentProductId7": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','b6685757-3ed1-4b05-a5bd-2cacadc86c2a','-', '1.1.3')))]"
    },
    "analyticRuleObject8": {
      "analyticRuleVersion8": "1.0.4",
      "_analyticRulecontentId8": "1785d372-b9fe-4283-96a6-3a1d83cabfd1",
      "analyticRuleId8": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1785d372-b9fe-4283-96a6-3a1d83cabfd1')]",
      "analyticRuleTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1785d372-b9fe-4283-96a6-3a1d83cabfd1')))]",
      "_analyticRulecontentProductId8": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1785d372-b9fe-4283-96a6-3a1d83cabfd1','-', '1.0.4')))]"
    },
    "analyticRuleObject9": {
      "analyticRuleVersion9": "1.0.3",
      "_analyticRulecontentId9": "3bd33158-3f0b-47e3-a50f-7c20a1b88038",
      "analyticRuleId9": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3bd33158-3f0b-47e3-a50f-7c20a1b88038')]",
      "analyticRuleTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('3bd33158-3f0b-47e3-a50f-7c20a1b88038')))]",
      "_analyticRulecontentProductId9": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','3bd33158-3f0b-47e3-a50f-7c20a1b88038','-', '1.0.3')))]"
    },
    "analyticRuleObject10": {
      "analyticRuleVersion10": "1.1.1",
      "_analyticRulecontentId10": "26e81021-2de6-4442-a74a-a77885e96911",
      "analyticRuleId10": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '26e81021-2de6-4442-a74a-a77885e96911')]",
      "analyticRuleTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('26e81021-2de6-4442-a74a-a77885e96911')))]",
      "_analyticRulecontentProductId10": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','26e81021-2de6-4442-a74a-a77885e96911','-', '1.1.1')))]"
    },
    "analyticRuleObject11": {
      "analyticRuleVersion11": "1.0.0",
      "_analyticRulecontentId11": "c25a8cd4-5b4a-45a8-9ba0-3b753a652f6b",
      "analyticRuleId11": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c25a8cd4-5b4a-45a8-9ba0-3b753a652f6b')]",
      "analyticRuleTemplateSpecName11": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('c25a8cd4-5b4a-45a8-9ba0-3b753a652f6b')))]",
      "_analyticRulecontentProductId11": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','c25a8cd4-5b4a-45a8-9ba0-3b753a652f6b','-', '1.0.0')))]"
    },
    "analyticRuleObject12": {
      "analyticRuleVersion12": "1.0.0",
      "_analyticRulecontentId12": "bb46dd86-e642-48a4-975c-44f5ac2b5033",
      "analyticRuleId12": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'bb46dd86-e642-48a4-975c-44f5ac2b5033')]",
      "analyticRuleTemplateSpecName12": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('bb46dd86-e642-48a4-975c-44f5ac2b5033')))]",
      "_analyticRulecontentProductId12": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','bb46dd86-e642-48a4-975c-44f5ac2b5033','-', '1.0.0')))]"
    },
    "analyticRuleObject13": {
      "analyticRuleVersion13": "1.0.0",
      "_analyticRulecontentId13": "2c81c0a0-9823-4a14-b21a-2b4acd3335d2",
      "analyticRuleId13": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '2c81c0a0-9823-4a14-b21a-2b4acd3335d2')]",
      "analyticRuleTemplateSpecName13": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('2c81c0a0-9823-4a14-b21a-2b4acd3335d2')))]",
      "_analyticRulecontentProductId13": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','2c81c0a0-9823-4a14-b21a-2b4acd3335d2','-', '1.0.0')))]"
    },
    "analyticRuleObject14": {
      "analyticRuleVersion14": "1.0.0",
      "_analyticRulecontentId14": "7ce00cba-f76f-4026-ab7f-7e4f1b67bd18",
      "analyticRuleId14": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '7ce00cba-f76f-4026-ab7f-7e4f1b67bd18')]",
      "analyticRuleTemplateSpecName14": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('7ce00cba-f76f-4026-ab7f-7e4f1b67bd18')))]",
      "_analyticRulecontentProductId14": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','7ce00cba-f76f-4026-ab7f-7e4f1b67bd18','-', '1.0.0')))]"
    },
    "analyticRuleObject15": {
      "analyticRuleVersion15": "1.0.0",
      "_analyticRulecontentId15": "1be34fb9-f81b-47ae-84fb-465e6686d76c",
      "analyticRuleId15": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1be34fb9-f81b-47ae-84fb-465e6686d76c')]",
      "analyticRuleTemplateSpecName15": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1be34fb9-f81b-47ae-84fb-465e6686d76c')))]",
      "_analyticRulecontentProductId15": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1be34fb9-f81b-47ae-84fb-465e6686d76c','-', '1.0.0')))]"
    },
    "analyticRuleObject16": {
      "analyticRuleVersion16": "1.0.0",
      "_analyticRulecontentId16": "c332b840-61e4-462e-a201-0e2d69bad45d",
      "analyticRuleId16": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c332b840-61e4-462e-a201-0e2d69bad45d')]",
      "analyticRuleTemplateSpecName16": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('c332b840-61e4-462e-a201-0e2d69bad45d')))]",
      "_analyticRulecontentProductId16": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','c332b840-61e4-462e-a201-0e2d69bad45d','-', '1.0.0')))]"
    },
    "analyticRuleObject17": {
      "analyticRuleVersion17": "1.0.0",
      "_analyticRulecontentId17": "5bdc1504-880c-4b30-a39c-7c746535928d",
      "analyticRuleId17": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '5bdc1504-880c-4b30-a39c-7c746535928d')]",
      "analyticRuleTemplateSpecName17": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('5bdc1504-880c-4b30-a39c-7c746535928d')))]",
      "_analyticRulecontentProductId17": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','5bdc1504-880c-4b30-a39c-7c746535928d','-', '1.0.0')))]"
    },
    "analyticRuleObject18": {
      "analyticRuleVersion18": "1.0.0",
      "_analyticRulecontentId18": "47c02e21-3949-4e05-a28e-576cd75ff6f6",
      "analyticRuleId18": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '47c02e21-3949-4e05-a28e-576cd75ff6f6')]",
      "analyticRuleTemplateSpecName18": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('47c02e21-3949-4e05-a28e-576cd75ff6f6')))]",
      "_analyticRulecontentProductId18": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','47c02e21-3949-4e05-a28e-576cd75ff6f6','-', '1.0.0')))]"
    },
    "analyticRuleObject19": {
      "analyticRuleVersion19": "1.0.0",
      "_analyticRulecontentId19": "36fbd4e7-5630-4414-aa42-702a7fdded21",
      "analyticRuleId19": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '36fbd4e7-5630-4414-aa42-702a7fdded21')]",
      "analyticRuleTemplateSpecName19": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('36fbd4e7-5630-4414-aa42-702a7fdded21')))]",
      "_analyticRulecontentProductId19": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','36fbd4e7-5630-4414-aa42-702a7fdded21','-', '1.0.0')))]"
    },
    "analyticRuleObject20": {
      "analyticRuleVersion20": "1.0.0",
      "_analyticRulecontentId20": "2624fc55-0998-4897-bb48-1c6422befce4",
      "analyticRuleId20": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '2624fc55-0998-4897-bb48-1c6422befce4')]",
      "analyticRuleTemplateSpecName20": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('2624fc55-0998-4897-bb48-1c6422befce4')))]",
      "_analyticRulecontentProductId20": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','2624fc55-0998-4897-bb48-1c6422befce4','-', '1.0.0')))]"
    },
    "analyticRuleObject21": {
      "analyticRuleVersion21": "1.0.0",
      "_analyticRulecontentId21": "fa2f7d8a-6726-465a-aa72-6f6e3d4c99d7",
      "analyticRuleId21": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'fa2f7d8a-6726-465a-aa72-6f6e3d4c99d7')]",
      "analyticRuleTemplateSpecName21": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('fa2f7d8a-6726-465a-aa72-6f6e3d4c99d7')))]",
      "_analyticRulecontentProductId21": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','fa2f7d8a-6726-465a-aa72-6f6e3d4c99d7','-', '1.0.0')))]"
    },
    "analyticRuleObject22": {
      "analyticRuleVersion22": "1.0.0",
      "_analyticRulecontentId22": "2a1dc4c2-a8d6-4a0e-8539-9b971c851195",
      "analyticRuleId22": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '2a1dc4c2-a8d6-4a0e-8539-9b971c851195')]",
      "analyticRuleTemplateSpecName22": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('2a1dc4c2-a8d6-4a0e-8539-9b971c851195')))]",
      "_analyticRulecontentProductId22": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','2a1dc4c2-a8d6-4a0e-8539-9b971c851195','-', '1.0.0')))]"
    },
    "analyticRuleObject23": {
      "analyticRuleVersion23": "1.0.0",
      "_analyticRulecontentId23": "174de33b-107b-4cd8-a85d-b4025a35453f",
      "analyticRuleId23": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '174de33b-107b-4cd8-a85d-b4025a35453f')]",
      "analyticRuleTemplateSpecName23": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('174de33b-107b-4cd8-a85d-b4025a35453f')))]",
      "_analyticRulecontentProductId23": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','174de33b-107b-4cd8-a85d-b4025a35453f','-', '1.0.0')))]"
    },
    "analyticRuleObject24": {
      "analyticRuleVersion24": "1.0.0",
      "_analyticRulecontentId24": "12134de5-361b-427c-a1a0-d43f40a593c4",
      "analyticRuleId24": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '12134de5-361b-427c-a1a0-d43f40a593c4')]",
      "analyticRuleTemplateSpecName24": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('12134de5-361b-427c-a1a0-d43f40a593c4')))]",
      "_analyticRulecontentProductId24": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','12134de5-361b-427c-a1a0-d43f40a593c4','-', '1.0.0')))]"
    },
    "analyticRuleObject25": {
      "analyticRuleVersion25": "1.0.0",
      "_analyticRulecontentId25": "3ab04acf-e0e7-4f7c-8995-748ab4c848c2",
      "analyticRuleId25": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3ab04acf-e0e7-4f7c-8995-748ab4c848c2')]",
      "analyticRuleTemplateSpecName25": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('3ab04acf-e0e7-4f7c-8995-748ab4c848c2')))]",
      "_analyticRulecontentProductId25": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','3ab04acf-e0e7-4f7c-8995-748ab4c848c2','-', '1.0.0')))]"
    },
    "analyticRuleObject26": {
      "analyticRuleVersion26": "1.0.0",
      "_analyticRulecontentId26": "506f4d6b-3864-4bb1-8f75-a13fb066f97a",
      "analyticRuleId26": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '506f4d6b-3864-4bb1-8f75-a13fb066f97a')]",
      "analyticRuleTemplateSpecName26": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('506f4d6b-3864-4bb1-8f75-a13fb066f97a')))]",
      "_analyticRulecontentProductId26": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','506f4d6b-3864-4bb1-8f75-a13fb066f97a','-', '1.0.0')))]"
    },
    "analyticRuleObject27": {
      "analyticRuleVersion27": "1.0.1",
      "_analyticRulecontentId27": "e5f8e196-3544-4a8b-96a9-17c1b6a49710",
      "analyticRuleId27": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'e5f8e196-3544-4a8b-96a9-17c1b6a49710')]",
      "analyticRuleTemplateSpecName27": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('e5f8e196-3544-4a8b-96a9-17c1b6a49710')))]",
      "_analyticRulecontentProductId27": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','e5f8e196-3544-4a8b-96a9-17c1b6a49710','-', '1.0.1')))]"
    },
    "analyticRuleObject28": {
      "analyticRuleVersion28": "1.0.0",
      "_analyticRulecontentId28": "35ab0d58-baab-4154-87ed-fa2f69797e9e",
      "analyticRuleId28": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '35ab0d58-baab-4154-87ed-fa2f69797e9e')]",
      "analyticRuleTemplateSpecName28": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('35ab0d58-baab-4154-87ed-fa2f69797e9e')))]",
      "_analyticRulecontentProductId28": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','35ab0d58-baab-4154-87ed-fa2f69797e9e','-', '1.0.0')))]"
    },
    "analyticRuleObject29": {
      "analyticRuleVersion29": "1.0.0",
      "_analyticRulecontentId29": "d29cc957-0ddb-4d00-8d6f-ad1bb345ff9a",
      "analyticRuleId29": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd29cc957-0ddb-4d00-8d6f-ad1bb345ff9a')]",
      "analyticRuleTemplateSpecName29": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('d29cc957-0ddb-4d00-8d6f-ad1bb345ff9a')))]",
      "_analyticRulecontentProductId29": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','d29cc957-0ddb-4d00-8d6f-ad1bb345ff9a','-', '1.0.0')))]"
    },
    "analyticRuleObject30": {
      "analyticRuleVersion30": "1.0.0",
      "_analyticRulecontentId30": "450f4e56-5bba-4070-b9d9-9204ba9d777d",
      "analyticRuleId30": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '450f4e56-5bba-4070-b9d9-9204ba9d777d')]",
      "analyticRuleTemplateSpecName30": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('450f4e56-5bba-4070-b9d9-9204ba9d777d')))]",
      "_analyticRulecontentProductId30": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','450f4e56-5bba-4070-b9d9-9204ba9d777d','-', '1.0.0')))]"
    },
    "analyticRuleObject31": {
      "analyticRuleVersion31": "1.0.1",
      "_analyticRulecontentId31": "63aa43c2-e88e-4102-aea5-0432851c541a",
      "analyticRuleId31": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '63aa43c2-e88e-4102-aea5-0432851c541a')]",
      "analyticRuleTemplateSpecName31": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('63aa43c2-e88e-4102-aea5-0432851c541a')))]",
      "_analyticRulecontentProductId31": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','63aa43c2-e88e-4102-aea5-0432851c541a','-', '1.0.1')))]"
    },
    "analyticRuleObject32": {
      "analyticRuleVersion32": "1.0.0",
      "_analyticRulecontentId32": "91a451e3-178f-41b2-9e5d-da97d75b9971",
      "analyticRuleId32": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '91a451e3-178f-41b2-9e5d-da97d75b9971')]",
      "analyticRuleTemplateSpecName32": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('91a451e3-178f-41b2-9e5d-da97d75b9971')))]",
      "_analyticRulecontentProductId32": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','91a451e3-178f-41b2-9e5d-da97d75b9971','-', '1.0.0')))]"
    },
    "analyticRuleObject33": {
      "analyticRuleVersion33": "1.0.0",
      "_analyticRulecontentId33": "32b29155-3fd3-4a9e-a0ca-a67e2593b60b",
      "analyticRuleId33": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '32b29155-3fd3-4a9e-a0ca-a67e2593b60b')]",
      "analyticRuleTemplateSpecName33": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('32b29155-3fd3-4a9e-a0ca-a67e2593b60b')))]",
      "_analyticRulecontentProductId33": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','32b29155-3fd3-4a9e-a0ca-a67e2593b60b','-', '1.0.0')))]"
    },
    "analyticRuleObject34": {
      "analyticRuleVersion34": "1.0.0",
      "_analyticRulecontentId34": "03caa992-477f-4b19-8e2a-8cd58f8f9652",
      "analyticRuleId34": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '03caa992-477f-4b19-8e2a-8cd58f8f9652')]",
      "analyticRuleTemplateSpecName34": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('03caa992-477f-4b19-8e2a-8cd58f8f9652')))]",
      "_analyticRulecontentProductId34": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','03caa992-477f-4b19-8e2a-8cd58f8f9652','-', '1.0.0')))]"
    },
    "analyticRuleObject35": {
      "analyticRuleVersion35": "1.0.0",
      "_analyticRulecontentId35": "7d0d3050-8dac-4b83-bfae-902f7dc0c21c",
      "analyticRuleId35": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '7d0d3050-8dac-4b83-bfae-902f7dc0c21c')]",
      "analyticRuleTemplateSpecName35": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('7d0d3050-8dac-4b83-bfae-902f7dc0c21c')))]",
      "_analyticRulecontentProductId35": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','7d0d3050-8dac-4b83-bfae-902f7dc0c21c','-', '1.0.0')))]"
    },
    "analyticRuleObject36": {
      "analyticRuleVersion36": "1.0.0",
      "_analyticRulecontentId36": "515d0bba-b297-4f83-8280-20ff7f27ecb1",
      "analyticRuleId36": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '515d0bba-b297-4f83-8280-20ff7f27ecb1')]",
      "analyticRuleTemplateSpecName36": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('515d0bba-b297-4f83-8280-20ff7f27ecb1')))]",
      "_analyticRulecontentProductId36": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','515d0bba-b297-4f83-8280-20ff7f27ecb1','-', '1.0.0')))]"
    },
    "analyticRuleObject37": {
      "analyticRuleVersion37": "1.0.0",
      "_analyticRulecontentId37": "4dd31bd5-11a3-4b9c-a7c5-4927ab4f2a77",
      "analyticRuleId37": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4dd31bd5-11a3-4b9c-a7c5-4927ab4f2a77')]",
      "analyticRuleTemplateSpecName37": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('4dd31bd5-11a3-4b9c-a7c5-4927ab4f2a77')))]",
      "_analyticRulecontentProductId37": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','4dd31bd5-11a3-4b9c-a7c5-4927ab4f2a77','-', '1.0.0')))]"
    },
    "analyticRuleObject38": {
      "analyticRuleVersion38": "1.0.1",
      "_analyticRulecontentId38": "4bd9ce9d-8586-4beb-8fdb-bd018cacbe7d",
      "analyticRuleId38": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4bd9ce9d-8586-4beb-8fdb-bd018cacbe7d')]",
      "analyticRuleTemplateSpecName38": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('4bd9ce9d-8586-4beb-8fdb-bd018cacbe7d')))]",
      "_analyticRulecontentProductId38": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','4bd9ce9d-8586-4beb-8fdb-bd018cacbe7d','-', '1.0.1')))]"
    },
    "analyticRuleObject39": {
      "analyticRuleVersion39": "1.0.0",
      "_analyticRulecontentId39": "ba9db6b2-3d05-42ae-8aee-3a15bbe29f27",
      "analyticRuleId39": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'ba9db6b2-3d05-42ae-8aee-3a15bbe29f27')]",
      "analyticRuleTemplateSpecName39": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('ba9db6b2-3d05-42ae-8aee-3a15bbe29f27')))]",
      "_analyticRulecontentProductId39": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','ba9db6b2-3d05-42ae-8aee-3a15bbe29f27','-', '1.0.0')))]"
    },
    "analyticRuleObject40": {
      "analyticRuleVersion40": "1.0.0",
      "_analyticRulecontentId40": "28c63a44-2d35-48b7-831b-3ed24af17c7e",
      "analyticRuleId40": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '28c63a44-2d35-48b7-831b-3ed24af17c7e')]",
      "analyticRuleTemplateSpecName40": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('28c63a44-2d35-48b7-831b-3ed24af17c7e')))]",
      "_analyticRulecontentProductId40": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','28c63a44-2d35-48b7-831b-3ed24af17c7e','-', '1.0.0')))]"
    },
    "huntingQueryObject1": {
      "huntingQueryVersion1": "1.1.0",
      "_huntingQuerycontentId1": "cdac93ef-56c0-45bf-9e7f-9cbf0ad06808",
      "huntingQueryTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('cdac93ef-56c0-45bf-9e7f-9cbf0ad06808')))]"
    },
    "huntingQueryObject2": {
      "huntingQueryVersion2": "1.1.0",
      "_huntingQuerycontentId2": "cdac93ef-56c0-45bf-9e7f-9cbf0ad034234",
      "huntingQueryTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('cdac93ef-56c0-45bf-9e7f-9cbf0ad034234')))]"
    },
    "huntingQueryObject3": {
      "huntingQueryVersion3": "1.0.1",
      "_huntingQuerycontentId3": "cdac93ef-56c0-45bf-9e7f-9cbf0ad06567",
      "huntingQueryTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('cdac93ef-56c0-45bf-9e7f-9cbf0ad06567')))]"
    },
    "huntingQueryObject4": {
      "huntingQueryVersion4": "1.0.1",
      "_huntingQuerycontentId4": "cdac93ef-56c0-45bf-9e7f-9cbf0ad06123",
      "huntingQueryTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('cdac93ef-56c0-45bf-9e7f-9cbf0ad06123')))]"
    },
    "huntingQueryObject5": {
      "huntingQueryVersion5": "1.0.0",
      "_huntingQuerycontentId5": "fe9edc77-1b6c-4f1e-a223-64b580b50187",
      "huntingQueryTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('fe9edc77-1b6c-4f1e-a223-64b580b50187')))]"
    },
    "huntingQueryObject6": {
      "huntingQueryVersion6": "1.0.0",
      "_huntingQuerycontentId6": "147c4c0a-7241-4ce9-9b71-0aecb8a2b59f",
      "huntingQueryTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('147c4c0a-7241-4ce9-9b71-0aecb8a2b59f')))]"
    },
    "huntingQueryObject7": {
      "huntingQueryVersion7": "1.0.0",
      "_huntingQuerycontentId7": "8fe88892-3a55-4220-9141-939a8e7a15c5",
      "huntingQueryTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('8fe88892-3a55-4220-9141-939a8e7a15c5')))]"
    },
    "huntingQueryObject8": {
      "huntingQueryVersion8": "1.0.0",
      "_huntingQuerycontentId8": "e7791695-c103-4d20-a75a-53e90788616b",
      "huntingQueryTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('e7791695-c103-4d20-a75a-53e90788616b')))]"
    },
    "huntingQueryObject9": {
      "huntingQueryVersion9": "1.0.0",
      "_huntingQuerycontentId9": "1850a459-b009-43d0-a575-8284b737eef8",
      "huntingQueryTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('1850a459-b009-43d0-a575-8284b737eef8')))]"
    },
    "huntingQueryObject10": {
      "huntingQueryVersion10": "1.0.0",
      "_huntingQuerycontentId10": "d6991ef1-b225-4780-b6a6-cfe9b5278f5e",
      "huntingQueryTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('d6991ef1-b225-4780-b6a6-cfe9b5278f5e')))]"
    },
    "huntingQueryObject11": {
      "huntingQueryVersion11": "1.0.0",
      "_huntingQuerycontentId11": "d7b7dcad-d806-4a61-b8fc-0d7c9c45bdec",
      "huntingQueryTemplateSpecName11": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('d7b7dcad-d806-4a61-b8fc-0d7c9c45bdec')))]"
    },
    "huntingQueryObject12": {
      "huntingQueryVersion12": "1.0.0",
      "_huntingQuerycontentId12": "f78255b6-8f91-4cf3-a25c-e1144b7b5425",
      "huntingQueryTemplateSpecName12": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('f78255b6-8f91-4cf3-a25c-e1144b7b5425')))]"
    },
    "huntingQueryObject13": {
      "huntingQueryVersion13": "1.0.0",
      "_huntingQuerycontentId13": "76c14475-9a22-4cc1-922c-437d7f614a36",
      "huntingQueryTemplateSpecName13": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('76c14475-9a22-4cc1-922c-437d7f614a36')))]"
    },
    "huntingQueryObject14": {
      "huntingQueryVersion14": "1.0.0",
      "_huntingQuerycontentId14": "89b31213-4350-4730-8d27-26667ce53894",
      "huntingQueryTemplateSpecName14": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('89b31213-4350-4730-8d27-26667ce53894')))]"
    },
    "huntingQueryObject15": {
      "huntingQueryVersion15": "1.0.0",
      "_huntingQuerycontentId15": "79f9bb6b-6d31-412e-b3bc-6e5ad1303112",
      "huntingQueryTemplateSpecName15": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('79f9bb6b-6d31-412e-b3bc-6e5ad1303112')))]"
    },
    "huntingQueryObject16": {
      "huntingQueryVersion16": "1.0.0",
      "_huntingQuerycontentId16": "0b985ed8-aacd-41ba-9b17-489be9224159",
      "huntingQueryTemplateSpecName16": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('0b985ed8-aacd-41ba-9b17-489be9224159')))]"
    },
    "huntingQueryObject17": {
      "huntingQueryVersion17": "1.0.0",
      "_huntingQuerycontentId17": "abf42310-51c7-4d7f-98d2-e5af09859aab",
      "huntingQueryTemplateSpecName17": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('abf42310-51c7-4d7f-98d2-e5af09859aab')))]"
    },
    "huntingQueryObject18": {
      "huntingQueryVersion18": "1.0.0",
      "_huntingQuerycontentId18": "63ecff0f-3a86-468b-8c9e-a7a88fe33ebb",
      "huntingQueryTemplateSpecName18": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('63ecff0f-3a86-468b-8c9e-a7a88fe33ebb')))]"
    },
    "huntingQueryObject19": {
      "huntingQueryVersion19": "1.0.0",
      "_huntingQuerycontentId19": "fa2f7d8a-6726-465a-aa72-6f6e3d4c99d7",
      "huntingQueryTemplateSpecName19": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('fa2f7d8a-6726-465a-aa72-6f6e3d4c99d7')))]"
    },
    "huntingQueryObject20": {
      "huntingQueryVersion20": "1.0.0",
      "_huntingQuerycontentId20": "14694b88-a6e9-4cd1-9c4a-e382bdd82d8d",
      "huntingQueryTemplateSpecName20": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('14694b88-a6e9-4cd1-9c4a-e382bdd82d8d')))]"
    },
    "huntingQueryObject21": {
      "huntingQueryVersion21": "1.0.0",
      "_huntingQuerycontentId21": "bba7bbbe-5aa3-4c08-bd23-dd6cd8ccaf20",
      "huntingQueryTemplateSpecName21": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('bba7bbbe-5aa3-4c08-bd23-dd6cd8ccaf20')))]"
    },
    "huntingQueryObject22": {
      "huntingQueryVersion22": "1.0.0",
      "_huntingQuerycontentId22": "7a5597de-7e99-470d-944f-acb163b9cb14",
      "huntingQueryTemplateSpecName22": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('7a5597de-7e99-470d-944f-acb163b9cb14')))]"
    },
    "huntingQueryObject23": {
      "huntingQueryVersion23": "1.0.0",
      "_huntingQuerycontentId23": "58e6170e-0512-4485-9638-463fdde85b0e",
      "huntingQueryTemplateSpecName23": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('58e6170e-0512-4485-9638-463fdde85b0e')))]"
    },
    "huntingQueryObject24": {
      "huntingQueryVersion24": "1.0.0",
      "_huntingQuerycontentId24": "fe912310-32f5-4256-933b-d4b45e7e6e54",
      "huntingQueryTemplateSpecName24": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('fe912310-32f5-4256-933b-d4b45e7e6e54')))]"
    },
    "huntingQueryObject25": {
      "huntingQueryVersion25": "1.0.0",
      "_huntingQuerycontentId25": "3842e70d-45be-43b1-8206-4ebc4c305f34",
      "huntingQueryTemplateSpecName25": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('3842e70d-45be-43b1-8206-4ebc4c305f34')))]"
    },
    "huntingQueryObject26": {
      "huntingQueryVersion26": "1.0.0",
      "_huntingQuerycontentId26": "81f02314-2ff5-45cb-a35d-0deb546a0104",
      "huntingQueryTemplateSpecName26": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('81f02314-2ff5-45cb-a35d-0deb546a0104')))]"
    },
    "huntingQueryObject27": {
      "huntingQueryVersion27": "1.0.0",
      "_huntingQuerycontentId27": "f350f0e7-0e52-434c-a113-197883219f00",
      "huntingQueryTemplateSpecName27": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('f350f0e7-0e52-434c-a113-197883219f00')))]"
    },
    "huntingQueryObject28": {
      "huntingQueryVersion28": "1.0.0",
      "_huntingQuerycontentId28": "0b5b076b-9a1c-440c-a11f-8471a75f46fd",
      "huntingQueryTemplateSpecName28": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('0b5b076b-9a1c-440c-a11f-8471a75f46fd')))]"
    },
    "huntingQueryObject29": {
      "huntingQueryVersion29": "1.0.0",
      "_huntingQuerycontentId29": "2d16b6fc-eb63-491c-a2c2-1160e2e41dcf",
      "huntingQueryTemplateSpecName29": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('2d16b6fc-eb63-491c-a2c2-1160e2e41dcf')))]"
    },
    "huntingQueryObject30": {
      "huntingQueryVersion30": "1.0.0",
      "_huntingQuerycontentId30": "084a6349-b3d6-4528-91e4-4de5d52424e5",
      "huntingQueryTemplateSpecName30": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('084a6349-b3d6-4528-91e4-4de5d52424e5')))]"
    },
    "huntingQueryObject31": {
      "huntingQueryVersion31": "1.0.0",
      "_huntingQuerycontentId31": "c5b3e559-7c44-442c-9e73-c753abb02c13",
      "huntingQueryTemplateSpecName31": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('c5b3e559-7c44-442c-9e73-c753abb02c13')))]"
    },
    "huntingQueryObject32": {
      "huntingQueryVersion32": "1.0.0",
      "_huntingQuerycontentId32": "0efbcea0-1dc0-4844-8a9c-3a1d98fc1697",
      "huntingQueryTemplateSpecName32": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('0efbcea0-1dc0-4844-8a9c-3a1d98fc1697')))]"
    },
    "huntingQueryObject33": {
      "huntingQueryVersion33": "1.0.0",
      "_huntingQuerycontentId33": "8f404352-c4ff-44d1-8d70-c50ee2fad8f8",
      "huntingQueryTemplateSpecName33": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('8f404352-c4ff-44d1-8d70-c50ee2fad8f8')))]"
    },
    "huntingQueryObject34": {
      "huntingQueryVersion34": "1.0.1",
      "_huntingQuerycontentId34": "2bdd260c-c687-4cb2-9992-87e5ce677678",
      "huntingQueryTemplateSpecName34": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('2bdd260c-c687-4cb2-9992-87e5ce677678')))]"
    },
    "huntingQueryObject35": {
      "huntingQueryVersion35": "1.0.0",
      "_huntingQuerycontentId35": "e17ddfc6-7478-443b-99ff-286f3d09b8aa",
      "huntingQueryTemplateSpecName35": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('e17ddfc6-7478-443b-99ff-286f3d09b8aa')))]"
    },
    "huntingQueryObject36": {
      "huntingQueryVersion36": "1.0.0",
      "_huntingQuerycontentId36": "4095e430-d3f4-426f-92c5-aa5c5e137ca0",
      "huntingQueryTemplateSpecName36": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('4095e430-d3f4-426f-92c5-aa5c5e137ca0')))]"
    },
    "huntingQueryObject37": {
      "huntingQueryVersion37": "1.0.0",
      "_huntingQuerycontentId37": "cedc5bfa-01f6-4e54-b87b-1edbe430e27a",
      "huntingQueryTemplateSpecName37": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('cedc5bfa-01f6-4e54-b87b-1edbe430e27a')))]"
    },
    "huntingQueryObject38": {
      "huntingQueryVersion38": "1.0.0",
      "_huntingQuerycontentId38": "63142c12-5d8b-48cf-a0f6-b523c855497c",
      "huntingQueryTemplateSpecName38": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('63142c12-5d8b-48cf-a0f6-b523c855497c')))]"
    },
    "huntingQueryObject39": {
      "huntingQueryVersion39": "1.0.0",
      "_huntingQuerycontentId39": "1ddee78f-7508-4f4a-9b6b-d2927724217d",
      "huntingQueryTemplateSpecName39": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('1ddee78f-7508-4f4a-9b6b-d2927724217d')))]"
    },
    "huntingQueryObject40": {
      "huntingQueryVersion40": "1.0.0",
      "_huntingQuerycontentId40": "4f669adc-2c00-4bc8-896b-e59f068dcb18",
      "huntingQueryTemplateSpecName40": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('4f669adc-2c00-4bc8-896b-e59f068dcb18')))]"
    },
    "huntingQueryObject41": {
      "huntingQueryVersion41": "1.0.0",
      "_huntingQuerycontentId41": "853bacff-45cf-42f2-b2a6-6727fcf183ef",
      "huntingQueryTemplateSpecName41": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('853bacff-45cf-42f2-b2a6-6727fcf183ef')))]"
    },
    "huntingQueryObject42": {
      "huntingQueryVersion42": "1.0.0",
      "_huntingQuerycontentId42": "3dd9ab09-0ea3-4f47-ba10-f84045ab52c3",
      "huntingQueryTemplateSpecName42": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('3dd9ab09-0ea3-4f47-ba10-f84045ab52c3')))]"
    },
    "huntingQueryObject43": {
      "huntingQueryVersion43": "1.0.0",
      "_huntingQuerycontentId43": "4dd31bd5-11a3-4b9c-a7c5-4927ab4f2a77",
      "huntingQueryTemplateSpecName43": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('4dd31bd5-11a3-4b9c-a7c5-4927ab4f2a77')))]"
    },
    "huntingQueryObject44": {
      "huntingQueryVersion44": "1.0.0",
      "_huntingQuerycontentId44": "74cc0176-3900-440e-b179-45d6a957145a",
      "huntingQueryTemplateSpecName44": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('74cc0176-3900-440e-b179-45d6a957145a')))]"
    },
    "huntingQueryObject45": {
      "huntingQueryVersion45": "1.0.0",
      "_huntingQuerycontentId45": "e18109aa-f252-48ec-b115-1b7c16e1174f",
      "huntingQueryTemplateSpecName45": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('e18109aa-f252-48ec-b115-1b7c16e1174f')))]"
    },
    "huntingQueryObject46": {
      "huntingQueryVersion46": "1.0.0",
      "_huntingQuerycontentId46": "aa3a8508-c0ff-404d-8d5c-4e7f548b0d86",
      "huntingQueryTemplateSpecName46": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('aa3a8508-c0ff-404d-8d5c-4e7f548b0d86')))]"
    },
    "huntingQueryObject47": {
      "huntingQueryVersion47": "1.0.0",
      "_huntingQuerycontentId47": "9674f529-f0e9-4305-862d-479ccc9e28f1",
      "huntingQueryTemplateSpecName47": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('9674f529-f0e9-4305-862d-479ccc9e28f1')))]"
    },
    "huntingQueryObject48": {
      "huntingQueryVersion48": "1.0.0",
      "_huntingQuerycontentId48": "180bacfd-18de-450a-8e0c-7d2fa399ca49",
      "huntingQueryTemplateSpecName48": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('180bacfd-18de-450a-8e0c-7d2fa399ca49')))]"
    },
    "huntingQueryObject49": {
      "huntingQueryVersion49": "1.0.0",
      "_huntingQuerycontentId49": "4d11f63f-5b64-416e-8d77-266e4c6d382e",
      "huntingQueryTemplateSpecName49": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('4d11f63f-5b64-416e-8d77-266e4c6d382e')))]"
    },
    "huntingQueryObject50": {
      "huntingQueryVersion50": "1.0.0",
      "_huntingQuerycontentId50": "846bf25e-3d2d-4122-9b60-adfadd2fc616",
      "huntingQueryTemplateSpecName50": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('846bf25e-3d2d-4122-9b60-adfadd2fc616')))]"
    },
    "huntingQueryObject51": {
      "huntingQueryVersion51": "1.0.0",
      "_huntingQuerycontentId51": "4713d763-122d-419c-bf6f-bdef111cd8e2",
      "huntingQueryTemplateSpecName51": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('4713d763-122d-419c-bf6f-bdef111cd8e2')))]"
    },
    "huntingQueryObject52": {
      "huntingQueryVersion52": "1.0.0",
      "_huntingQuerycontentId52": "b3470e40-39ae-4c28-9282-440038f6f964",
      "huntingQueryTemplateSpecName52": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('b3470e40-39ae-4c28-9282-440038f6f964')))]"
    },
    "huntingQueryObject53": {
      "huntingQueryVersion53": "1.0.0",
      "_huntingQuerycontentId53": "a18e8bcf-e05d-4e45-bc6e-2c5004729fbd",
      "huntingQueryTemplateSpecName53": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('a18e8bcf-e05d-4e45-bc6e-2c5004729fbd')))]"
    },
    "huntingQueryObject54": {
      "huntingQueryVersion54": "1.0.0",
      "_huntingQuerycontentId54": "6284b962-ab0d-46d8-a47f-1eb1ac1be463",
      "huntingQueryTemplateSpecName54": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('6284b962-ab0d-46d8-a47f-1eb1ac1be463')))]"
    },
    "huntingQueryObject55": {
      "huntingQueryVersion55": "1.0.0",
      "_huntingQuerycontentId55": "b1f8aac2-766d-47ec-8787-84bc7692ff77",
      "huntingQueryTemplateSpecName55": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('b1f8aac2-766d-47ec-8787-84bc7692ff77')))]"
    },
    "huntingQueryObject56": {
      "huntingQueryVersion56": "1.0.0",
      "_huntingQuerycontentId56": "54ea2379-28e7-48e1-8dfd-aaf8fb1331ba",
      "huntingQueryTemplateSpecName56": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('54ea2379-28e7-48e1-8dfd-aaf8fb1331ba')))]"
    },
    "huntingQueryObject57": {
      "huntingQueryVersion57": "1.0.0",
      "_huntingQuerycontentId57": "29683151-e15d-4c0c-845b-892be89bf080",
      "huntingQueryTemplateSpecName57": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('29683151-e15d-4c0c-845b-892be89bf080')))]"
    },
    "huntingQueryObject58": {
      "huntingQueryVersion58": "1.0.0",
      "_huntingQuerycontentId58": "35ca729c-04b4-4f6c-b383-caed1b85226e",
      "huntingQueryTemplateSpecName58": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('35ca729c-04b4-4f6c-b383-caed1b85226e')))]"
    },
    "huntingQueryObject59": {
      "huntingQueryVersion59": "1.0.0",
      "_huntingQuerycontentId59": "761230a3-71ad-4522-bfbc-1dca698ffc42",
      "huntingQueryTemplateSpecName59": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('761230a3-71ad-4522-bfbc-1dca698ffc42')))]"
    },
    "huntingQueryObject60": {
      "huntingQueryVersion60": "1.0.0",
      "_huntingQuerycontentId60": "daa347a4-8251-43a7-9730-32f22aa741ab",
      "huntingQueryTemplateSpecName60": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('daa347a4-8251-43a7-9730-32f22aa741ab')))]"
    },
    "huntingQueryObject61": {
      "huntingQueryVersion61": "1.0.0",
      "_huntingQuerycontentId61": "3cc2127f-d9ca-46a0-9628-89f702be82b3",
      "huntingQueryTemplateSpecName61": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('3cc2127f-d9ca-46a0-9628-89f702be82b3')))]"
    },
    "huntingQueryObject62": {
      "huntingQueryVersion62": "1.0.0",
      "_huntingQuerycontentId62": "8722489a-d6f1-4b66-98e9-e3dfda902019",
      "huntingQueryTemplateSpecName62": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('8722489a-d6f1-4b66-98e9-e3dfda902019')))]"
    },
    "huntingQueryObject63": {
      "huntingQueryVersion63": "1.0.0",
      "_huntingQuerycontentId63": "a7214393-9da7-432e-9b41-fb02b4f740bd",
      "huntingQueryTemplateSpecName63": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('a7214393-9da7-432e-9b41-fb02b4f740bd')))]"
    },
    "huntingQueryObject64": {
      "huntingQueryVersion64": "1.0.0",
      "_huntingQuerycontentId64": "d0585c34-1b03-473c-938d-11fe73f7e053",
      "huntingQueryTemplateSpecName64": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('d0585c34-1b03-473c-938d-11fe73f7e053')))]"
    },
    "huntingQueryObject65": {
      "huntingQueryVersion65": "1.0.0",
      "_huntingQuerycontentId65": "96976bb1-1993-45b8-a477-8236ee93976b",
      "huntingQueryTemplateSpecName65": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('96976bb1-1993-45b8-a477-8236ee93976b')))]"
    },
    "huntingQueryObject66": {
      "huntingQueryVersion66": "1.0.0",
      "_huntingQuerycontentId66": "1299962c-804e-459a-8d3d-41d68bc45ba2",
      "huntingQueryTemplateSpecName66": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('1299962c-804e-459a-8d3d-41d68bc45ba2')))]"
    },
    "huntingQueryObject67": {
      "huntingQueryVersion67": "1.0.0",
      "_huntingQuerycontentId67": "06ea5081-cdea-40c8-b829-240ece951243",
      "huntingQueryTemplateSpecName67": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('06ea5081-cdea-40c8-b829-240ece951243')))]"
    },
    "huntingQueryObject68": {
      "huntingQueryVersion68": "1.0.0",
      "_huntingQuerycontentId68": "f086d58b-c44b-4fae-903b-f65ad042a4ee",
      "huntingQueryTemplateSpecName68": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('f086d58b-c44b-4fae-903b-f65ad042a4ee')))]"
    },
    "huntingQueryObject69": {
      "huntingQueryVersion69": "1.0.0",
      "_huntingQuerycontentId69": "88707168-d4a4-4ca7-a516-b2ee0310af1b",
      "huntingQueryTemplateSpecName69": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('88707168-d4a4-4ca7-a516-b2ee0310af1b')))]"
    },
    "huntingQueryObject70": {
      "huntingQueryVersion70": "1.0.0",
      "_huntingQuerycontentId70": "cb2fb8f9-89bd-485e-8422-da8cb6c7bc23",
      "huntingQueryTemplateSpecName70": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('cb2fb8f9-89bd-485e-8422-da8cb6c7bc23')))]"
    },
    "huntingQueryObject71": {
      "huntingQueryVersion71": "1.0.0",
      "_huntingQuerycontentId71": "829cf5ba-39d5-4986-814e-d46f8437c27b",
      "huntingQueryTemplateSpecName71": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-hq-',uniquestring('829cf5ba-39d5-4986-814e-d46f8437c27b')))]"
    },
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "MDOWorkbook",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "workbookVersion2": "1.0.0",
    "workbookContentId2": "MicrosoftDefenderForEndPoint",
    "workbookId2": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId2'))]",
    "workbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId2'))))]",
    "_workbookContentId2": "[variables('workbookContentId2')]",
    "_workbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId2'),'-', variables('workbookVersion2'))))]",
    "workbookVersion3": "1.0.0",
    "workbookContentId3": "MicrosoftDefenderForIdentity",
    "workbookId3": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId3'))]",
    "workbookTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId3'))))]",
    "_workbookContentId3": "[variables('workbookContentId3')]",
    "_workbookcontentProductId3": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId3'),'-', variables('workbookVersion3'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Microsoft Defender XDR data connector with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "StaticUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Microsoft Defender XDR",
                  "publisher": "Microsoft",
                  "descriptionMarkdown": "Microsoft Defender XDR is a unified, natively integrated, pre- and post-breach enterprise defense suite that protects endpoint, identity, email, and applications and helps you detect, prevent, investigate, and automatically respond to sophisticated threats.\n\nMicrosoft Defender XDR suite includes: \n- Microsoft Defender for Endpoint\n- Microsoft Defender for Identity\n- Microsoft Defender for Office 365\n- Threat & Vulnerability Management\n- Microsoft Defender for Cloud Apps\n\nFor more information, see the [Microsoft Sentinel documentation](https://go.microsoft.com/fwlink/p/?linkid=2220004&wt.mc_id=sentinel_dataconnectordocs_content_cnl_csasci).",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "Incidents",
                      "baseQuery": "SecurityIncident \n| where ProviderName == \"Microsoft 365 Defender\""
                    },
                    {
                      "metricName": "Total data received",
                      "legend": "Alerts",
                      "baseQuery": "SecurityAlert \n| where ProductName in(\"Microsoft Defender Advanced Threat Protection\",\"Office 365 Advanced Threat Protection\",\"Azure Advanced Threat Protection\",\"Microsoft Cloud App Security\",\"Microsoft 365 Defender\")"
                    },
                    {
                      "metricName": "Total data received",
                      "legend": "Endpoint Events",
                      "baseQuery": "DeviceEvents| union isfuzzy=true DeviceFileEvents| union isfuzzy=true DeviceImageLoadEvents| union isfuzzy=true DeviceInfo| union isfuzzy=true DeviceLogonEvents| union isfuzzy=true DeviceNetworkEvents| union isfuzzy=true DeviceNetworkInfo| union isfuzzy=true DeviceProcessEvents| union isfuzzy=true DeviceRegistryEvents| union isfuzzy=true DeviceFileCertificateInfo"
                    },
                    {
                      "metricName": "Total data received",
                      "legend": "Office Events",
                      "baseQuery": "EmailEvents| union isfuzzy=true EmailUrlInfo| union isfuzzy=true EmailAttachmentInfo| union isfuzzy=true EmailPostDeliveryEvents"
                    },
                    {
                      "metricName": "Total data received",
                      "legend": "Identity Events",
                      "baseQuery": "IdentityLogonEvents| union isfuzzy=true IdentityQueryEvents| union isfuzzy=true IdentityDirectoryEvents"
                    },
                    {
                      "metricName": "Total data received",
                      "legend": "Cloud app Events",
                      "baseQuery": "CloudAppEvents"
                    },
                    {
                      "metricName": "Total data received",
                      "legend": "Defender Alert Evidence",
                      "baseQuery": "AlertEvidence"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "SentinelKinds",
                      "value": [
                        "MicrosoftThreatProtection"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "DeviceEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "DeviceFileEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "DeviceImageLoadEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "DeviceInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "DeviceLogonEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "DeviceNetworkEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "DeviceNetworkInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "DeviceProcessEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "DeviceRegistryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "DeviceFileCertificateInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "EmailEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "EmailUrlInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "EmailAttachmentInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "EmailPostDeliveryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "UrlClickEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "IdentityLogonEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "IdentityQueryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                        "IdentityDirectoryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "CloudAppEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                      ]
                    },
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "AlertEvidence\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
                      ]
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "SecurityIncident",
                      "lastDataReceivedQuery": "SecurityIncident \n| where ProviderName == \"Microsoft 365 Defender\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "SecurityAlert",
                      "lastDataReceivedQuery": "SecurityAlert \n| where ProductName in(\"Microsoft Defender Advanced Threat Protection\",\"Office 365 Advanced Threat Protection\",\"Azure Advanced Threat Protection\",\"Microsoft Cloud App Security\",\"Microsoft 365 Defender\")\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "DeviceEvents",
                      "lastDataReceivedQuery": "DeviceEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "DeviceFileEvents",
                      "lastDataReceivedQuery": "DeviceFileEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "DeviceImageLoadEvents",
                      "lastDataReceivedQuery": "DeviceImageLoadEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "DeviceInfo",
                      "lastDataReceivedQuery": "DeviceInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "DeviceLogonEvents",
                      "lastDataReceivedQuery": "DeviceLogonEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "DeviceNetworkEvents",
                      "lastDataReceivedQuery": "DeviceNetworkEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "DeviceNetworkInfo",
                      "lastDataReceivedQuery": "DeviceNetworkInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "DeviceProcessEvents",
                      "lastDataReceivedQuery": "DeviceProcessEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "DeviceRegistryEvents",
                      "lastDataReceivedQuery": "DeviceRegistryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "DeviceFileCertificateInfo",
                      "lastDataReceivedQuery": "DeviceFileCertificateInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "EmailEvents",
                      "lastDataReceivedQuery": "EmailEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "EmailUrlInfo",
                      "lastDataReceivedQuery": "EmailUrlInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "EmailAttachmentInfo",
                      "lastDataReceivedQuery": "EmailAttachmentInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "EmailPostDeliveryEvents",
                      "lastDataReceivedQuery": "EmailPostDeliveryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "UrlClickEvents",
                      "lastDataReceivedQuery": "UrlClickEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "IdentityLogonEvents",
                      "lastDataReceivedQuery": "IdentityLogonEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "IdentityQueryEvents",
                      "lastDataReceivedQuery": "IdentityQueryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "IdentityDirectoryEvents",
                      "lastDataReceivedQuery": "IdentityDirectoryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "CloudAppEvents",
                      "lastDataReceivedQuery": "CloudAppEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "AlertEvidence",
                      "lastDataReceivedQuery": "AlertEvidence\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "Microsoft Defender XDR",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Microsoft Defender XDR",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "StaticUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Microsoft Defender XDR",
          "publisher": "Microsoft",
          "descriptionMarkdown": "Microsoft Defender XDR is a unified, natively integrated, pre- and post-breach enterprise defense suite that protects endpoint, identity, email, and applications and helps you detect, prevent, investigate, and automatically respond to sophisticated threats.\n\nMicrosoft Defender XDR suite includes: \n- Microsoft Defender for Endpoint\n- Microsoft Defender for Identity\n- Microsoft Defender for Office 365\n- Threat & Vulnerability Management\n- Microsoft Defender for Cloud Apps\n\nFor more information, see the [Microsoft Sentinel documentation](https://go.microsoft.com/fwlink/p/?linkid=2220004&wt.mc_id=sentinel_dataconnectordocs_content_cnl_csasci).",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Incidents",
              "baseQuery": "SecurityIncident \n| where ProviderName == \"Microsoft 365 Defender\""
            },
            {
              "metricName": "Total data received",
              "legend": "Alerts",
              "baseQuery": "SecurityAlert \n| where ProductName in(\"Microsoft Defender Advanced Threat Protection\",\"Office 365 Advanced Threat Protection\",\"Azure Advanced Threat Protection\",\"Microsoft Cloud App Security\",\"Microsoft 365 Defender\")"
            },
            {
              "metricName": "Total data received",
              "legend": "Endpoint Events",
              "baseQuery": "DeviceEvents| union isfuzzy=true DeviceFileEvents| union isfuzzy=true DeviceImageLoadEvents| union isfuzzy=true DeviceInfo| union isfuzzy=true DeviceLogonEvents| union isfuzzy=true DeviceNetworkEvents| union isfuzzy=true DeviceNetworkInfo| union isfuzzy=true DeviceProcessEvents| union isfuzzy=true DeviceRegistryEvents| union isfuzzy=true DeviceFileCertificateInfo"
            },
            {
              "metricName": "Total data received",
              "legend": "Office Events",
              "baseQuery": "EmailEvents| union isfuzzy=true EmailUrlInfo| union isfuzzy=true EmailAttachmentInfo| union isfuzzy=true EmailPostDeliveryEvents"
            },
            {
              "metricName": "Total data received",
              "legend": "Identity Events",
              "baseQuery": "IdentityLogonEvents| union isfuzzy=true IdentityQueryEvents| union isfuzzy=true IdentityDirectoryEvents"
            },
            {
              "metricName": "Total data received",
              "legend": "Cloud app Events",
              "baseQuery": "CloudAppEvents"
            },
            {
              "metricName": "Total data received",
              "legend": "Defender Alert Evidence",
              "baseQuery": "AlertEvidence"
            }
          ],
          "dataTypes": [
            {
              "name": "SecurityIncident",
              "lastDataReceivedQuery": "SecurityIncident \n| where ProviderName == \"Microsoft 365 Defender\"\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "SecurityAlert",
              "lastDataReceivedQuery": "SecurityAlert \n| where ProductName in(\"Microsoft Defender Advanced Threat Protection\",\"Office 365 Advanced Threat Protection\",\"Azure Advanced Threat Protection\",\"Microsoft Cloud App Security\",\"Microsoft 365 Defender\")\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "DeviceEvents",
              "lastDataReceivedQuery": "DeviceEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "DeviceFileEvents",
              "lastDataReceivedQuery": "DeviceFileEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "DeviceImageLoadEvents",
              "lastDataReceivedQuery": "DeviceImageLoadEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "DeviceInfo",
              "lastDataReceivedQuery": "DeviceInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "DeviceLogonEvents",
              "lastDataReceivedQuery": "DeviceLogonEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "DeviceNetworkEvents",
              "lastDataReceivedQuery": "DeviceNetworkEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "DeviceNetworkInfo",
              "lastDataReceivedQuery": "DeviceNetworkInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "DeviceProcessEvents",
              "lastDataReceivedQuery": "DeviceProcessEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "DeviceRegistryEvents",
              "lastDataReceivedQuery": "DeviceRegistryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "DeviceFileCertificateInfo",
              "lastDataReceivedQuery": "DeviceFileCertificateInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "EmailEvents",
              "lastDataReceivedQuery": "EmailEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "EmailUrlInfo",
              "lastDataReceivedQuery": "EmailUrlInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "EmailAttachmentInfo",
              "lastDataReceivedQuery": "EmailAttachmentInfo\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "EmailPostDeliveryEvents",
              "lastDataReceivedQuery": "EmailPostDeliveryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "UrlClickEvents",
              "lastDataReceivedQuery": "UrlClickEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "IdentityLogonEvents",
              "lastDataReceivedQuery": "IdentityLogonEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "IdentityQueryEvents",
              "lastDataReceivedQuery": "IdentityQueryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "IdentityDirectoryEvents",
              "lastDataReceivedQuery": "IdentityDirectoryEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "CloudAppEvents",
              "lastDataReceivedQuery": "CloudAppEvents\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "AlertEvidence",
              "lastDataReceivedQuery": "AlertEvidence\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "SentinelKinds",
              "value": [
                "MicrosoftThreatProtection"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "DeviceEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "DeviceFileEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "DeviceImageLoadEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "DeviceInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "DeviceLogonEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "DeviceNetworkEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "DeviceNetworkInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "DeviceProcessEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "DeviceRegistryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "DeviceFileCertificateInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "EmailEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "EmailUrlInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "EmailAttachmentInfo\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "EmailPostDeliveryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "UrlClickEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "IdentityLogonEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "IdentityQueryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)",
                "IdentityDirectoryEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "CloudAppEvents\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "AlertEvidence\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(7d)"
              ]
            }
          ],
          "id": "[variables('_uiConfigId1')]"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "PossiblePhishingwithCSL&NetworkSession_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query looks for malicious URL clicks in phishing email recognized by MDO in correlation with CommonSecurityLogs(CSL) & NetworkSession events. \nIf your workspace doesnt have one of the many data sources required for ASIM it may give informational error which can be safely ignored.",
                "displayName": "Possible Phishing with CSL and Network Sessions",
                "enabled": false,
                "query": "//SuspiciousUrlClicked\nAlertEvidence\n| where ServiceSource =~ \"Microsoft Defender for Office 365\"\n| where EntityType =~ \"Url\"\n| project AlertId, RemoteUrl\n| join kind=inner (\nAlertEvidence\n| where ServiceSource =~ \"Microsoft Defender for Office 365\"\n| where EntityType =~ \"MailMessage\"\n| project AlertId, NetworkMessageId\n)\non AlertId\n| distinct RemoteUrl, NetworkMessageId\n| join EmailEvents on NetworkMessageId\n| distinct RemoteUrl, NetworkMessageId, RecipientEmailAddress, RecipientObjectId\n| join kind = inner IdentityInfo on $left.RecipientObjectId  == $right.AccountObjectId\n| distinct RemoteUrl, NetworkMessageId, RecipientEmailAddress , RecipientObjectId, AccountSID\n| join kind = inner  \n(DeviceEvents\n| where ActionType =~ \"BrowserLaunchedToOpenUrl\"| where isnotempty(RemoteUrl)\n| project  UrlClickedByUserSid = RemoteUrl,\nInitiatingProcessAccountSid, DeviceName, DeviceId, InitiatingProcessFileName,\nInitiatingProcessAccountUpn, InitiatingProcessAccountName, InitiatingProcessAccountDomain\n)\non $left.AccountSID == $right.InitiatingProcessAccountSid and $left.RemoteUrl == $right.UrlClickedByUserSid\n| distinct  RemoteUrl, NetworkMessageId, RecipientEmailAddress, RecipientObjectId,\n AccountSID, UrlClickedByUserSid, DeviceName, DeviceId, InitiatingProcessFileName,\n InitiatingProcessAccountUpn, InitiatingProcessAccountName, InitiatingProcessAccountDomain\n|  join kind=inner\n(\n//Suspicious url clicked found in common security logs\nCommonSecurityLog\n| project TimeGenerated, DeviceVendor, DeviceProduct, DeviceAction, DestinationDnsDomain, DestinationIP, RequestURL, SourceIP, SourceHostName, RequestClientApplication\n) on $left.RemoteUrl== $right.RequestURL\n|  join kind=inner\n(\n//Find the relevant network sessions\n_Im_NetworkSession\n| where isnotempty(DstIpAddr)\n| where not(ipv4_is_private(DstIpAddr))\n| project TimeGenerated, SrcIpAddr, SrcPortNumber, DstIpAddr, DstPortNumber, DstBytes, SrcBytes\n) on  $left.DestinationIP == $right.DstIpAddr //The relevant network session being projected \n| summarize count() by TimeGenerated, RecipientEmailAddress, UrlClickedByUserSid, InitiatingProcessAccountUpn, InitiatingProcessAccountName, InitiatingProcessAccountDomain,\nDeviceName, InitiatingProcessFileName, DeviceProduct, DeviceAction, SourceIP, DestinationIP, RequestClientApplication\n| extend HostName = tostring(split(DeviceName, \".\")[0]), DomainIndex = toint(indexof(DeviceName, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(DeviceName, DomainIndex + 1), DeviceName)\n| extend RecipientEmailName = tostring(split(RecipientEmailAddress,'@',0)[0]), RecipientEmailUPNSuffix = tostring(split(RecipientEmailAddress,'@',1)[0])\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "AlertEvidence",
                      "EmailEvents",
                      "IdentityInfo",
                      "DeviceEvents",
                      "DeviceNetworkEvents"
                    ]
                  },
                  {
                    "connectorId": "Zscaler",
                    "dataTypes": [
                      "CommonSecurityLog"
                    ]
                  },
                  {
                    "connectorId": "Fortinet",
                    "dataTypes": [
                      "CommonSecurityLog"
                    ]
                  },
                  {
                    "connectorId": "CheckPoint",
                    "dataTypes": [
                      "CommonSecurityLog"
                    ]
                  },
                  {
                    "connectorId": "PaloAltoNetworks",
                    "dataTypes": [
                      "CommonSecurityLog"
                    ]
                  },
                  {
                    "connectorId": "AWSS3",
                    "datatypes": [
                      "AWSVPCFlow"
                    ]
                  },
                  {
                    "connectorId": "WindowsForwardedEvents",
                    "dataTypes": [
                      "WindowsEvent"
                    ]
                  },
                  {
                    "connectorId": "SecurityEvents",
                    "dataTypes": [
                      "SecurityEvent"
                    ]
                  },
                  {
                    "connectorId": "WindowsSecurityEvents",
                    "dataTypes": [
                      "SecurityEvent"
                    ]
                  },
                  {
                    "connectorId": "MicrosoftSysmonForLinux",
                    "dataTypes": [
                      "Syslog"
                    ]
                  },
                  {
                    "connectorId": "AzureNSG",
                    "dataTypes": [
                      "AzureDiagnostics"
                    ]
                  },
                  {
                    "connectorId": "AzureMonitor(VMInsights)",
                    "dataTypes": [
                      "VMConnection"
                    ]
                  },
                  {
                    "connectorId": "AIVectraStream",
                    "dataTypes": [
                      "VectraStream_CL"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess",
                  "CommandAndControl"
                ],
                "techniques": [
                  "T1566",
                  "T1102"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "InitiatingProcessAccountUpn"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "InitiatingProcessAccountName"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "InitiatingProcessAccountDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "RecipientEmailAddress"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "RecipientEmailName"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "RecipientEmailUPNSuffix"
                      }
                    ]
                  },
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "HostNameDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "SourceIP"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "DestinationIP"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 1",
                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
        "contentKind": "AnalyticsRule",
        "displayName": "Possible Phishing with CSL and Network Sessions",
        "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject2').analyticRuleTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SUNSPOTHashes_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject2').analyticRuleVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query uses Microsoft Defender for Endpoint data to look for IoCs associated with the SUNSPOT malware shared by Crowdstrike.\nMore details: \n  - https://www.crowdstrike.com/blog/sunspot-malware-technical-analysis/ \n  - https://techcommunity.microsoft.com/t5/azure-sentinel/monitoring-your-software-build-process-with-azure-sentinel/ba-p/2140807",
                "displayName": "SUNSPOT malware hashes",
                "enabled": false,
                "query": "let SUNSPOT_Hashes = dynamic([\"c45c9bda8db1d470f1fd0dcc346dc449839eb5ce9a948c70369230af0b3ef168\", \"0819db19be479122c1d48743e644070a8dc9a1c852df9a8c0dc2343e904da389\"]);\nunion isfuzzy=true(\nDeviceEvents\n| where InitiatingProcessSHA256 in (SUNSPOT_Hashes)),\n(DeviceImageLoadEvents\n| where InitiatingProcessSHA256 in (SUNSPOT_Hashes))\n| extend timestamp=TimeGenerated\n| extend HostName = tostring(split(DeviceName, \".\")[0]), DomainIndex = toint(indexof(DeviceName, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(DeviceName, DomainIndex + 1), DeviceName)\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceImageLoadEvents",
                      "DeviceEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence"
                ],
                "techniques": [
                  "T1554"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "HostNameDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "InitiatingProcessAccountUpn"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "InitiatingProcessAccountName"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "InitiatingProcessAccountDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject2').analyticRuleId2,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 2",
                "parentId": "[variables('analyticRuleObject2').analyticRuleId2]",
                "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject2').analyticRuleVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
        "contentKind": "AnalyticsRule",
        "displayName": "SUNSPOT malware hashes",
        "contentProductId": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "id": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject3').analyticRuleTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "PotentialBuildProcessCompromiseMDE_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject3').analyticRuleVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "The query looks for source code files being modified immediately after a build process is started. The purpose of this is to look for malicious code injection during the build process. This query uses Microsoft Defender for Endpoint telemetry.\nMore details: https://techcommunity.microsoft.com/t5/azure-sentinel/monitoring-the-software-supply-chain-with-azure-sentinel/ba-p/2176463",
                "displayName": "Potential Build Process Compromise - MDE",
                "enabled": false,
                "query": "// How far back to look for events from\nlet timeframe = 1d;\n// How close together build events and file modifications should occur to alert (make this smaller to reduce FPs)\nlet time_window = 5m;\n// Edit this to include build processes used\nlet build_processes = dynamic([\"MSBuild.exe\", \"dotnet.exe\", \"VBCSCompiler.exe\"]);\n// Include any processes that you want to allow to edit files during/around the build process\nlet allow_list = dynamic([]);\nDeviceProcessEvents\n| where TimeGenerated > ago(timeframe)\n// Look for build process starts\n| where FileName has_any (build_processes)\n| summarize by BuildParentProcess=InitiatingProcessFileName, BuildProcess=FileName, BuildAccount = AccountName, DeviceName, BuildCommand=ProcessCommandLine, \ntimekey= bin(TimeGenerated, time_window), BuildProcessTime=TimeGenerated\n| join kind=inner(\nDeviceFileEvents\n| where TimeGenerated > ago(timeframe)\n| where InitiatingProcessFileName !in (allow_list)\n| where ActionType == \"FileCreated\"  or ActionType == \"FileModified\"\n// Look for code files, edit this to include file extensions used in build.\n| where FileName endswith \".cs\" or FileName endswith \".cpp\"\n| summarize by FileEditParentProcess=InitiatingProcessParentFileName, FileEditAccount = InitiatingProcessAccountName, FileEditDomain = InitiatingProcessAccountDomain, FileEditUpn = InitiatingProcessAccountUpn, \nDeviceName, FileEdited=FileName, FileEditProcess=InitiatingProcessFileName, timekey= bin(TimeGenerated, time_window), FileEditTime=TimeGenerated)\n// join where build processes and file modifications seen at same time on same host\non timekey, DeviceName\n// Limit to only where the file edit happens after the build process starts\n| where BuildProcessTime <= FileEditTime\n| summarize make_set(FileEdited), make_set(FileEditProcess) by timekey, DeviceName, BuildParentProcess, BuildProcess, FileEditAccount, FileEditDomain, FileEditUpn\n| extend HostName = tostring(split(DeviceName, \".\")[0]), DomainIndex = toint(indexof(DeviceName, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(DeviceName, DomainIndex + 1), DeviceName)\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents",
                      "DeviceFileEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence"
                ],
                "techniques": [
                  "T1554"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "HostNameDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "FileEditUpn"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "FileEditAccount"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "FileEditDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject3').analyticRuleId3,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 3",
                "parentId": "[variables('analyticRuleObject3').analyticRuleId3]",
                "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject3').analyticRuleVersion3]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
        "contentKind": "AnalyticsRule",
        "displayName": "Potential Build Process Compromise - MDE",
        "contentProductId": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
        "id": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
        "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject4').analyticRuleTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SolarWinds_TEARDROP_Process-IOCs_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject4').analyticRuleVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies SolarWinds TEARDROP memory-only dropper IOCs in Window's defender Exploit Guard activity\nReferences:\n- https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\n- https://gist.github.com/olafhartong/71ffdd4cab4b6acd5cbcd1a0691ff82f",
                "displayName": "TEARDROP memory-only dropper",
                "enabled": false,
                "query": "DeviceEvents\n| where ActionType has \"ExploitGuardNonMicrosoftSignedBlocked\"\n| where InitiatingProcessFileName has \"svchost.exe\" and FileName has \"NetSetupSvc.dll\"\n| extend HashAlgorithm = \"SHA1\"\n| extend HostName = tostring(split(DeviceName, \".\")[0]), DomainIndex = toint(indexof(DeviceName, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(DeviceName, DomainIndex + 1), DeviceName)\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Execution",
                  "Persistence",
                  "DefenseEvasion"
                ],
                "techniques": [
                  "T1543",
                  "T1059",
                  "T1027"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "HostNameDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "InitiatingProcessAccountUpn"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "InitiatingProcessAccountName"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "InitiatingProcessAccountDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "FileHash",
                    "fieldMappings": [
                      {
                        "identifier": "Algorithm",
                        "columnName": "HashAlgorithm"
                      },
                      {
                        "identifier": "Value",
                        "columnName": "InitiatingProcessSHA1"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject4').analyticRuleId4,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 4",
                "parentId": "[variables('analyticRuleObject4').analyticRuleId4]",
                "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject4').analyticRuleVersion4]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
        "contentKind": "AnalyticsRule",
        "displayName": "TEARDROP memory-only dropper",
        "contentProductId": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
        "id": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
        "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject5').analyticRuleTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SolarWinds_SUNBURST_Network-IOCs_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject5').analyticRuleVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies SolarWinds SUNBURST domain beacon IOCs in DeviceNetworkEvents\nReferences:\n- https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\n- https://gist.github.com/olafhartong/71ffdd4cab4b6acd5cbcd1a0691ff82f",
                "displayName": "SUNBURST network beacons",
                "enabled": false,
                "query": "let SunburstURL=dynamic([\"panhardware.com\",\"databasegalore.com\",\"avsvmcloud.com\",\"freescanonline.com\",\"thedoccloud.com\",\"deftsecurity.com\"]);\nDeviceNetworkEvents\n| where ActionType == \"ConnectionSuccess\"\n| where RemoteUrl in(SunburstURL)\n| extend HashAlgorithm = 'MD5'\n| extend HostName = tostring(split(DeviceName, \".\")[0]), DomainIndex = toint(indexof(DeviceName, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(DeviceName, DomainIndex + 1), DeviceName)\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceNetworkEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Execution",
                  "Persistence",
                  "InitialAccess"
                ],
                "techniques": [
                  "T1195",
                  "T1059",
                  "T1546"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "HostNameDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "InitiatingProcessAccountUpn"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "InitiatingProcessAccountName"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "InitiatingProcessAccountDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "RemoteIP"
                      }
                    ]
                  },
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "identifier": "Url",
                        "columnName": "RemoteUrl"
                      }
                    ]
                  },
                  {
                    "entityType": "FileHash",
                    "fieldMappings": [
                      {
                        "identifier": "Algorithm",
                        "columnName": "HashAlgorithm"
                      },
                      {
                        "identifier": "Value",
                        "columnName": "InitiatingProcessMD5"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject5').analyticRuleId5,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 5",
                "parentId": "[variables('analyticRuleObject5').analyticRuleId5]",
                "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject5').analyticRuleVersion5]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
        "contentKind": "AnalyticsRule",
        "displayName": "SUNBURST network beacons",
        "contentProductId": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
        "id": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
        "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject6').analyticRuleTemplateSpecName6]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SolarWinds_SUNBURST_&_SUPERNOVA_File-IOCs_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject6').analyticRuleVersion6]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Identifies SolarWinds SUNBURST and SUPERNOVA backdoor file hash IOCs in DeviceFileEvents\nReferences:\n- https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\n- https://gist.github.com/olafhartong/71ffdd4cab4b6acd5cbcd1a0691ff82f",
                "displayName": "SUNBURST and SUPERNOVA backdoor hashes",
                "enabled": false,
                "query": "let SunburstMD5=dynamic([\"b91ce2fa41029f6955bff20079468448\",\"02af7cec58b9a5da1c542b5a32151ba1\",\"2c4a910a1299cdae2a4e55988a2f102e\",\"846e27a652a5e1bfbd0ddd38a16dc865\",\"4f2eb62fa529c0283b28d05ddd311fae\"]);\nlet SupernovaMD5=\"56ceb6d0011d87b6e4d7023d7ef85676\";\nDeviceFileEvents\n| where MD5 in(SunburstMD5) or MD5 in(SupernovaMD5)\n| extend HashAlgorithm = \"MD5\"\n| extend HostName = tostring(split(DeviceName, \".\")[0]), DomainIndex = toint(indexof(DeviceName, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(DeviceName, DomainIndex + 1), DeviceName)\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceFileEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Execution",
                  "Persistence",
                  "InitialAccess"
                ],
                "techniques": [
                  "T1195",
                  "T1059",
                  "T1546"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "HostNameDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "InitiatingProcessAccountUpn"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "InitiatingProcessAccountName"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "InitiatingProcessAccountDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "FileHash",
                    "fieldMappings": [
                      {
                        "identifier": "Algorithm",
                        "columnName": "HashAlgorithm"
                      },
                      {
                        "identifier": "Value",
                        "columnName": "MD5"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject6').analyticRuleId6,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 6",
                "parentId": "[variables('analyticRuleObject6').analyticRuleId6]",
                "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject6').analyticRuleVersion6]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
        "contentKind": "AnalyticsRule",
        "displayName": "SUNBURST and SUPERNOVA backdoor hashes",
        "contentProductId": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
        "id": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
        "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject7').analyticRuleTemplateSpecName7]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AVdetectionsrelatedtoUkrainebasedthreats_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject7').analyticRuleVersion7]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query looks for Microsoft Defender AV detections for malware observed in relation to the war in Ukraine.\n  Ref: https://msrc-blog.microsoft.com/2022/02/28/analysis-resources-cyber-threat-activity-ukraine/ ",
                "displayName": "AV detections related to Ukraine threats",
                "enabled": false,
                "query": "let UA_threats = dynamic([\"FoxBlade\", \"WhisperGate\", \"Lasainraw\", \"SonicVote\", \"CaddyWiper\", \"AprilAxe\", \"FiberLake\", \"Industroyer\", \"DesertBlade\"]);\nSecurityAlert\n| where ProviderName =~ \"MDATP\"\n| extend ThreatFamilyName = tostring(parse_json(ExtendedProperties).ThreatFamilyName)\n| where ThreatFamilyName in~ (UA_threats)\n| extend HostName = tostring(split(CompromisedEntity, \".\")[0]), DomainIndex = toint(indexof(CompromisedEntity, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(CompromisedEntity, DomainIndex + 1), CompromisedEntity)\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "SecurityAlert"
                    ]
                  }
                ],
                "tactics": [
                  "Impact"
                ],
                "techniques": [
                  "T1485"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "CompromisedEntity"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "HostNameDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject7').analyticRuleId7,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 7",
                "parentId": "[variables('analyticRuleObject7').analyticRuleId7]",
                "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject7').analyticRuleVersion7]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
        "contentKind": "AnalyticsRule",
        "displayName": "AV detections related to Ukraine threats",
        "contentProductId": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
        "id": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
        "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject8').analyticRuleTemplateSpecName8]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AVTarrask_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject8').analyticRuleVersion8]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query looks for Microsoft Defender AV detections related to Tarrask malware. In Microsoft Sentinel, the SecurityAlerts table includes only the Device Name of the affected device, this query joins the DeviceInfo table to clearly connect other information such as Device group, ip, logged-on users etc. \n This would allow the Microsoft Sentinel analyst to have more context related to the alert, if available.\n Reference: https://www.microsoft.com/security/blog/2022/04/12/tarrask-malware-uses-scheduled-tasks-for-defense-evasion/",
                "displayName": "AV detections related to Tarrask malware",
                "enabled": false,
                "query": "let Tarrask_threats = dynamic([\"HackTool:Win64/Tarrask!MS\", \"HackTool:Win64/Ligolo!MSR\", \"Behavior:Win32/ScheduledTaskHide.A\", \"Tarrask\"]);\nDeviceInfo\n| extend DeviceName = tolower(DeviceName)\n| join kind=rightouter ( SecurityAlert\n| where ProviderName =~ \"MDATP\"\n| extend ThreatName = tostring(parse_json(ExtendedProperties).ThreatName)\n| extend ThreatFamilyName = tostring(parse_json(ExtendedProperties).ThreatFamilyName)\n| where ThreatName in~ (Tarrask_threats) or ThreatFamilyName in~ (Tarrask_threats)\n| extend CompromisedEntity = tolower(CompromisedEntity)\n) on $left.DeviceName == $right.CompromisedEntity\n| summarize by DisplayName, ThreatName, ThreatFamilyName, PublicIP, AlertSeverity, Description, tostring(LoggedOnUsers), DeviceId, TenantId , bin(TimeGenerated, 1d), CompromisedEntity, tostring(LoggedOnUsers), ProductName, Entities\n| extend HostName = tostring(split(CompromisedEntity, \".\")[0]), DomainIndex = toint(indexof(CompromisedEntity, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(CompromisedEntity, DomainIndex + 1), CompromisedEntity)\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "SecurityAlert"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence"
                ],
                "techniques": [
                  "T1053"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "CompromisedEntity"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "HostNameDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "PublicIP"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject8').analyticRuleId8,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 8",
                "parentId": "[variables('analyticRuleObject8').analyticRuleId8]",
                "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject8').analyticRuleVersion8]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
        "contentKind": "AnalyticsRule",
        "displayName": "AV detections related to Tarrask malware",
        "contentProductId": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
        "id": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
        "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject9').analyticRuleTemplateSpecName9]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AVSpringShell_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject9').analyticRuleVersion9]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query looks for Microsoft Defender AV detections related to the SpringShell vulnerability. In Microsoft Sentinel, the SecurityAlerts table includes only the Device Name of the affected device.\n  This query joins the DeviceInfo table to clearly connect other information such as device group, IP, logged-on users, etc. This would allow the Microsoft Sentinel analyst to have more context related to the alert, if available.\n  Reference: https://www.microsoft.com/security/blog/2022/04/04/springshell-rce-vulnerability-guidance-for-protecting-against-and-detecting-cve-2022-22965/",
                "displayName": "AV detections related to SpringShell Vulnerability",
                "enabled": false,
                "query": "let SpringShell_threats = dynamic([\"Trojan:Python/SpringShellExpl\", \"Exploit:Python/SpringShell\", \"Backdoor:PHP/Remoteshell.V\", \"SpringShell\"]);\nDeviceInfo\n| extend DeviceName = tolower(DeviceName)\n| join kind=inner ( SecurityAlert\n| where ProviderName =~ \"MDATP\"\n| extend ThreatName = tostring(parse_json(ExtendedProperties).ThreatName)\n| extend ThreatFamilyName = tostring(parse_json(ExtendedProperties).ThreatFamilyName)\n| where ThreatName in~ (SpringShell_threats) or ThreatFamilyName in~ (SpringShell_threats)\n| extend CompromisedEntity = tolower(CompromisedEntity)\n) on $left.DeviceName == $right.CompromisedEntity\n| summarize by DisplayName, ThreatName, ThreatFamilyName, PublicIP, AlertSeverity, Description, tostring(LoggedOnUsers), DeviceId, TenantId , bin(TimeGenerated, 1d), CompromisedEntity, tostring(LoggedOnUsers), ProductName, Entities\n| extend HostName = tostring(split(CompromisedEntity, \".\")[0]), DomainIndex = toint(indexof(CompromisedEntity, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(CompromisedEntity, DomainIndex + 1), CompromisedEntity)\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "SecurityAlert"
                    ]
                  }
                ],
                "tactics": [
                  "InitialAccess"
                ],
                "techniques": [
                  "T1190"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "CompromisedEntity"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "HostNameDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "PublicIP"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject9').analyticRuleId9,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 9",
                "parentId": "[variables('analyticRuleObject9').analyticRuleId9]",
                "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject9').analyticRuleVersion9]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
        "contentKind": "AnalyticsRule",
        "displayName": "AV detections related to SpringShell Vulnerability",
        "contentProductId": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
        "id": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
        "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject10').analyticRuleTemplateSpecName10]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "PossibleWebpBufferOverflow_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject10').analyticRuleVersion10]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query looks at device, process, and network events from Defender for Endpoint that may be vulnerable to buffer overflow defined in CVE-2023-4863. Results are not an indicator of malicious activity.",
                "displayName": "Execution of software vulnerable to webp buffer overflow of CVE-2023-4863",
                "enabled": false,
                "query": "//CVE-2023-4863 Process activity with .webp files on devices where CVE-2023-4863 is unpatched\n//This query shows all process activity with .webp files on vulnerable machines and is not an indicator of malicious activity\nlet VulnDevices = DeviceTvmSoftwareVulnerabilities\n    | where CveId == \"CVE-2023-4863\"\n    | distinct DeviceId;\nunion DeviceProcessEvents, DeviceNetworkEvents, DeviceEvents\n| where DeviceId in (VulnDevices) and InitiatingProcessCommandLine has(\".webp\") or ProcessCommandLine has(\".webp\")\n| extend Name = tostring(split(AccountUpn, \"@\")[0]), UPNSuffix = tostring(split(AccountUpn, \"@\")[1])\n| extend HostName = tostring(split(DeviceName, \".\")[0]), DomainIndex = toint(indexof(DeviceName, '.'))\n| extend HostNameDomain = iff(DomainIndex != -1, substring(DeviceName, DomainIndex + 1), DeviceName)",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents",
                      "DeviceNetworkEvents",
                      "DeviceEvents",
                      "DeviceTvmSoftwareVulnerabilities"
                    ]
                  }
                ],
                "tactics": [
                  "Execution"
                ],
                "techniques": [
                  "T1203"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "HostNameDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "AccountUpn"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "Name"
                      },
                      {
                        "identifier": "UPNSuffix",
                        "columnName": "UPNSuffix"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "LocalIP"
                      }
                    ]
                  },
                  {
                    "entityType": "Process",
                    "fieldMappings": [
                      {
                        "identifier": "ProcessId",
                        "columnName": "ProcessId"
                      }
                    ]
                  },
                  {
                    "entityType": "Process",
                    "fieldMappings": [
                      {
                        "identifier": "ProcessId",
                        "columnName": "InitiatingProcessId"
                      }
                    ]
                  },
                  {
                    "entityType": "Process",
                    "fieldMappings": [
                      {
                        "identifier": "CommandLine",
                        "columnName": "ProcessCommandLine"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "SingleAlert"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Possible exploitation of CVE-2023-4863"
                },
                "incidentConfiguration": {
                  "createIncident": false,
                  "groupingConfiguration": {
                    "matchingMethod": "Selected",
                    "enabled": false,
                    "lookbackDuration": "PT5H",
                    "reopenClosedIncident": false,
                    "groupByEntities": [
                      "Account"
                    ]
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject10').analyticRuleId10,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 10",
                "parentId": "[variables('analyticRuleObject10').analyticRuleId10]",
                "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject10').analyticRuleVersion10]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
        "contentKind": "AnalyticsRule",
        "displayName": "Execution of software vulnerable to webp buffer overflow of CVE-2023-4863",
        "contentProductId": "[variables('analyticRuleObject10')._analyticRulecontentProductId10]",
        "id": "[variables('analyticRuleObject10')._analyticRulecontentProductId10]",
        "version": "[variables('analyticRuleObject10').analyticRuleVersion10]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject11').analyticRuleTemplateSpecName11]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DeimosComponentExecution_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject11').analyticRuleVersion11]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Jupyter, otherwise known as SolarMarker, is a malware family and cluster of components known for its info-stealing and backdoor capabilities that mainly proliferates through search engine optimization manipulation and malicious advertising in order to successfully encourage users to download malicious templates and documents. This malware has been popular since 2020 and currently is still active as of 2021.",
                "displayName": "Deimos Component Execution",
                "enabled": false,
                "query": "DeviceEvents   \n| where InitiatingProcessFileName =~ \"powershell.exe\"\n| where ActionType == \"AmsiScriptContent\"\n| where AdditionalFields endswith '[mArS.deiMos]::inteRaCt()\"}'\n| project InitiatingProcessParentFileName, InitiatingProcessFileName, InitiatingProcessCommandLine, ActionType, AdditionalFields, DeviceName\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Execution",
                  "Collection",
                  "Exfiltration"
                ],
                "techniques": [
                  "T1059",
                  "T1005",
                  "T1020"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject11').analyticRuleId11,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 11",
                "parentId": "[variables('analyticRuleObject11').analyticRuleId11]",
                "contentId": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject11').analyticRuleVersion11]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
        "contentKind": "AnalyticsRule",
        "displayName": "Deimos Component Execution",
        "contentProductId": "[variables('analyticRuleObject11')._analyticRulecontentProductId11]",
        "id": "[variables('analyticRuleObject11')._analyticRulecontentProductId11]",
        "version": "[variables('analyticRuleObject11').analyticRuleVersion11]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject12').analyticRuleTemplateSpecName12]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "ImminentRansomware_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject12').analyticRuleVersion12]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query checks for a series of commands that are commonly used by attackers to disable security tools and system recovery tools before deploying Macaw ransomware in an organization.",
                "displayName": "Imminent Ransomware",
                "enabled": false,
                "query": "_ASim_ProcessEvent \n// Pivot on specific commands \n| where CommandLine has_any(\"-ExclusionPath\", \"Set-MpPreference\", \"advfirewall\", \"-ExclusionExtension\", \n\"-EnableControlledFolderAccess\", \"windefend\", \"onstart\", \"bcdedit\", \"Startup\") \n// Making list of found commands \n| summarize CommandLine = make_set(CommandLine, 10000) by DvcId, Dvc, bin(TimeGenerated, 6h) \n// Extending columns for later aggregration, based on TTP\n| extend StartUpExclusionPath = iff(CommandLine has_all(\"-ExclusionPath\", \"Startup\"), 1, 0) \n| extend DefenderTamp = iff(CommandLine has \"Set-MpPreference\" \nand CommandLine has_any( \n\"-SevereThreatDefaultAction 6\" \n\"-HighThreatDefaultAction 6\", \n\"-ModerateThreatDefaultAction 6\", \n\"-LowThreatDefaultAction 6\" \n\"-ScanScheduleDay 8\"), 1, 0) \n| extend NetshFirewallTampering = iff(CommandLine has_all( \"netsh\", \"advfirewall\", \"allprofiles state off\"), 1, 0) \n| extend BatExclusion = iff(CommandLine has_all(\"-ExclusionExtension\", \".bat\"), 1, 0) \n| extend ExeExclusion = iff(CommandLine has_all(\"-ExclusionExtension\", \".exe\"), 1, 0) \n| extend DisableControlledFolderAccess = iff(CommandLine has_all(\"-EnableControlledFolderAccess\", \"Disabled\"), 1, 0) \n| extend ScDeleteDefend = iff(CommandLine has_all(\"sc\", \"delete\", \"windefend\"), 1, 0) \n| extend BootTampering = iff(CommandLine has_all(\"bcdedit\", \"default\") and CommandLine has_any (\"recoveryenabled No\", \"bootstatuspolicy ignoreallfailures\"), 1, 0) \n| extend SchTasks = iff(CommandLine has_all(\"/sc\", \"onstart\", \"system\", \"/create\", \"/delay\"), 1, 0) \n// Summarizing found commands \n| summarize by NetshFirewallTampering ,BatExclusion, ExeExclusion, DisableControlledFolderAccess, ScDeleteDefend, SchTasks, BootTampering, DefenderTamp, StartUpExclusionPath, DvcId, Dvc, TimeGenerated \n// Adding up each piece of evidence \n| extend EvidenceCount = NetshFirewallTampering + BatExclusion + ExeExclusion + DisableControlledFolderAccess + ScDeleteDefend + SchTasks + BootTampering + DefenderTamp + StartUpExclusionPath \n| where EvidenceCount > 4\n| extend HostName = iff(Dvc has '.', substring(Dvc, 0, indexof(Dvc, '.')), Dvc)\n| extend DnsDomain = iff(Dvc has '.', substring(Dvc, indexof(Dvc, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "tactics": [
                  "DefenseEvasion",
                  "Persistence"
                ],
                "techniques": [
                  "T1562",
                  "T1547"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "Dvc"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject12').analyticRuleId12,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 12",
                "parentId": "[variables('analyticRuleObject12').analyticRuleId12]",
                "contentId": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject12').analyticRuleVersion12]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
        "contentKind": "AnalyticsRule",
        "displayName": "Imminent Ransomware",
        "contentProductId": "[variables('analyticRuleObject12')._analyticRulecontentProductId12]",
        "id": "[variables('analyticRuleObject12')._analyticRulecontentProductId12]",
        "version": "[variables('analyticRuleObject12').analyticRuleVersion12]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject13').analyticRuleTemplateSpecName13]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MaliciousCMDExecutionByJava_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject13').analyticRuleVersion13]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query was originally published in the threat analytics report, Sysrv botnet evolution.\nSysrv is a Go-based botnet that targets both Windows and Linux servers, and steals resources to mine cryptocurrency.\nThe following query finds instances of the Java process being used to execute cmd.exe, and download and execute a PowerShell script.",
                "displayName": "Java Executing cmd to run Powershell",
                "enabled": false,
                "query": "DeviceProcessEvents                         \n| where InitiatingProcessFileName == 'java.exe' and FileName == 'cmd.exe' \nand ProcessCommandLine has_all('powershell iex','DownloadString')\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Execution"
                ],
                "techniques": [
                  "T1059"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject13').analyticRuleId13,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 13",
                "parentId": "[variables('analyticRuleObject13').analyticRuleId13]",
                "contentId": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject13').analyticRuleVersion13]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
        "contentKind": "AnalyticsRule",
        "displayName": "Java Executing cmd to run Powershell",
        "contentProductId": "[variables('analyticRuleObject13')._analyticRulecontentProductId13]",
        "id": "[variables('analyticRuleObject13')._analyticRulecontentProductId13]",
        "version": "[variables('analyticRuleObject13').analyticRuleVersion13]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject14').analyticRuleTemplateSpecName14]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "C2-NamedPipe_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject14').analyticRuleVersion14]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject14')._analyticRulecontentId14]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects the creation of a named pipe used by known APT malware.\nReference - https://docs.microsoft.com/openspecs/windows_protocols/ms-wpo/4de75e21-36fd-440a-859b-75accc74487c",
                "displayName": "C2-NamedPipe",
                "enabled": false,
                "query": "// this is what should be constantly tweaked with default C2 framework names, search uses has_any (wildcard)\nlet badPipeNames = pack_array(\n    '\\\\psexec',                                     // PSexec default pipe\n    '\\\\paexec',                                     // PSexec default pipe\n    '\\\\remcom',                                     // PSexec default pipe\n    '\\\\csexec',                                     // PSexec default pipe\n    '\\\\isapi_http',                                 // Uroburos Malware Named Pipe\n    '\\\\isapi_dg',                                   // Uroburos Malware Named Pipe\n    '\\\\isapi_dg2',                                  // Uroburos Malware Named Pipe\n    '\\\\sdlrpc',                                     // Cobra Trojan Named Pipe http://goo.gl/8rOZUX\n    '\\\\ahexec',                                     // Sofacy group malware\n    '\\\\winsession',                                 // Wild Neutron APT malware https://goo.gl/pivRZJ\n    '\\\\lsassw',                                     // Wild Neutron APT malware https://goo.gl/pivRZJ\n    '\\\\46a676ab7f179e511e30dd2dc41bd388',           // Project Sauron https://goo.gl/eFoP4A\n    '\\\\9f81f59bc58452127884ce513865ed20',           // Project Sauron https://goo.gl/eFoP4A\n    '\\\\e710f28d59aa529d6792ca6ff0ca1b34',           // Project Sauron https://goo.gl/eFoP4A\n    '\\\\rpchlp_3',                                   // Project Sauron https://goo.gl/eFoP4A - Technical Analysis Input\n    '\\\\NamePipe_MoreWindows',                       // US-CERT Alert - RedLeaves https://www.us-cert.gov/ncas/alerts/TA17-117A\n    '\\\\pcheap_reuse',                               // Pipe used by Equation Group malware 77486bb828dba77099785feda0ca1d4f33ad0d39b672190079c508b3feb21fb0\n    '\\\\gruntsvc',                                   // Covenant default named pipe\n    '\\\\583da945-62af-10e8-4902-a8f205c72b2e',       // SolarWinds SUNBURST malware report https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\n    '\\\\bizkaz',                                     // Snatch Ransomware https://thedfirreport.com/2020/06/21/snatch-ransomware/\n    '\\\\atctl',                                      // https://www.virustotal.com/#/file/a4ddb2664a6c87a1d3c5da5a5a32a5df9a0b0c8f2e951811bd1ec1d44d42ccf1/detection\n    '\\\\userpipe',                                   // ruag apt case\n    '\\\\iehelper',                                   // ruag apt case\n    '\\\\sdlrpc',                                     // project cobra https://www.gdatasoftware.com/blog/2015/01/23926-analysis-of-project-cobra\n    '\\\\comnap',                                     // https://www.gdatasoftware.com/blog/2015/01/23926-analysis-of-project-cobra\n    '\\\\lsadump',                                    // Cred Dump-Tools Named Pipes\n    '\\\\cachedump',                                  // Cred Dump-Tools Named Pipes\n    '\\\\wceservicepipe',                             // Cred Dump-Tools Named Pipes\n    '\\\\jaccdpqnvbrrxlaf',                           // PoshC2 default named pipe\n    '\\\\svcctl',                                     // CrackMapExec default named pipe\n    '\\\\csexecsvc'                                   // CSEXEC default named pipe\n    '\\\\status_',                                    // CS default named pipes https://github.com/Neo23x0/sigma/issues/253\n    '\\\\MSSE-',                                      // CobaltStrike default named pipe\n    '\\\\status_',                                    // CobaltStrike default named pipe\n    '\\\\msagent_',                                   // (target) CobaltStrike default named pipe\n    '\\\\postex_ssh_',                                // CobaltStrike default named pipe\n    '\\\\postex_',                                    // CobaltStrike default named pipe\n    '\\\\Posh'                                        // PoshC2 default named pipe\n);\nDeviceEvents\n| where ActionType == \"NamedPipeEvent\"\n| extend ParsedFields=parse_json(AdditionalFields)\n| where ParsedFields.FileOperation == \"File created\"\n| where ParsedFields.PipeName has_any (badPipeNames)\n| project TimeGenerated, ActionType, DeviceName, InitiatingProcessAccountDomain, InitiatingProcessAccountName, InitiatingProcessFolderPath, InitiatingProcessCommandLine, ParsedFields.FileOperation, ParsedFields.PipeName\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceEvents"
                    ]
                  }
                ],
                "tactics": [
                  "CommandAndControl"
                ],
                "techniques": [
                  "T1105"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject14').analyticRuleId14,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 14",
                "parentId": "[variables('analyticRuleObject14').analyticRuleId14]",
                "contentId": "[variables('analyticRuleObject14')._analyticRulecontentId14]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject14').analyticRuleVersion14]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject14')._analyticRulecontentId14]",
        "contentKind": "AnalyticsRule",
        "displayName": "C2-NamedPipe",
        "contentProductId": "[variables('analyticRuleObject14')._analyticRulecontentProductId14]",
        "id": "[variables('analyticRuleObject14')._analyticRulecontentProductId14]",
        "version": "[variables('analyticRuleObject14').analyticRuleVersion14]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject15').analyticRuleTemplateSpecName15]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DoppelPaymerProcDump_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject15').analyticRuleVersion15]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject15')._analyticRulecontentId15]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query was originally published in the threat analytics report, Doppelpaymer: More human-operated ransomware. There is also a related blog.\nDoppelPaymer is ransomware that is spread manually by human operators. These operators have exhibited extensive knowledge of system administration and common network security misconfigurations. For example, they use SysInternal utilities such as ProcDump to dump credentials from LSASS. They often use these stolen credentials to turn off security software, run malicious commands, and spread malware throughout an organization.\nThe following query detects ProcDump being used to dump credentials from LSASS.\nThe See also section below lists links to other queries associated with DoppelPaymer.\nReferences:\nhttps://msrc-blog.microsoft.com/2019/11/20/customer-guidance-for-the-dopplepaymer-ransomware/\nhttps://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Ransom:Win32/DoppelPaymer.KM!MTB\nhttps://docs.microsoft.com/sysinternals/downloads/procdump\nhttps://docs.microsoft.com/windows-server/security/credentials-protection-and-management/configuring-additional-lsa-protection",
                "displayName": "DopplePaymer Procdump",
                "enabled": false,
                "query": "// Dumping of LSASS memory using procdump\nDeviceProcessEvents\n// Command lines that include \"lsass\" and -accepteula or -ma flags used in procdump\n| where (ProcessCommandLine has \"lsass\" and (ProcessCommandLine has \"-accepteula\" or\nProcessCommandLine contains \"-ma\"))\n// Omits possible FPs where the full command is just \"procdump.exe lsass\"\nor (FileName in~ ('procdump.exe','procdump64.exe') and ProcessCommandLine has 'lsass')\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "CredentialAccess"
                ],
                "techniques": [
                  "T1003"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject15').analyticRuleId15,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 15",
                "parentId": "[variables('analyticRuleObject15').analyticRuleId15]",
                "contentId": "[variables('analyticRuleObject15')._analyticRulecontentId15]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject15').analyticRuleVersion15]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject15')._analyticRulecontentId15]",
        "contentKind": "AnalyticsRule",
        "displayName": "DopplePaymer Procdump",
        "contentProductId": "[variables('analyticRuleObject15')._analyticRulecontentProductId15]",
        "id": "[variables('analyticRuleObject15')._analyticRulecontentProductId15]",
        "version": "[variables('analyticRuleObject15').analyticRuleVersion15]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject16').analyticRuleTemplateSpecName16]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "LSASSCredDumpProcdump_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject16').analyticRuleVersion16]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject16')._analyticRulecontentId16]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query was originally published in the threat analytics report, \"Exchange Server zero-days exploited in the wild\".\nIn early March 2021, Microsoft released patches for four different zero-day vulnerabilities affecting Microsoft Exchange Server. The vulnerabilities were being used in a coordinated attack. For more information on the vulnerabilities, visit the following links:\n1. CVE-2021-26855\n2. CVE-2021-26857\n3. CVE-2021-26858\n4. CVE-2021-27065\nThe following query looks for evidence of Procdump being used to dump credentials from LSASS, the Local Security Authentication Server. This might indicate an attacker has compromised user accounts.\nMore queries related to this threat can be found under the See also section of this page.\nReference - https://msrc-blog.microsoft.com/2021/03/02/multiple-security-updates-released-for-exchange-server/",
                "displayName": "LSASS Credential Dumping with Procdump",
                "enabled": false,
                "query": "DeviceProcessEvents \n| where (FileName has_any (\"procdump.exe\", \"procdump64.exe\") and ProcessCommandLine has \"lsass\") or \n// Looking for Accepteula flag or Write a dump file with all process memory\n(ProcessCommandLine has \"lsass.exe\" and (ProcessCommandLine has \"-accepteula\" or ProcessCommandLine contains \"-ma\"))\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "CredentialAccess"
                ],
                "techniques": [
                  "T1003"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject16').analyticRuleId16,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 16",
                "parentId": "[variables('analyticRuleObject16').analyticRuleId16]",
                "contentId": "[variables('analyticRuleObject16')._analyticRulecontentId16]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject16').analyticRuleVersion16]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject16')._analyticRulecontentId16]",
        "contentKind": "AnalyticsRule",
        "displayName": "LSASS Credential Dumping with Procdump",
        "contentProductId": "[variables('analyticRuleObject16')._analyticRulecontentProductId16]",
        "id": "[variables('analyticRuleObject16')._analyticRulecontentProductId16]",
        "version": "[variables('analyticRuleObject16').analyticRuleVersion16]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject17').analyticRuleTemplateSpecName17]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DoppelpaymerStopService_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject17').analyticRuleVersion17]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject17')._analyticRulecontentId17]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query was originally published in the threat analytics report, Doppelpaymer: More human-operated ransomware. There is also a related blog.\nDoppelPaymer is ransomware that is spread manually by human operators. These operators have exhibited extensive knowledge of system administration and common network security misconfigurations. They often use stolen credentials from over-privileged service accounts to turn off security software, run malicious commands, and spread malware throughout an organization.\nThe following query detects attempts to stop security services.\nThe See also section below lists links to other queries associated with DoppelPaymer.\nReferences:\nhttps://msrc-blog.microsoft.com/2019/11/20/customer-guidance-for-the-dopplepaymer-ransomware/\nhttps://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Ransom:Win32/DoppelPaymer.KM!MTB",
                "displayName": "Doppelpaymer Stop Services",
                "enabled": false,
                "query": "// Attempts to stop services and allow ransomware execution\nDeviceProcessEvents\n| where InitiatingProcessFileName startswith \"psexe\" and FileName =~ \"powershell.exe\" and\n  ProcessCommandLine has \"stop-service\" and ProcessCommandLine has \"sql\" and ProcessCommandLine has \"msexchange\"\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Execution",
                  "DefenseEvasion"
                ],
                "techniques": [
                  "T1059",
                  "T1562"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject17').analyticRuleId17,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 17",
                "parentId": "[variables('analyticRuleObject17').analyticRuleId17]",
                "contentId": "[variables('analyticRuleObject17')._analyticRulecontentId17]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject17').analyticRuleVersion17]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject17')._analyticRulecontentId17]",
        "contentKind": "AnalyticsRule",
        "displayName": "Doppelpaymer Stop Services",
        "contentProductId": "[variables('analyticRuleObject17')._analyticRulecontentProductId17]",
        "id": "[variables('analyticRuleObject17')._analyticRulecontentProductId17]",
        "version": "[variables('analyticRuleObject17').analyticRuleVersion17]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject18').analyticRuleTemplateSpecName18]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "QakbotCampaignSelfDeletion_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject18').analyticRuleVersion18]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject18')._analyticRulecontentId18]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query was originally published in the threat analytics report, Qakbot blight lingers, seeds ransomware\nQakbot is malware that steals login credentials from banking and financial services. It has been deployed against small businesses as well as major corporations. Some outbreaks have involved targeted ransomware campaigns that use a similar set of techniques. Links to related queries are listed under See also.\nThe following query detects if an instance of Qakbot has attempted to overwrite its original binary.\nReference - https://www.microsoft.com/security/blog/2017/11/06/mitigating-and-eliminating-info-stealing-qakbot-and-emotet-in-corporate-networks/",
                "displayName": "Qakbot Campaign Self Deletion",
                "enabled": false,
                "query": "DeviceProcessEvents \n| where FileName =~ \"ping.exe\"\n| where InitiatingProcessFileName =~ \"cmd.exe\"\n| where (InitiatingProcessCommandLine has \"calc.exe\") and (InitiatingProcessCommandLine has \"-n 6\") and (InitiatingProcessCommandLine has \"127.0.0.1\")\n| project TimeGenerated, ProcessCommandLine, InitiatingProcessCommandLine, InitiatingProcessParentFileName, DeviceId, DeviceName\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion"
                ],
                "techniques": [
                  "T1070"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject18').analyticRuleId18,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 18",
                "parentId": "[variables('analyticRuleObject18').analyticRuleId18]",
                "contentId": "[variables('analyticRuleObject18')._analyticRulecontentId18]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject18').analyticRuleVersion18]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject18')._analyticRulecontentId18]",
        "contentKind": "AnalyticsRule",
        "displayName": "Qakbot Campaign Self Deletion",
        "contentProductId": "[variables('analyticRuleObject18')._analyticRulecontentProductId18]",
        "id": "[variables('analyticRuleObject18')._analyticRulecontentProductId18]",
        "version": "[variables('analyticRuleObject18').analyticRuleVersion18]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject19').analyticRuleTemplateSpecName19]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Regsvr32Rundll32ImageLoadsAbnormalExtension_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject19').analyticRuleVersion19]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject19')._analyticRulecontentId19]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query is looking for regsvr32.exe or rundll32.exe loading DLL images with other extensions than .dll.\nJoins the data to public network events.\nReferences:\nhttps://threathunt.blog/running-live-malware-for-threat-hunting-purposes/",
                "displayName": "Regsvr32 Rundll32 Image Loads Abnormal Extension",
                "enabled": false,
                "query": "DeviceImageLoadEvents \n| where InitiatingProcessFileName has_any (\"rundll32.exe\",\"regsvr32.exe\")\n| where FileName !endswith \".dll\"\n| join (\nDeviceNetworkEvents\n| where InitiatingProcessFileName has_any (\"rundll32.exe\",\"regsvr32.exe\")\n| where RemoteIPType == \"Public\"\n) on InitiatingProcessFileName, InitiatingProcessId, InitiatingProcessCreationTime, InitiatingProcessCommandLine\n| project TimeGenerated, DeviceName, FileName, FolderPath, SHA1, InitiatingProcessFileName, InitiatingProcessCommandLine, LocalIP, LocalPort, RemoteIP, RemoteUrl, RemotePort, InitiatingProcessParentFileName\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents",
                      "DeviceNetworkEvents"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion"
                ],
                "subTechniques": [
                  "T1218.010",
                  "T1218.011"
                ],
                "techniques": [
                  "T1218",
                  "T1218"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "LocalIP"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "RemoteIP"
                      }
                    ]
                  },
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "identifier": "Url",
                        "columnName": "RemoteUrl"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject19').analyticRuleId19,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 19",
                "parentId": "[variables('analyticRuleObject19').analyticRuleId19]",
                "contentId": "[variables('analyticRuleObject19')._analyticRulecontentId19]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject19').analyticRuleVersion19]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject19')._analyticRulecontentId19]",
        "contentKind": "AnalyticsRule",
        "displayName": "Regsvr32 Rundll32 Image Loads Abnormal Extension",
        "contentProductId": "[variables('analyticRuleObject19')._analyticRulecontentProductId19]",
        "id": "[variables('analyticRuleObject19')._analyticRulecontentProductId19]",
        "version": "[variables('analyticRuleObject19').analyticRuleVersion19]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject20').analyticRuleTemplateSpecName20]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Regsvr32Rundll32WithAnomalousParentProcess_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject20').analyticRuleVersion20]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject20')._analyticRulecontentId20]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This analytical rule looks for rundll32.exe or regsvr32.exe being spawned by abnormal processes: wscript.exe, powershell.exe, cmd.exe, pwsh.exe, cscript.exe.\nBlog: https://threathunt.blog/running-live-malware-for-threat-hunting-purposes/",
                "displayName": "Regsvr32 Rundll32 with Anomalous Parent Process",
                "enabled": false,
                "query": "DeviceProcessEvents\n| where FileName has_any (\"rundll32.exe\",\"regsvr32.exe\")\n| where InitiatingProcessFileName has_any (\"wscript.exe\",\"powershell.exe\",\"cmd.exe\",\"pwsh.exe\",\"cscript.exe\")\n| project TimeGenerated, DeviceName, InvestigatedProcessName=FileName, InvestigatedProcessCommandLine = ProcessCommandLine,InvestigatedProcessStartTime = ProcessCreationTime, InvestigatedProcessId = ProcessId, InitiatingProcessFileName, InitiatingProcessCommandLine, InitiatingProcessParentFileName\n| join (\nDeviceNetworkEvents\n| where InitiatingProcessFileName has_any (\"rundll32.exe\",\"regsvr32.exe\")\n| where RemoteIPType == \"Public\"\n| project DeviceName, InvestigatedProcessName=InitiatingProcessFileName, InvestigatedProcessCommandLine = InitiatingProcessCommandLine,InvestigatedProcessStartTime = InitiatingProcessCreationTime, InvestigatedProcessId = InitiatingProcessId, LocalIP, RemoteIP, RemoteUrl\n) on DeviceName, InvestigatedProcessCommandLine, InvestigatedProcessId, InvestigatedProcessName, InvestigatedProcessStartTime\n| project-away DeviceName1, InvestigatedProcessCommandLine1, InvestigatedProcessId1, InvestigatedProcessName1, InvestigatedProcessStartTime1\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents",
                      "DeviceNetworkEvents"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion"
                ],
                "subTechniques": [
                  "T1218.010",
                  "T1218.011"
                ],
                "techniques": [
                  "T1218",
                  "T1218"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "LocalIP"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "RemoteIP"
                      }
                    ]
                  },
                  {
                    "entityType": "URL",
                    "fieldMappings": [
                      {
                        "identifier": "Url",
                        "columnName": "RemoteUrl"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject20').analyticRuleId20,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 20",
                "parentId": "[variables('analyticRuleObject20').analyticRuleId20]",
                "contentId": "[variables('analyticRuleObject20')._analyticRulecontentId20]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject20').analyticRuleVersion20]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject20')._analyticRulecontentId20]",
        "contentKind": "AnalyticsRule",
        "displayName": "Regsvr32 Rundll32 with Anomalous Parent Process",
        "contentProductId": "[variables('analyticRuleObject20')._analyticRulecontentProductId20]",
        "id": "[variables('analyticRuleObject20')._analyticRulecontentProductId20]",
        "version": "[variables('analyticRuleObject20').analyticRuleVersion20]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject21').analyticRuleTemplateSpecName21]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SuspiciousCommandInitiatedByWebServerProcess_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject21').analyticRuleVersion21]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject21')._analyticRulecontentId21]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query was originally published in the threat analytics report, Operation Soft Cell.\nOperation Soft Cell is a series of campaigns targeting users' call logs at telecommunications providers throughout the world. These attacks date from as early as 2012.\nOperation Soft Cell operators sometimes use legitimate web server processes to launch commands, especially for network discovery and user/owner discovery. The following query detects activity of this kind.\nReference - https://www.cybereason.com/blog/operation-soft-cell-a-worldwide-campaign-against-telecommunications-providers",
                "displayName": "Detect Suspicious Commands Initiated by Webserver Processes",
                "enabled": false,
                "query": "// Suspicious commands launched by web server processes\nDeviceProcessEvents \n| where (((InitiatingProcessParentFileName in(\"w3wp.exe\", \"beasvc.exe\",\n    \"httpd.exe\") or InitiatingProcessParentFileName startswith \"tomcat\")\n    or InitiatingProcessFileName in(\"w3wp.exe\", \"beasvc.exe\", \"httpd.exe\") or\n    InitiatingProcessFileName startswith \"tomcat\"))\n    and FileName in~('cmd.exe', 'powershell.exe')\n| where ProcessCommandLine contains '%temp%'\n    or ProcessCommandLine has 'wget'\n    or ProcessCommandLine has 'whoami'\n    or ProcessCommandLine has 'certutil'\n    or ProcessCommandLine has 'systeminfo'\n    or ProcessCommandLine has 'ping'\n    or ProcessCommandLine has 'ipconfig'\n    or ProcessCommandLine has 'timeout'\n| summarize\n    take_any(FileName),\n    make_set(ProcessCommandLine, 100000),\n    take_any(InitiatingProcessFileName),\n    take_any(InitiatingProcessParentFileName)\n    by DeviceId, DeviceName\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Execution",
                  "DefenseEvasion",
                  "Discovery"
                ],
                "techniques": [
                  "T1059",
                  "T1574",
                  "T1087",
                  "T1082"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject21').analyticRuleId21,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 21",
                "parentId": "[variables('analyticRuleObject21').analyticRuleId21]",
                "contentId": "[variables('analyticRuleObject21')._analyticRulecontentId21]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject21').analyticRuleVersion21]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject21')._analyticRulecontentId21]",
        "contentKind": "AnalyticsRule",
        "displayName": "Detect Suspicious Commands Initiated by Webserver Processes",
        "contentProductId": "[variables('analyticRuleObject21')._analyticRulecontentProductId21]",
        "id": "[variables('analyticRuleObject21')._analyticRulecontentProductId21]",
        "version": "[variables('analyticRuleObject21').analyticRuleVersion21]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject22').analyticRuleTemplateSpecName22]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "BITSAdminActivity_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject22').analyticRuleVersion22]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject22')._analyticRulecontentId22]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Background Intelligent Transfer Service (BITS) is a way to reliably download files from webservers or SMB servers. \nThis service is commonly used for legitimate purposes, but can also be used as part of a malware downloader. \nAdditionally, bitsadmin can be used to upload files and therefore can be used for data exfiltration. This\nquery will identify use of bitsadmin.exe for either purpose and will identify directionality file transfer\ndirectionality.",
                "displayName": "Bitsadmin Activity",
                "enabled": false,
                "query": "DeviceProcessEvents\n| where \n    (FileName =~ \"bitsadmin.exe\" or column_ifexists('ProcessVersionInfoOriginalFileName','ColumnNotAvailable') =~ 'bitsadmin.exe')\n    and ProcessCommandLine has_any ('/Transfer','/AddFile', '/AddFileSet','/AddFileWithRanges')\n| extend \n    ParsedCommandLine = parse_command_line(ProcessCommandLine,'windows')\n| extend     \n    RemoteUrl = tostring(ParsedCommandLine[-2]),\n    LocalFile= tostring(ParsedCommandLine[-1]),\n    Direction = iff(ProcessCommandLine has \"/Upload\", 'Upload', 'Download')\n| project-reorder \n    TimeGenerated,\n    DeviceId,\n    DeviceName,\n    Direction,\n    RemoteUrl,\n    LocalFile,\n    InitiatingProcessFolderPath,\n    InitiatingProcessAccountDomain,\n    InitiatingProcessAccountName,\n    InitiatingProcessSHA256,\n    ProcessId,\n    ProcessCommandLine\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence",
                  "CommandAndControl",
                  "Exfiltration"
                ],
                "techniques": [
                  "T1197",
                  "T1105",
                  "T1048"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Process",
                    "fieldMappings": [
                      {
                        "identifier": "ProcessId",
                        "columnName": "ProcessId"
                      },
                      {
                        "identifier": "CommandLine",
                        "columnName": "ProcessCommandLine"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject22').analyticRuleId22,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 22",
                "parentId": "[variables('analyticRuleObject22').analyticRuleId22]",
                "contentId": "[variables('analyticRuleObject22')._analyticRulecontentId22]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject22').analyticRuleVersion22]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject22')._analyticRulecontentId22]",
        "contentKind": "AnalyticsRule",
        "displayName": "Bitsadmin Activity",
        "contentProductId": "[variables('analyticRuleObject22')._analyticRulecontentProductId22]",
        "id": "[variables('analyticRuleObject22')._analyticRulecontentProductId22]",
        "version": "[variables('analyticRuleObject22').analyticRuleVersion22]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject23').analyticRuleTemplateSpecName23]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "OfficeAppsLaunchingWscript_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject23').analyticRuleVersion23]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject23')._analyticRulecontentId23]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query was originally published in the threat analytics report, Trickbot: Pervasive & underestimated.\nTrickbot is a very prevalent piece of malware with an array of malicious capabilities. Originally designed to steal banking credentials, it has since evolved into a modular trojan that can deploy other malware, disable security software, and perform command-and-control (C2) operations.\nTrickbot is frequently spread through email. An attacker will send a target a message with an attachment containing a malicious macro. If the target enables the macro, it will write a JScript Encoded (JSE) file to disk (JScript is a Microsoft dialect of ECMAScript). The JSE file will then be launched using wscript.exe to perform a variety of malicious tasks, particularly reconnaissance.\nThe following query detects when Office applications have launched wscript.exe to run a JSE file.\nSee Detect rundll.exe being used for reconnaissance and command-and-control for another query related to Trickbot activity.\nReference - https://attack.mitre.org/software/S0266/",
                "displayName": "Office Apps Launching Wscipt",
                "enabled": false,
                "query": "DeviceProcessEvents \n| where InitiatingProcessFileName in~ ('winword.exe', 'excel.exe', 'outlook.exe') \n| where FileName =~ \"wscript.exe\" and ProcessCommandLine has \".jse\"\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Execution",
                  "Collection",
                  "CommandAndControl"
                ],
                "techniques": [
                  "T1059",
                  "T1105",
                  "T1203"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Process",
                    "fieldMappings": [
                      {
                        "identifier": "ProcessId",
                        "columnName": "ProcessId"
                      },
                      {
                        "identifier": "CommandLine",
                        "columnName": "ProcessCommandLine"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject23').analyticRuleId23,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 23",
                "parentId": "[variables('analyticRuleObject23').analyticRuleId23]",
                "contentId": "[variables('analyticRuleObject23')._analyticRulecontentId23]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject23').analyticRuleVersion23]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject23')._analyticRulecontentId23]",
        "contentKind": "AnalyticsRule",
        "displayName": "Office Apps Launching Wscipt",
        "contentProductId": "[variables('analyticRuleObject23')._analyticRulecontentProductId23]",
        "id": "[variables('analyticRuleObject23')._analyticRulecontentProductId23]",
        "version": "[variables('analyticRuleObject23').analyticRuleVersion23]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject24').analyticRuleTemplateSpecName24]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "PotentialKerberoastActivities_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject24').analyticRuleVersion24]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject24')._analyticRulecontentId24]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query aim to detect if someone requests service tickets (where count => maxcount)\nThe query requires trimming to set a baseline level for MaxCount  \nMitre Technique: Kerberoasting (T1558.003)\n@MattiasBorg82",
                "displayName": "Detect Potential Kerberoast Activities",
                "enabled": false,
                "query": "let MaxCount = 70; //Number of requests per 2 minute timeframe, depending on org size.\nIdentityLogonEvents\n| where ActionType == \"LogonSuccess\"\n| where Protocol == \"Kerberos\"\n| extend json = todynamic(parse_json(tostring(AdditionalFields)))\n| extend SPN = json.Spns,\n       AttackTechniques = json.AttackTechniques\n      | project-away json\n| where isnotempty(SPN)\n| where AttackTechniques has \"T1558.003\"\n| mv-expand SPN\n        | extend SPNType = tostring(extract(@\"^\\w+\",0,tostring(SPN)))\n| distinct tostring(SPN), DeviceName, AccountUpn, AccountSid, bin(TimeGenerated, 2m), ReportId, tostring(AttackTechniques)\n| summarize count(), SPNS=(make_list(SPN, 100000)),ReportId=tostring((make_list(ReportId, 100000))[0]) by AccountUpn,AccountSid,DeviceName, bin(TimeGenerated, 2m), tostring(AttackTechniques)\n| extend SPNS = (replace_regex(tostring(SPNS), @'[^\\w+-\\/]+', '')) \n| where count_ >= MaxCount\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n| extend AccountDomain = tostring(split(AccountUpn, '@')[1]), AccountName = tostring(split(AccountUpn, '@')[0])\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "IdentityLogonEvents"
                    ]
                  }
                ],
                "tactics": [
                  "CredentialAccess"
                ],
                "subTechniques": [
                  "T1558.003"
                ],
                "techniques": [
                  "T1558"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "AccountUpn"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "AccountDomain"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "AccountName"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject24').analyticRuleId24,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 24",
                "parentId": "[variables('analyticRuleObject24').analyticRuleId24]",
                "contentId": "[variables('analyticRuleObject24')._analyticRulecontentId24]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject24').analyticRuleVersion24]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject24')._analyticRulecontentId24]",
        "contentKind": "AnalyticsRule",
        "displayName": "Detect Potential Kerberoast Activities",
        "contentProductId": "[variables('analyticRuleObject24')._analyticRulecontentProductId24]",
        "id": "[variables('analyticRuleObject24')._analyticRulecontentProductId24]",
        "version": "[variables('analyticRuleObject24').analyticRuleVersion24]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject25').analyticRuleTemplateSpecName25]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "FilesCopiedToUSBDrives_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject25').analyticRuleVersion25]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject25')._analyticRulecontentId25]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query lists files copied to USB external drives with USB drive information based on FileCreated events associated with most recent USBDriveMount events befor file creations. But be aware that Advanced Hunting is not monitoring all the file types.",
                "displayName": "Files Copied to USB Drives",
                "enabled": false,
                "query": "let UsbDriveMount = DeviceEvents\n| where ActionType==\"UsbDriveMounted\"\n| extend ParsedFields=parse_json(AdditionalFields)\n| project DeviceId, DeviceName, DriveLetter=ParsedFields.DriveLetter, MountTime=TimeGenerated,\nProductName=ParsedFields.ProductName,SerialNumber=ParsedFields.SerialNumber,Manufacturer=ParsedFields.Manufacturer\n| order by DeviceId asc, MountTime desc;\nlet FileCreation = DeviceFileEvents\n| where InitiatingProcessAccountName != \"system\"\n| where ActionType == \"FileCreated\"\n| where FolderPath !startswith \"C:\\\\\"\n| where FolderPath !startswith \"\\\\\"\n| project ReportId,DeviceId,InitiatingProcessAccountDomain,\nInitiatingProcessAccountName,InitiatingProcessAccountUpn,\nFileName, FolderPath, SHA256, TimeGenerated, SensitivityLabel, IsAzureInfoProtectionApplied\n| order by DeviceId asc, TimeGenerated desc;\nFileCreation | lookup kind=inner (UsbDriveMount) on DeviceId\n| where FolderPath startswith DriveLetter\n| where TimeGenerated >= MountTime\n| partition hint.strategy=native by ReportId ( top 1 by MountTime )\n| order by DeviceId asc, TimeGenerated desc\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n| extend FileHashAlgorithm = 'SHA256'\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceEvents",
                      "DeviceFileEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Exfiltration"
                ],
                "techniques": [
                  "T1041"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "File",
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "FileName"
                      },
                      {
                        "identifier": "Directory",
                        "columnName": "FolderPath"
                      }
                    ]
                  },
                  {
                    "entityType": "FileHash",
                    "fieldMappings": [
                      {
                        "identifier": "Algorithm",
                        "columnName": "FileHashAlgorithm"
                      },
                      {
                        "identifier": "Value",
                        "columnName": "SHA256"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject25').analyticRuleId25,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 25",
                "parentId": "[variables('analyticRuleObject25').analyticRuleId25]",
                "contentId": "[variables('analyticRuleObject25')._analyticRulecontentId25]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject25').analyticRuleVersion25]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject25')._analyticRulecontentId25]",
        "contentKind": "AnalyticsRule",
        "displayName": "Files Copied to USB Drives",
        "contentProductId": "[variables('analyticRuleObject25')._analyticRulecontentProductId25]",
        "id": "[variables('analyticRuleObject25')._analyticRulecontentProductId25]",
        "version": "[variables('analyticRuleObject25').analyticRuleVersion25]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject26').analyticRuleTemplateSpecName26]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MosaicLoader_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject26').analyticRuleVersion26]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject26')._analyticRulecontentId26]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query looks Malware Hides Itself Among Windows Defender Exclusions to Evade Detection.",
                "displayName": "MosaicLoader",
                "enabled": false,
                "query": "DeviceRegistryEvents \n| where ((ActionType == \"RegistryValueSet\") and (RegistryKey startswith @\"HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Defender\\\\Exclusions\\\\Paths\" \nor RegistryKey startswith @\"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Extensions\"\nor RegistryKey startswith @\"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Processes\"))\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceRegistryEvents"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion"
                ],
                "techniques": [
                  "T1562"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "RegistryValue",
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "RegistryValueName"
                      },
                      {
                        "identifier": "Value",
                        "columnName": "RegistryValueData"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject26').analyticRuleId26,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 26",
                "parentId": "[variables('analyticRuleObject26').analyticRuleId26]",
                "contentId": "[variables('analyticRuleObject26')._analyticRulecontentId26]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject26').analyticRuleVersion26]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject26')._analyticRulecontentId26]",
        "contentKind": "AnalyticsRule",
        "displayName": "MosaicLoader",
        "contentProductId": "[variables('analyticRuleObject26')._analyticRulecontentProductId26]",
        "id": "[variables('analyticRuleObject26')._analyticRulecontentProductId26]",
        "version": "[variables('analyticRuleObject26').analyticRuleVersion26]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject27').analyticRuleTemplateSpecName27]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AnomalousVoulmeOfFileDeletion_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject27').analyticRuleVersion27]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject27')._analyticRulecontentId27]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query looks for users performing file deletion activities. Spikes in file deletion observed from risky sign-in sessions are flagged here.\nThis applies to SharePoint and OneDrive users.\nAudit event and Cloud application identifier references.\nReference - https://learn.microsoft.com/microsoft-365/compliance/audit-log-activities?view=o365-worldwide\nReference - https://learn.microsoft.com/azure/sentinel/entities-reference#cloud-application-identifiers",
                "displayName": "Unusual Volume of file deletion by users",
                "enabled": false,
                "query": "let relevantOperations = pack_array(\"FileDeleted\", \"FileRecycled\", \"FileDeletedFirstStageRecycleBin\", \"FileDeletedSecondStageRecycleBin\", \"FileVersionsAllMinorsRecycled\", \"FileVersionRecycled\", \"FileVersionsAllRecycled\");\nlet relevantAppIds = pack_array(int(20892), int(15600)); // App Ids for SharePoint and OneDrive\nlet timeWindow = 7d;\nlet timeNow = now();\n//\nlet riskyUsers= // Look for users with risky sign-ins\n  SigninLogs    \n  | where CreatedDateTime between ((timeNow - timeWindow) .. (timeNow))\n  | where isnotempty(UserId) and isnotempty(OriginalRequestId)\n  | where ResultType == '0'\n  | where RiskLevelDuringSignIn == 'high'\n  | project RiskLevelDuringSignIn, UserId, CreatedDateTime, SessionId=OriginalRequestId\n  ;\nlet hasUsers = isnotempty(toscalar(riskyUsers));\n//\nlet deleteEvents = // look for file deletion activity and scope it to risky users\n  CloudAppEvents\n  | where hasUsers\n  | where TimeGenerated between ((timeNow - timeWindow) .. (timeNow))\n  | where ApplicationId in (relevantAppIds)\n  | where isnotempty(AccountObjectId)\n  | where AccountObjectId in (riskyUsers)\n  | where ActionType in (relevantOperations)\n  | extend SessionId= tostring(RawEventData.AppAccessContext.AADSessionId)\n  | where isnotempty(SessionId)\n  | project UserId=AccountObjectId, AccountDisplayName, ApplicationId, SessionId, ActionType, TimeGenerated, ReportId\n  ;   \n //\ndeleteEvents  \n| join kind=leftsemi riskyUsers on UserId, SessionId\n| summarize Count=count() , (Timestamp, ReportId)=arg_min(TimeGenerated, ReportId) by UserId, AccountDisplayName, ApplicationId, ActionType, Time=bin(TimeGenerated, 5m)\n// look for only those scoped users who have generated an increase in file deletion activity.\n| summarize TotalCount= countif(Count > 50), (Timestamp, ReportId)=arg_min(Timestamp, ReportId) by UserId, AccountDisplayName, ApplicationId \n| where TotalCount >= 3\n| project UserId, AccountDisplayName, ApplicationId, TotalCount, ReportId, Timestamp\n| extend NTDomain = tostring(split(AccountDisplayName,'\\\\',0)[0]), Name = tostring(split(AccountDisplayName,'\\\\',1)[0])\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "CloudAppEvents",
                      "AADSignInEventsBeta"
                    ]
                  }
                ],
                "tactics": [
                  "Impact"
                ],
                "techniques": [
                  "T1485"
                ],
                "entityMappings": [
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "AadUserId",
                        "columnName": "UserId"
                      }
                    ]
                  },
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "Name",
                        "columnName": "Name"
                      },
                      {
                        "identifier": "NTDomain",
                        "columnName": "NTDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "CloudApplication",
                    "fieldMappings": [
                      {
                        "identifier": "AppId",
                        "columnName": "ApplicationId"
                      }
                    ]
                  }
                ],
                "customDetails": {
                  "Count": "TotalCount"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject27').analyticRuleId27,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 27",
                "parentId": "[variables('analyticRuleObject27').analyticRuleId27]",
                "contentId": "[variables('analyticRuleObject27')._analyticRulecontentId27]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject27').analyticRuleVersion27]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject27')._analyticRulecontentId27]",
        "contentKind": "AnalyticsRule",
        "displayName": "Unusual Volume of file deletion by users",
        "contentProductId": "[variables('analyticRuleObject27')._analyticRulecontentProductId27]",
        "id": "[variables('analyticRuleObject27')._analyticRulecontentProductId27]",
        "version": "[variables('analyticRuleObject27').analyticRuleVersion27]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject28').analyticRuleTemplateSpecName28]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "RemoteFileCreationWithPsExec_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject28').analyticRuleVersion28]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject28')._analyticRulecontentId28]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query was originally published in the threat analytics report, Ryuk ransomware. There is also a related blog.\nRyuk is human-operated ransomware. Much like DoppelPaymer ransomware, Ryuk is spread manually, often on networks that are already infected with Trickbot.\nRyuk operators use PsExec to manually spread the ransomware to other devices.\nThe following query detects remote file creation events that might indicate an active attack.\nThe See also section below lists links to other queries associated with Ryuk ransomware.\nReferences:\nhttps://www.microsoft.com/security/blog/2020/03/05/human-operated-ransomware-attacks-a-preventable-disaster/\nhttps://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Ransom:Win32/Ryuk.AA\nhttps://www.microsoft.com/security/blog/2020/03/05/human-operated-ransomware-attacks-a-preventable-disaster/\nhttps://docs.microsoft.com/sysinternals/downloads/psexec",
                "displayName": "Remote File Creation with PsExec",
                "enabled": false,
                "query": "// Find PsExec creating multiple files on remote machines in a 10-minute window\nDeviceFileEvents\n// Looking for PsExec by accepteula command flag\n| where InitiatingProcessCommandLine has \"accepteula\"\n// Remote machines and file is exe\n| where FolderPath has \"\\\\\\\\\" and FileName endswith \".exe\"\n| extend Exe = countof(InitiatingProcessCommandLine, \".exe\")\n// Checking to see if command line has 2 .exe or .bat\n| where InitiatingProcessCommandLine !has \".ps1\" and Exe > 1 or\nInitiatingProcessCommandLine has \".bat\"\n// Exclusions: Remove the following line to widen scope of AHQ\n| where not(InitiatingProcessCommandLine has_any(\"batch\", \"auditpol\",\n\"script\", \"scripts\", \"illusive\", \"rebootrequired\"))\n| summarize FileCount = dcount(FolderPath), make_set(SHA1, 100000), make_set(FolderPath, 100000),\nmake_set(FileName, 100000), make_set(InitiatingProcessCommandLine, 100000) by DeviceId, DeviceName,\nTimeWindow=bin(TimeGenerated, 10m), InitiatingProcessFileName\n| where FileCount > 4\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceFileEvents"
                    ]
                  }
                ],
                "tactics": [
                  "LateralMovement"
                ],
                "techniques": [
                  "T1570"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject28').analyticRuleId28,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 28",
                "parentId": "[variables('analyticRuleObject28').analyticRuleId28]",
                "contentId": "[variables('analyticRuleObject28')._analyticRulecontentId28]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject28').analyticRuleVersion28]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject28')._analyticRulecontentId28]",
        "contentKind": "AnalyticsRule",
        "displayName": "Remote File Creation with PsExec",
        "contentProductId": "[variables('analyticRuleObject28')._analyticRulecontentProductId28]",
        "id": "[variables('analyticRuleObject28')._analyticRulecontentProductId28]",
        "version": "[variables('analyticRuleObject28').analyticRuleVersion28]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject29').analyticRuleTemplateSpecName29]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "ServiceAccountsPerformingRemotePS_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject29').analyticRuleVersion29]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject29')._analyticRulecontentId29]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Service Accounts Performing Remote PowerShell.\nThe purpose behind this detection is for finding service accounts that are performing remote powershell sessions.\nThere are two phases to the detection: Identify service accounts, Find remote PS cmdlets being ran by these accounts.\nTo accomplish this, we utilize DeviceLogonEvents and DeviceEvents to find cmdlets ran that meet the criteria.\nOne of the main advantages of this method is that only requires server telemetry, and not the attacking client.\nThe first phase relies on the DeviceLogonEvents to determine whether an account is a service account or not, consider the following accounts with logons:.\nRandom_user has DeviceLogonEvents with type 2, 3, 7, 10, 11 & 13.\nRandom_service_account 'should' only have DeviceLogonEvents with type 3,4 or 5.",
                "displayName": "Service Accounts Performing Remote PS",
                "enabled": false,
                "query": "let InteractiveTypes = pack_array(                                  // Declare Interactive logon type names\n    'Interactive',\n    'CachedInteractive',\n    'Unlock',\n    'RemoteInteractive',\n    'CachedRemoteInteractive',\n    'CachedUnlock'\n);\nlet WhitelistedCmdlets = pack_array(                                // List of whitelisted commands that don't provide a lot of value\n    'prompt',\n    'Out-Default',\n    'out-lineoutput',\n    'format-default',\n    'Set-StrictMode',\n    'TabExpansion2'\n);\nlet WhitelistedAccounts = pack_array('FakeWhitelistedAccount');     // List of accounts that are known to perform this activity in the environment and can be ignored\nDeviceLogonEvents                                                         // Get all logon events...\n| where AccountName !in~ (WhitelistedAccounts)                      // ...where it is not a whitelisted account...\n| where ActionType == \"LogonSuccess\"                                // ...and the logon was successful...\n| where AccountName !contains \"$\"                                   // ...and not a machine logon.\n| where AccountName !has \"winrm va_\"                                // WinRM will have pseudo account names that match this if there is an explicit permission for an admin to run the cmdlet, so assume it is good.\n| extend IsInteractive=(LogonType in (InteractiveTypes))            // Determine if the logon is interactive (True=1,False=0)...\n| summarize HasInteractiveLogon=max(IsInteractive)                  // ...then bucket and get the maximum interactive value (0 or 1)...\n            by AccountName                                          // ... by the AccountNames\n| where HasInteractiveLogon == 0                                    // ...and filter out all accounts that had an interactive logon.\n// At this point, we have a list of accounts that we believe to be service accounts\n// Now we need to find RemotePS sessions that were spawned by those accounts\n// Note that we look at all powershell cmdlets executed to form a 29-day baseline to evaluate the data on today\n| join kind=rightsemi (                                             // Start by dropping the account name and only tracking the...\n\tDeviceEvents                                                      // ...\n\t| where ActionType == 'PowerShellCommand'                         // ...PowerShell commands seen...\n\t| where InitiatingProcessFileName =~ 'wsmprovhost.exe'            // ...whose parent was wsmprovhost.exe (RemotePS Server)...\n    | extend AccountName = InitiatingProcessAccountName             // ...and add an AccountName field so the join is easier\n) on AccountName\n// At this point, we have all of the commands that were ran by service accounts\n| extend Command = tostring(extractjson('$.Command', tostring(AdditionalFields))) // Extract the actual PowerShell command that was executed\n| where Command !in (WhitelistedCmdlets)                                          // Remove any values that match the whitelisted cmdlets\n| summarize (Timestamp, ReportId)=arg_max(TimeGenerated, ReportId),               // Then group all of the cmdlets and calculate the min/max times of execution...\n    make_set(Command, 100000), count(), min(TimeGenerated) by                     // ...as well as creating a list of cmdlets ran and the count..\n    AccountName, AccountDomain, DeviceName, DeviceId                                             // ...and have the commonality be the account, DeviceName and DeviceId\n// At this point, we have machine-account pairs along with the list of commands run as well as the first/last time the commands were ran\n| order by AccountName asc                                        // Order the final list by AccountName just to make it easier to go through\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")                                           \n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceLogonEvents",
                      "DeviceEvents"
                    ]
                  }
                ],
                "tactics": [
                  "LateralMovement"
                ],
                "techniques": [
                  "T1210"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "AccountName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "AccountDomain"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "AccountName"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject29').analyticRuleId29,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 29",
                "parentId": "[variables('analyticRuleObject29').analyticRuleId29]",
                "contentId": "[variables('analyticRuleObject29')._analyticRulecontentId29]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject29').analyticRuleVersion29]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject29')._analyticRulecontentId29]",
        "contentKind": "AnalyticsRule",
        "displayName": "Service Accounts Performing Remote PS",
        "contentProductId": "[variables('analyticRuleObject29')._analyticRulecontentProductId29]",
        "id": "[variables('analyticRuleObject29')._analyticRulecontentProductId29]",
        "version": "[variables('analyticRuleObject29').analyticRuleVersion29]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject30').analyticRuleTemplateSpecName30]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AccountCreation_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject30').analyticRuleVersion30]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject30')._analyticRulecontentId30]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "User accounts may be created to achieve persistence on a machine.\nRead more here: https://attack.mitre.org/wiki/Technique/T1136.\nTags: #CreateAccount.\nQuery #1: Query for users being created using \"net user\" command.\n\"net user\" commands are noisy, so needs to be joined with another signal -.\nE.g. in this example we look for use of uncommon & undocumented commandline switches (e.g. /ad instead of /add).",
                "displayName": "Account Creation",
                "enabled": false,
                "query": "DeviceProcessEvents\n// Pro-tip: \n// There are many different ways to run a process from a file - e.g. by using full path, env. variables, ~1 annotation, more...\n// So, to find executions of a known filename, better filter on the filename (and possibly on folder path) than on the commandline.\n| where FileName in~ (\"net.exe\", \"net1.exe\")\n// Parse the user name from the commandline.\n// To have case-insensitive parsing use the i flag, to have non-greedy match (e.g. CreatedUser as short as possible), specify U flag:\n// \"kind=regex flags=i\"\n| parse kind=regex flags=iU ProcessCommandLine with * \"user \" CreatedUser \" \" * \"/ad\"\n// Filter rows where user could not be parsed - e.g. because it was not a user command, or the /add commandline switch was not specified.\n| where isnotempty(CreatedUser)\n// Every net.exe executed will run net1.exe with the same commandline.\n// in this where clause we remove such rows, as they duplicate the number of results we have without adding any value.\n| where not (FileName =~ \"net1.exe\" and InitiatingProcessFileName =~ \"net.exe\" and replace(\"net\", \"net1\", InitiatingProcessCommandLine) =~ ProcessCommandLine)\n// If /domain is specified, so the user is created on the domain controller.\n// Also, any prefix that's longer than 1 char will also do the same, e.g. /do, /dom, /doma, ....\n| extend CreatedOnLocalMachine=(ProcessCommandLine !contains \"/do\")\n| where ProcessCommandLine !contains \"/add\" or (CreatedOnLocalMachine == 0 and ProcessCommandLine !contains \"/domain\")\n| summarize MachineCount=dcount(DeviceName) by CreatedUser, CreatedOnLocalMachine, InitiatingProcessFileName, FileName, ProcessId, ProcessCommandLine, InitiatingProcessCommandLine, DeviceId, DeviceName\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence"
                ],
                "techniques": [
                  "T1136"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Process",
                    "fieldMappings": [
                      {
                        "identifier": "ProcessId",
                        "columnName": "ProcessId"
                      },
                      {
                        "identifier": "CommandLine",
                        "columnName": "ProcessCommandLine"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject30').analyticRuleId30,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 30",
                "parentId": "[variables('analyticRuleObject30').analyticRuleId30]",
                "contentId": "[variables('analyticRuleObject30')._analyticRulecontentId30]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject30').analyticRuleVersion30]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject30')._analyticRulecontentId30]",
        "contentKind": "AnalyticsRule",
        "displayName": "Account Creation",
        "contentProductId": "[variables('analyticRuleObject30')._analyticRulecontentProductId30]",
        "id": "[variables('analyticRuleObject30')._analyticRulecontentProductId30]",
        "version": "[variables('analyticRuleObject30').analyticRuleVersion30]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject31').analyticRuleTemplateSpecName31]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "LocalAdminGroupChanges_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject31').analyticRuleVersion31]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject31')._analyticRulecontentId31]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query searches for changes to the local administrators group.\nBlogpost: https://www.verboon.info/2020/09/hunting-for-local-group-membership-changes.",
                "displayName": "Local Admin Group Changes",
                "enabled": false,
                "query": "let ADAZUsers =  IdentityInfo \n| extend DirectoryDomain = AccountDomain \n| extend DirectoryAccount = AccountName \n| extend OnPremSid = AccountSID\n| distinct DirectoryDomain , DirectoryAccount , OnPremSid , AccountCloudSID, AccountUPN, GivenName, Surname;\n // check for any new created or modified local accounts \nlet NewUsers =  DeviceEvents\n| where ActionType contains \"UserAccountCreated\" or ActionType contains \"UserAccountModified\"\n| extend lUserAdded = AccountName\n| extend NewUserSID = AccountSid\n| extend laccountdomain = AccountDomain\n| distinct NewUserSID, lUserAdded,laccountdomain;\n// Check for any local group changes and enrich the data with the account name obtained from the previous query\nDeviceEvents \n| where ActionType == 'UserAccountAddedToLocalGroup' \n| extend LocalGroupSID = tostring(parse_json(AdditionalFields).GroupSid)\n| extend LocalGroup = AccountName\n| extend AddedAccountSID = AccountSid\n| extend Actor = trim(@\"[^\\w]+\",InitiatingProcessAccountName)\n// limit to local administrators group\n//  | where LocalGroupSID contains \"S-1-5-32-544\"\n| join kind= leftouter    (NewUsers)\non $left.AddedAccountSID == $right.NewUserSID\n| project TimeGenerated, DeviceName, LocalGroup,LocalGroupSID, AddedAccountSID, lUserAdded , Actor, ActionType , laccountdomain \n| join kind=leftouter  (ADAZUsers)\non $left.AddedAccountSID == $right.OnPremSid\n| extend UserAdded = iff(isnotempty(lUserAdded),strcat(laccountdomain,\"\\\\\", lUserAdded), strcat(DirectoryDomain,\"\\\\\", DirectoryAccount))\n| extend AccountName = iff(isnotempty(lUserAdded), lUserAdded, DirectoryAccount)\n| project TimeGenerated, DeviceName, LocalGroup, LocalGroupSID, AddedAccountSID, UserAdded ,Actor, ActionType, AccountName, laccountdomain  \n| where DeviceName !contains Actor\n// Provide details on actors that added users\n// | summarize count()  by Actor \n// | join ADAZUsers\n// on $left.Actor == $right.DirectoryAccount \n// | render piechart\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "IdentityInfo",
                      "DeviceEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence"
                ],
                "techniques": [
                  "T1098"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "UserAdded"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "AccountName"
                      },
                      {
                        "identifier": "NTDomain",
                        "columnName": "laccountdomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject31').analyticRuleId31,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 31",
                "parentId": "[variables('analyticRuleObject31').analyticRuleId31]",
                "contentId": "[variables('analyticRuleObject31')._analyticRulecontentId31]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject31').analyticRuleVersion31]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject31')._analyticRulecontentId31]",
        "contentKind": "AnalyticsRule",
        "displayName": "Local Admin Group Changes",
        "contentProductId": "[variables('analyticRuleObject31')._analyticRulecontentProductId31]",
        "id": "[variables('analyticRuleObject31')._analyticRulecontentProductId31]",
        "version": "[variables('analyticRuleObject31').analyticRuleVersion31]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject32').analyticRuleTemplateSpecName32]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "RareProcessAsService_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject32').analyticRuleVersion32]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject32')._analyticRulecontentId32]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query is looking for rarely seen processes which are launched as a service. Whiltelisted process list need to be updated based on the environment.\nAuthor: Jouni Mikkola\nMore info: https://threathunt.blog/rare-process-launch-as-a-service/",
                "displayName": "Rare Process as a Service",
                "enabled": false,
                "query": "let LookupTime = 14d;\nlet WhiteList = pack_array(\n\"svchost.exe\",\n\"mssense.exe\",\n\"msmpeng.exe\",\n\"searchindexer.exe\",\n\"microsoftedgeupdate.exe\"\n);\nlet GetServices = materialize (\nDeviceProcessEvents\n| where TimeGenerated > ago(LookupTime)\n| where InitiatingProcessParentFileName contains \"services.exe\"\n| where InitiatingProcessFileName !in~(WhiteList)\n| project TimeGenerated, DeviceName, StartedChildProcess = FileName, StartedChildProcessSHA1 = SHA1, StartedChildProcessCmdline = ProcessCommandLine, ServiceProcessSHA1 = InitiatingProcessSHA1, ServiceProcess = InitiatingProcessFileName, ServiceProcessCmdline = InitiatingProcessCommandLine, ServiceProcessID = InitiatingProcessId, ServiceProcessCreationTime = InitiatingProcessCreationTime, ServiceProcessUser = InitiatingProcessAccountName\n);\nGetServices\n| summarize count() by ServiceProcess, DeviceName\n| where count_ < 6 \n| join kind = inner GetServices on ServiceProcess, DeviceName \n| join kind = leftouter ( \nDeviceNetworkEvents \n| where TimeGenerated > ago(LookupTime)\n| where InitiatingProcessParentFileName contains \"services.exe\"\n| where InitiatingProcessFileName !in~(WhiteList)\n| project TimeGenerated, DeviceName, ServiceProcessSHA1 = InitiatingProcessSHA1, ServiceProcess = InitiatingProcessFileName, ServiceProcessCmdline = InitiatingProcessCommandLine, ServiceProcessID = InitiatingProcessId, ServiceProcessCreationTime = InitiatingProcessCreationTime, ServiceProcessUser = InitiatingProcessAccountName, NetworkAction = ActionType, RemoteIP, RemoteUrl\n) on DeviceName, ServiceProcess, ServiceProcessCmdline, ServiceProcessCreationTime, ServiceProcessID, ServiceProcessUser, ServiceProcessSHA1\n| join kind = leftouter (\nDeviceFileEvents\n| where TimeGenerated > ago(LookupTime)\n| where InitiatingProcessParentFileName contains \"services.exe\"\n| where InitiatingProcessFileName !in~(WhiteList)\n| project TimeGenerated, DeviceName, ServiceProcessSHA1 = InitiatingProcessSHA1, ServiceProcess = InitiatingProcessFileName, ServiceProcessCmdline = InitiatingProcessCommandLine, ServiceProcessID = InitiatingProcessId, ServiceProcessCreationTime = InitiatingProcessCreationTime, ServiceProcessUser = InitiatingProcessAccountName, FileAction = ActionType, ModifiedFile = FileName, ModifiedFileSHA1 = SHA1, ModifiedFilePath = FolderPath\n) on DeviceName, ServiceProcess, ServiceProcessCmdline, ServiceProcessCreationTime, ServiceProcessID, ServiceProcessUser, ServiceProcessSHA1\n| join kind = leftouter (\nDeviceImageLoadEvents\n| where TimeGenerated > ago(LookupTime)\n| where InitiatingProcessParentFileName contains \"services.exe\"\n| where InitiatingProcessFileName !in~(WhiteList)\n| project TimeGenerated, DeviceName, ServiceProcessSHA1 = InitiatingProcessSHA1, ServiceProcess = InitiatingProcessFileName, ServiceProcessCmdline = InitiatingProcessCommandLine, ServiceProcessID = InitiatingProcessId, ServiceProcessCreationTime = InitiatingProcessCreationTime, ServiceProcessUser = InitiatingProcessAccountName, LoadedDLL = FileName, LoadedDLLSHA1 = SHA1, LoadedDLLPath = FolderPath\n) on DeviceName, ServiceProcess, ServiceProcessCmdline, ServiceProcessCreationTime, ServiceProcessID, ServiceProcessUser, ServiceProcessSHA1\n| summarize ConnectedAddresses = make_set(RemoteIP, 100000), ConnectedUrls = make_set(RemoteUrl, 100000), FilesModified = make_set(ModifiedFile, 100000),FileModFolderPath = make_set(ModifiedFilePath, 100000),FileModHA1s = make_set(ModifiedFileSHA1, 100000), ChildProcesses = make_set(StartedChildProcess, 100000), ChildCommandlines = make_set(StartedChildProcessCmdline, 100000), DLLsLoaded = make_set(LoadedDLL, 100000), DLLSHA1 = make_set(LoadedDLLSHA1, 100000) by DeviceName, ServiceProcess, ServiceProcessCmdline, ServiceProcessCreationTime, ServiceProcessID, ServiceProcessUser, ServiceProcessSHA1\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P14D",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents",
                      "DeviceNetworkEvents",
                      "DeviceFileEvents",
                      "DeviceImageLoadEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Persistence"
                ],
                "subTechniques": [
                  "T1543.003"
                ],
                "techniques": [
                  "T1543",
                  "T1543"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Process",
                    "fieldMappings": [
                      {
                        "identifier": "ProcessId",
                        "columnName": "ServiceProcessID"
                      },
                      {
                        "identifier": "CommandLine",
                        "columnName": "ServiceProcessCmdline"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject32').analyticRuleId32,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 32",
                "parentId": "[variables('analyticRuleObject32').analyticRuleId32]",
                "contentId": "[variables('analyticRuleObject32')._analyticRulecontentId32]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject32').analyticRuleVersion32]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject32')._analyticRulecontentId32]",
        "contentKind": "AnalyticsRule",
        "displayName": "Rare Process as a Service",
        "contentProductId": "[variables('analyticRuleObject32')._analyticRulecontentProductId32]",
        "id": "[variables('analyticRuleObject32')._analyticRulecontentProductId32]",
        "version": "[variables('analyticRuleObject32').analyticRuleVersion32]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject33').analyticRuleTemplateSpecName33]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DisableSecurityServiceViaRegistry_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject33').analyticRuleVersion33]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject33')._analyticRulecontentId33]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query checks for processes modifying the registry to disable security features. This is a common technique used by threat actors for defence evasion.",
                "displayName": "Disabling Security Services via Registry",
                "enabled": false,
                "query": "DeviceProcessEvents\n| where InitiatingProcessCommandLine has_all(@'\"reg\"', 'add', @'\"HKLM\\SOFTWARE\\Policies\\', '/v','/t', 'REG_DWORD', '/d', '/f')\n  and InitiatingProcessCommandLine has_any('DisableRealtimeMonitoring', 'UseTPMKey', 'UseTPMKeyPIN', 'UseAdvancedStartup', \n  'EnableBDEWithNoTPM', 'RecoveryKeyMessageSource')\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion"
                ],
                "techniques": [
                  "T1562"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "AccountUpn"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "AccountName"
                      },
                      {
                        "identifier": "NTDomain",
                        "columnName": "AccountDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Process",
                    "fieldMappings": [
                      {
                        "identifier": "ProcessId",
                        "columnName": "ProcessId"
                      },
                      {
                        "identifier": "CommandLine",
                        "columnName": "ProcessCommandLine"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject33').analyticRuleId33,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 33",
                "parentId": "[variables('analyticRuleObject33').analyticRuleId33]",
                "contentId": "[variables('analyticRuleObject33')._analyticRulecontentId33]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject33').analyticRuleVersion33]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject33')._analyticRulecontentId33]",
        "contentKind": "AnalyticsRule",
        "displayName": "Disabling Security Services via Registry",
        "contentProductId": "[variables('analyticRuleObject33')._analyticRulecontentProductId33]",
        "id": "[variables('analyticRuleObject33')._analyticRulecontentProductId33]",
        "version": "[variables('analyticRuleObject33').analyticRuleVersion33]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject34').analyticRuleTemplateSpecName34]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DataDeletionOnMulipleDrivesUsingCipherExe_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject34').analyticRuleVersion34]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject34')._analyticRulecontentId34]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query checks for attempts to delete data on multiple drives using cipher.exe. This activity is typically done by ransomware to prevent recovery of data after encryption.",
                "displayName": "Deletion of data on multiple drives using cipher exe",
                "enabled": false,
                "query": "// Look for cipher.exe deleting data from multiple drives\nDeviceProcessEvents\n| where FileName =~ \"cipher.exe\" \n// cipher.exe /w flag used for deleting data \n| where ProcessCommandLine has \"/w\" \n| summarize CipherCount = dcount(ProcessCommandLine), CipherList = make_set(ProcessCommandLine, 1000) by DeviceId, DeviceName, bin(TimeGenerated, 1m) \n// cipher.exe accessing multiple drives in a short timeframe  \n| where CipherCount > 1\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Impact"
                ],
                "techniques": [
                  "T1485"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject34').analyticRuleId34,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 34",
                "parentId": "[variables('analyticRuleObject34').analyticRuleId34]",
                "contentId": "[variables('analyticRuleObject34')._analyticRulecontentId34]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject34').analyticRuleVersion34]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject34')._analyticRulecontentId34]",
        "contentKind": "AnalyticsRule",
        "displayName": "Deletion of data on multiple drives using cipher exe",
        "contentProductId": "[variables('analyticRuleObject34')._analyticRulecontentProductId34]",
        "id": "[variables('analyticRuleObject34')._analyticRulecontentProductId34]",
        "version": "[variables('analyticRuleObject34').analyticRuleVersion34]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject35').analyticRuleTemplateSpecName35]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "LaZagneCredTheft_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject35').analyticRuleVersion35]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject35')._analyticRulecontentId35]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "LaZagne is a popular open-source tool used to recover passwords stored on a local computer. It has been used in ransomware attacks to steal credentials and escalate privileges. This query looks for the execution of LaZagne.",
                "displayName": "LaZagne Credential Theft",
                "enabled": false,
                "query": "DeviceProcessEvents \n| where FileName =~ 'reg.exe'\n| where ProcessCommandLine has_all('save','hklm','sam')\n| project DeviceId, DeviceName, TimeGenerated, InitiatingProcessId, InitiatingProcessFileName, ProcessId, FileName, ProcessCommandLine\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "CredentialAccess"
                ],
                "techniques": [
                  "T1003"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Process",
                    "fieldMappings": [
                      {
                        "identifier": "ProcessId",
                        "columnName": "ProcessId"
                      },
                      {
                        "identifier": "CommandLine",
                        "columnName": "ProcessCommandLine"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject35').analyticRuleId35,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 35",
                "parentId": "[variables('analyticRuleObject35').analyticRuleId35]",
                "contentId": "[variables('analyticRuleObject35')._analyticRulecontentId35]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject35').analyticRuleVersion35]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject35')._analyticRulecontentId35]",
        "contentKind": "AnalyticsRule",
        "displayName": "LaZagne Credential Theft",
        "contentProductId": "[variables('analyticRuleObject35')._analyticRulecontentProductId35]",
        "id": "[variables('analyticRuleObject35')._analyticRulecontentProductId35]",
        "version": "[variables('analyticRuleObject35').analyticRuleVersion35]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject36').analyticRuleTemplateSpecName36]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "LogDeletionUsingWevtutil_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject36').analyticRuleVersion36]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject36')._analyticRulecontentId36]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query checks for attempts to clear at least 10 log entries from event logs using wevtutil. Clearing event logs can be a sign of ransomware activity, as ransomware often attempts to cover its tracks by deleting logs.",
                "displayName": "Clearing of forensic evidence from event logs using wevtutil",
                "enabled": false,
                "query": "// Look for use of wevtutil to clear multiple logs\nDeviceProcessEvents\n| where ProcessCommandLine has \"WEVTUTIL\" and ProcessCommandLine has \"CL\"\n| summarize LogClearCount = dcount(tostring(ProcessCommandLine)), ClearedLogList = make_set(ProcessCommandLine, 100000) by DeviceId, DeviceName, bin(TimeGenerated, 5m)\n| where LogClearCount > 10\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion"
                ],
                "techniques": [
                  "T1070"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject36').analyticRuleId36,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 36",
                "parentId": "[variables('analyticRuleObject36').analyticRuleId36]",
                "contentId": "[variables('analyticRuleObject36')._analyticRulecontentId36]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject36').analyticRuleVersion36]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject36')._analyticRulecontentId36]",
        "contentKind": "AnalyticsRule",
        "displayName": "Clearing of forensic evidence from event logs using wevtutil",
        "contentProductId": "[variables('analyticRuleObject36')._analyticRulecontentProductId36]",
        "id": "[variables('analyticRuleObject36')._analyticRulecontentProductId36]",
        "version": "[variables('analyticRuleObject36').analyticRuleVersion36]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject37').analyticRuleTemplateSpecName37]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MultiProcessKillWithTaskKill_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject37').analyticRuleVersion37]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject37')._analyticRulecontentId37]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query checks for attempts to stop at least 10 separate processes using the taskkill.exe utility. This is a common technique used by ransomware to stop security products and other processes.",
                "displayName": "Stopping multiple processes using taskkill",
                "enabled": false,
                "query": "// Find attempts to stop processes using taskkill.exe\nDeviceProcessEvents\n| where FileName =~ \"taskkill.exe\" \n| summarize taskKillCount = dcount(ProcessCommandLine), TaskKillList = make_set(ProcessCommandLine, 10000) by DeviceId, DeviceName, bin(TimeGenerated, 2m)\n| where taskKillCount > 10\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion"
                ],
                "techniques": [
                  "T1562"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject37').analyticRuleId37,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 37",
                "parentId": "[variables('analyticRuleObject37').analyticRuleId37]",
                "contentId": "[variables('analyticRuleObject37')._analyticRulecontentId37]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject37').analyticRuleVersion37]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject37')._analyticRulecontentId37]",
        "contentKind": "AnalyticsRule",
        "displayName": "Stopping multiple processes using taskkill",
        "contentProductId": "[variables('analyticRuleObject37')._analyticRulecontentProductId37]",
        "id": "[variables('analyticRuleObject37')._analyticRulecontentProductId37]",
        "version": "[variables('analyticRuleObject37').analyticRuleVersion37]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject38').analyticRuleTemplateSpecName38]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "PotentialCobaltStrikeRansomwareActivity_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject38').analyticRuleVersion38]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject38')._analyticRulecontentId38]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query searches for alerts related to suspected ransomware and Cobalt Strike activity, a tool used in numerous ransomware campaigns. It looks for alerts that indicate potential ransomware activity, such as attempts to clear security event logs, delete backup files, and execute Cobalt Strike malware.",
                "displayName": "Potential Ransomware activity related to Cobalt Strike",
                "enabled": false,
                "query": "// Look for sc.exe disabling services\nAlertInfo \n// Attempts to clear security event logs. \n| where Title in(\"Event log was cleared\", \n// List alerts flagging attempts to delete backup files. \n\"File backups were deleted\", \n// Potential Cobalt Strike activity - Note that other threat activity can also \n// trigger alerts for suspicious decoded content \n\"Suspicious decoded content\", \n// Cobalt Strike activity \n\"\\'Atosev\\' malware was detected\", \n\"\\'Ploty\\' malware was detected\", \n\"\\'Bynoco\\' malware was detected\",\n\"\\'Cobaltstrike\\' malware was detected\",\n\"Echo command over pipe on localhost\",\n\"Known attack framework activity was observed\",\n\"An active \\'Cobaltstrike\\' malware was detected\",\n\"Suspicious \\'CobaltStrike\\' behavior was prevented\",\n\"Suspicious process launch by Rundll32.exe\") \n| extend AlertTime = TimeGenerated | distinct AlertTime, AlertId, Title \n| join AlertEvidence on $left.AlertId == $right.AlertId\n| summarize by DeviceId, AlertTime, Title, AlertId\n// Get device IDs\n| join DeviceLogonEvents on $left.DeviceId == $right.DeviceId \n// Creating 10 day Window surrounding alert activity \n| where TimeGenerated < AlertTime + 12h and TimeGenerated > AlertTime - 12h // Projecting specific columns \n| project Title, DeviceName, DeviceId, TimeGenerated, LogonType, AccountDomain, AccountName, AccountSid, AlertTime, AlertId, RemoteIP, RemoteDeviceName\n| extend AccountFullName = tostring(strcat(AccountDomain, \"\\\\\", AccountName))\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "AlertInfo",
                      "AlertEvidence",
                      "DeviceLogonEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Execution",
                  "Persistence",
                  "DefenseEvasion",
                  "Impact"
                ],
                "techniques": [
                  "T1059",
                  "T1078",
                  "T1070",
                  "T1490"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "AccountFullName"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "AccountName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "AccountDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "IP",
                    "fieldMappings": [
                      {
                        "identifier": "Address",
                        "columnName": "RemoteIP"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject38').analyticRuleId38,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 38",
                "parentId": "[variables('analyticRuleObject38').analyticRuleId38]",
                "contentId": "[variables('analyticRuleObject38')._analyticRulecontentId38]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject38').analyticRuleVersion38]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject38')._analyticRulecontentId38]",
        "contentKind": "AnalyticsRule",
        "displayName": "Potential Ransomware activity related to Cobalt Strike",
        "contentProductId": "[variables('analyticRuleObject38')._analyticRulecontentProductId38]",
        "id": "[variables('analyticRuleObject38')._analyticRulecontentProductId38]",
        "version": "[variables('analyticRuleObject38').analyticRuleVersion38]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject39').analyticRuleTemplateSpecName39]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "QakbotDiscoveryActivities_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject39').analyticRuleVersion39]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject39')._analyticRulecontentId39]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This query searches for injected processes launching discovery activity. Qakbot has been observed leading to ransomware in numerous instances. It looks for discovery commands such as net.exe, whoami.exe, nslookup.exe, netstat.exe, arp.exe, and ping.exe.",
                "displayName": "Qakbot Discovery Activies",
                "enabled": false,
                "query": "DeviceProcessEvents \n| where InitiatingProcessFileName in~('mobsync.exe','explorer.exe')\n| where (FileName =~ 'net.exe' and InitiatingProcessCommandLine has_all('view','/all'))\n     or (FileName =~ 'whoami.exe' and InitiatingProcessCommandLine has '/all')\n     or (FileName =~ 'nslookup.exe' and InitiatingProcessCommandLine has_all('querytype=ALL','timeout=10'))\n     or (FileName =~ 'netstat.exe' and InitiatingProcessCommandLine has '-nao')\n     or (FileName =~ 'arp.exe' and InitiatingProcessCommandLine has '-a')\n     or (FileName =~ 'ping.exe' and InitiatingProcessCommandLine has '-t' and InitiatingProcessCommandLine endswith '127.0.0.1')\n| summarize DiscoveryCommands = dcount(InitiatingProcessCommandLine), make_set(InitiatingProcessFileName), make_set(FileName), make_set(InitiatingProcessCommandLine) by DeviceId, DeviceName, bin(TimeGenerated, 5m)   \n| where DiscoveryCommands >= 3\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "DefenseEvasion",
                  "Discovery",
                  "Execution"
                ],
                "techniques": [
                  "T1140",
                  "T1010",
                  "T1059"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject39').analyticRuleId39,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 39",
                "parentId": "[variables('analyticRuleObject39').analyticRuleId39]",
                "contentId": "[variables('analyticRuleObject39')._analyticRulecontentId39]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject39').analyticRuleVersion39]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject39')._analyticRulecontentId39]",
        "contentKind": "AnalyticsRule",
        "displayName": "Qakbot Discovery Activies",
        "contentProductId": "[variables('analyticRuleObject39')._analyticRulecontentProductId39]",
        "id": "[variables('analyticRuleObject39')._analyticRulecontentProductId39]",
        "version": "[variables('analyticRuleObject39').analyticRuleVersion39]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject40').analyticRuleTemplateSpecName40]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "ShadowCopyDeletion_AnalyticalRules Analytics Rule with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject40').analyticRuleVersion40]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject40')._analyticRulecontentId40]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "This rule detects when Shadow Copies are being deleted. This is a know actions that is performed by threat actors.\nThis query detects know commands that have been used by the ransomware actors.\nSome information from Mitre Attack: \nhttps://attack.mitre.org/techniques/T1490/",
                "displayName": "Shadow Copy Deletions",
                "enabled": false,
                "query": "let CommonRansomwareExecutionCommands = dynamic([@'vssadmin.exe delete shadows /all /quiet', \n@'wmic.exe shadowcopy delete', @'wbadmin delete catalog -quiet', \n@'Get-WmiObject Win32_Shadowcopy | ForEach-Object {$_.Delete();}',\n@'del /s /f /q c:\\*.VHD c:\\*.bac c:\\*.bak c:\\*.wbcat c:\\*.bkf c:\\Backup*.* c:\\backup*.* c:\\*.set c:\\*.win c:\\*.dsk', \n@'wbadmin delete systemstatebackup -keepVersions:0', \n@'schtasks.exe /Change /TN \"\\Microsoft\\Windows\\SystemRestore\\SR\" /disable', \n@'schtasks.exe /Change /TN \"\\Microsoft\\Windows\\SystemRestore\\SR\" /enable >nul 2>&1', \n@'reg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\SystemRestore\" /v \"DisableConfig\" /t \"REG_DWORD\" /d \"1\" /f', \n@'reg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\SystemRestore\" /v \"DisableSR\" /t \"REG_DWORD\" /d \"1\" /f', \n@'reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\" /v \"DisableConfig\" /t \"REG_DWORD\" /d \"1\" /f', \n@'reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\" /v \"DisableSR\" /t \"REG_DWORD\" /d \"1\" /f', \n@'reg delete \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\SystemRestore\" /v \"DisableConfig\" /f >nul 2>&1', \n@'reg delete \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\SystemRestore\" /v \"DisableSR\" /f >nul 2>&1', \n@'reg delete \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\" /v \"DisableConfig\" /f >nul 2>&1', \n@'reg delete \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\" /v \"DisableSR\" /f >nul 2>&1']);\nDeviceProcessEvents\n| where ProcessCommandLine has_any (CommonRansomwareExecutionCommands)\n| project-reorder TimeGenerated, ProcessCommandLine, DeviceName, AccountName\n| extend HostName = iff(DeviceName has '.', substring(DeviceName, 0, indexof(DeviceName, '.')), DeviceName)\n| extend DnsDomain = iff(DeviceName has '.', substring(DeviceName, indexof(DeviceName, '.') + 1), \"\")\n",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "MicrosoftThreatProtection",
                    "dataTypes": [
                      "DeviceProcessEvents"
                    ]
                  }
                ],
                "tactics": [
                  "Impact"
                ],
                "techniques": [
                  "T1490"
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DeviceName"
                      },
                      {
                        "identifier": "HostName",
                        "columnName": "HostName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "DnsDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Account",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "AccountUpn"
                      },
                      {
                        "identifier": "Name",
                        "columnName": "AccountName"
                      },
                      {
                        "identifier": "DnsDomain",
                        "columnName": "AccountDomain"
                      }
                    ]
                  },
                  {
                    "entityType": "Process",
                    "fieldMappings": [
                      {
                        "identifier": "ProcessId",
                        "columnName": "ProcessId"
                      },
                      {
                        "identifier": "CommandLine",
                        "columnName": "ProcessCommandLine"
                      }
                    ]
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject40').analyticRuleId40,'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Analytics Rule 40",
                "parentId": "[variables('analyticRuleObject40').analyticRuleId40]",
                "contentId": "[variables('analyticRuleObject40')._analyticRulecontentId40]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject40').analyticRuleVersion40]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject40')._analyticRulecontentId40]",
        "contentKind": "AnalyticsRule",
        "displayName": "Shadow Copy Deletions",
        "contentProductId": "[variables('analyticRuleObject40')._analyticRulecontentProductId40]",
        "id": "[variables('analyticRuleObject40')._analyticRulecontentProductId40]",
        "version": "[variables('analyticRuleObject40').analyticRuleVersion40]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject1').huntingQueryTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Appspot Phishing Abuse_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject1').huntingQueryVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_1",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Appspot Phishing Abuse",
                "category": "Hunting Queries",
                "query": "EmailUrlInfo\n// Detect URLs with a subdomain on appspot.com\n| where UrlDomain matches regex @'\\b[\\w\\-]+-dot-[\\w\\-\\.]+\\.appspot\\.com\\b'\n// Enrich results with sender and recipient data\n| join kind=inner EmailEvents on $left.NetworkMessageId==$right.NetworkMessageId\n// Phishing attempts from Appspot related campaigns typically contain the recipient's email address in the URI\n// Example 1: https://example-dot-example.appspot.com/#recipient@domain.com\n// Example 2: https://example-dot-example.appspot.com/index.html?user=recipient@domain.com\n| where Url has RecipientEmailAddress\n    // Some phishing campaigns pass recipient email as a Base64 encoded string in the URI\n    or Url has base64_encode_tostring(RecipientEmailAddress)\n| project-away NetworkMessageId1, ReportId1, Type1, TimeGenerated1, Timestamp1\n| extend Name = tostring(split(SenderFromAddress, '@', 0)[0]), UPNSuffix = tostring(split(SenderFromAddress, '@', 1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = SenderIPv4\n| extend URL_0_Url = Url\n| extend MailBox_0_MailboxPrimaryAddress = RecipientEmailAddress\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query helps surface phishing campaigns associated with Appspot abuse.These emails frequently contain phishing links that utilize the recipients' own email address as a unique identifier in the URI.\nThis campaign was published on Twitter by @MsftSecIntel at this link: https://twitter.com/MsftSecIntel/status/1374148156301004800\nReference - https://twitter.com/MsftSecIntel/status/1374148156301004800"
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1566"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 1",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject1')._huntingQuerycontentId1)]",
                "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject1').huntingQueryVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
        "contentKind": "HuntingQuery",
        "displayName": "Appspot Phishing Abuse",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject1')._huntingQuerycontentId1,'-', '1.1.0')))]",
        "version": "1.1.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject2').huntingQueryTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Check for spoofing attempts on the domain with Authentication failures_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject2').huntingQueryVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_2",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Spoofing attempts from Specific Domains",
                "category": "Hunting Queries",
                "query": "// Add the list of domains to search for.\nlet DomainList = dynamic([\"contoso.com\"]); \nEmailEvents \n| where TimeGenerated > ago (1d) and DetectionMethods has \"spoof\" and SenderFromDomain in~ (DomainList)\n| project TimeGenerated, AR=parse_json(AuthenticationDetails) , NetworkMessageId, EmailDirection, Subject, SenderFromAddress, SenderIPv4, ThreatTypes, DetectionMethods, ThreatNames  \n| evaluate bag_unpack(AR)  \n| where column_ifexists('SPF','') =~ \"fail\" or  column_ifexists('DMARC','') =~ \"fail\" or column_ifexists('DKIM','') =~ \"fail\" or column_ifexists('CompAuth','') =~ \"fail\"\n| extend Name = tostring(split(SenderFromAddress, '@', 0)[0]), UPNSuffix = tostring(split(SenderFromAddress, '@', 1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = SenderIPv4\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query identifies potential phishing or spoofing attempts originating from specific domains with authentication failures."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1566"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 2",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject2')._huntingQuerycontentId2)]",
                "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject2').huntingQueryVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
        "contentKind": "HuntingQuery",
        "displayName": "Spoofing attempts from Specific Domains",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject2')._huntingQuerycontentId2,'-', '1.1.0')))]",
        "version": "1.1.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject3').huntingQueryTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Delivered Bad Emails from Top bad IPv4 addresses_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject3').huntingQueryVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_3",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Determine Successfully Delivered Phishing Emails by top IP Addresses",
                "category": "Hunting Queries",
                "query": "// Adjust the cutoff as needed \nlet cutoff = 5;\nEmailEvents\n| where ThreatTypes has \"Malware\" or ThreatTypes has \"Phish\" \n| summarize count() by SenderIPv4 \n| where count_ > cutoff\n| join kind=inner EmailEvents on SenderIPv4  \n| where DeliveryAction =~ \"Delivered\"\n| extend Name = tostring(split(SenderFromAddress, '@', 0)[0]), UPNSuffix = tostring(split(SenderFromAddress, '@', 1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = SenderIPv4\n| extend MailBox_0_MailboxPrimaryAddress = RecipientEmailAddress\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query identifies phishing emails sent that were successfully delivered, by top IP addressess. cutoff default value is 5, adjust the value as needed."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1566"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject3')._huntingQuerycontentId3),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 3",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject3')._huntingQuerycontentId3)]",
                "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject3').huntingQueryVersion3]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
        "contentKind": "HuntingQuery",
        "displayName": "Determine Successfully Delivered Phishing Emails by top IP Addresses",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject3')._huntingQuerycontentId3,'-', '1.0.1')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject3')._huntingQuerycontentId3,'-', '1.0.1')))]",
        "version": "1.0.1"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject4').huntingQueryTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "EmailDelivered-ToInbox_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject4').huntingQueryVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_4",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Determine Successfully Delivered Phishing Emails to Inbox/Junk folder.",
                "category": "Hunting Queries",
                "query": "EmailEvents\n| where isnotempty(ThreatTypes) and DeliveryLocation in~ (\"Inbox/folder\",\"Junk folder\")\n| extend Name = tostring(split(SenderFromAddress, '@', 0)[0]), UPNSuffix = tostring(split(SenderFromAddress, '@', 1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_UPNSuffix = UPNSuffix\n| extend IP_0_Address = SenderIPv4\n| extend MailBox_0_MailboxPrimaryAddress = RecipientEmailAddress\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query identifies threats which got successfully delivered to Inbox/Junk folder."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  },
                  {
                    "name": "techniques",
                    "value": "T1566"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject4')._huntingQuerycontentId4),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 4",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject4')._huntingQuerycontentId4)]",
                "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject4').huntingQueryVersion4]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
        "contentKind": "HuntingQuery",
        "displayName": "Determine Successfully Delivered Phishing Emails to Inbox/Junk folder.",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject4')._huntingQuerycontentId4,'-', '1.0.1')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject4')._huntingQuerycontentId4,'-', '1.0.1')))]",
        "version": "1.0.1"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject5').huntingQueryTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DeimosComponentExecution_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject5').huntingQueryVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_5",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Deimos Component Execution",
                "category": "Hunting Queries",
                "query": "DeviceEvents   \n| where InitiatingProcessFileName =~ \"powershell.exe\"\n| where ActionType == \"AmsiScriptContent\"\n| where AdditionalFields endswith '[mArS.deiMos]::inteRaCt()\"}'\n| project InitiatingProcessParentFileName, InitiatingProcessFileName, InitiatingProcessCommandLine, ActionType, AdditionalFields\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Jupyter, otherwise known as SolarMarker, is a malware family and cluster of components known for its info-stealing and backdoor capabilities that mainly proliferates through search engine optimization manipulation and malicious advertising."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution,Collection,Exfiltration,Impact"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject5')._huntingQuerycontentId5),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 5",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject5')._huntingQuerycontentId5)]",
                "contentId": "[variables('huntingQueryObject5')._huntingQuerycontentId5]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject5').huntingQueryVersion5]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject5')._huntingQuerycontentId5]",
        "contentKind": "HuntingQuery",
        "displayName": "Deimos Component Execution",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject5')._huntingQuerycontentId5,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject5')._huntingQuerycontentId5,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject6').huntingQueryTemplateSpecName6]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "LemonDuckRegistrationFunction_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject6').huntingQueryVersion6]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_6",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "LemonDuck Registration Function",
                "category": "Hunting Queries",
                "query": "DeviceEvents\n| where ActionType == \"PowerShellCommand\"\n| where AdditionalFields =~ \"{\\\"Command\\\":\\\"SIEX\\\"}\"\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "LemonDuck is a malware primarily known for its botnet and cryptocurrency mining objectives. First discovered in 2019, LemonDuck has since adopted more sophisticated behavior and escalated its operations in 2021."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution,Persistence,LateralMovement,CommandAndControl"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject6')._huntingQuerycontentId6),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 6",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject6')._huntingQuerycontentId6)]",
                "contentId": "[variables('huntingQueryObject6')._huntingQuerycontentId6]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject6').huntingQueryVersion6]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject6')._huntingQuerycontentId6]",
        "contentKind": "HuntingQuery",
        "displayName": "LemonDuck Registration Function",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject6')._huntingQuerycontentId6,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject6')._huntingQuerycontentId6,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject7').huntingQueryTemplateSpecName7]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DeviceWithLog4jAlerts_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject7').huntingQueryVersion7]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_7",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Devices with Log4j vulnerability alerts and additional other alert related context",
                "category": "Hunting Queries",
                "query": "// Get any devices with Log4J related Alert Activity\nlet DevicesLog4JAlerts = AlertInfo\n| where Title in~('Suspicious script launched',\n'Exploitation attempt against Log4j (CVE-2021-44228)',\n'Suspicious process executed by a network service',\n'Possible target of Log4j exploitation (CVE-2021-44228)',\n'Possible target of Log4j exploitation',\n'Possible Log4j exploitation',\n'Network connection seen in CVE-2021-44228 exploitation',\n'Log4j exploitation detected',\n'Possible exploitation of CVE-2021-44228',\n'Possible target of Log4j vulnerability (CVE-2021-44228) scanning',\n'Possible source of Log4j exploitation'\n'Log4j exploitation attempt via cloud application', // Previously titled Exploitation attempt against Log4j\n'Log4j exploitation attempt via email' // Previously titled Log4j Exploitation Attempt\n)\n// Join in evidence information\n| join kind=innerunique AlertEvidence on AlertId\n| where DeviceId != \"\"\n| summarize by DeviceId, Title;\n// Get additional alert activity for each device\nAlertEvidence\n| where DeviceId in(DevicesLog4JAlerts)\n// Add additional info\n| join kind=leftouter AlertInfo on AlertId\n| summarize DeviceAlerts = make_set(Title, 100000), AlertIDs = make_set(AlertId, 100000) by DeviceId, bin(TimeGenerated, 1d)\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Microsoft has observed threat actors exploiting vulnerabilities associated with Log4J."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess,Execution"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject7')._huntingQuerycontentId7),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 7",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject7')._huntingQuerycontentId7)]",
                "contentId": "[variables('huntingQueryObject7')._huntingQuerycontentId7]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject7').huntingQueryVersion7]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject7')._huntingQuerycontentId7]",
        "contentKind": "HuntingQuery",
        "displayName": "Devices with Log4j vulnerability alerts and additional other alert related context",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject7')._huntingQuerycontentId7,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject7')._huntingQuerycontentId7,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject8').huntingQueryTemplateSpecName8]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Log4jVulnRelatedAlerts_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject8').huntingQueryVersion8]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_8",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Alerts Related to Log4j Vulnerability",
                "category": "Hunting Queries",
                "query": "AlertInfo\n| where Title in~('Suspicious script launched',\n'Exploitation attempt against Log4j (CVE-2021-44228)',\n'Suspicious process executed by a network service',\n'Possible target of Log4j exploitation (CVE-2021-44228)',\n'Possible target of Log4j exploitation',\n'Possible Log4j exploitation',\n'Network connection seen in CVE-2021-44228 exploitation',\n'Log4j exploitation detected',\n'Possible exploitation of CVE-2021-44228',\n'Possible target of Log4j vulnerability (CVE-2021-44228) scanning',\n'Possible source of Log4j exploitation',\n'Log4j exploitation attempt via cloud application', // Previously titled Exploitation attempt against Log4j\n'Log4j exploitation attempt via email' // Previously titled Log4j Exploitation Attempt\n)\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Microsoft has observed attackers exploiting vulnerabilities associated with Log4J."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject8')._huntingQuerycontentId8),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 8",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject8')._huntingQuerycontentId8)]",
                "contentId": "[variables('huntingQueryObject8')._huntingQuerycontentId8]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject8').huntingQueryVersion8]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject8')._huntingQuerycontentId8]",
        "contentKind": "HuntingQuery",
        "displayName": "Alerts Related to Log4j Vulnerability",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject8')._huntingQuerycontentId8,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject8')._huntingQuerycontentId8,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject9').huntingQueryTemplateSpecName9]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MaliciousUseOfMSBuildAsLoLBin_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject9').huntingQueryVersion9]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_9",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Malicious Use of MSBuild as LOLBin",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents \n| where InitiatingProcessFileName =~ \"wmiprvse.exe\" \n| where FileName =~ \"msbuild.exe\" and ProcessCommandLine has \"programdata\"\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Prior to deploying Macaw ransomware in an organization, the adversary frequently uses MSBuild.exe as a LOLBin to communicate with the C2."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject9')._huntingQuerycontentId9),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 9",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject9')._huntingQuerycontentId9)]",
                "contentId": "[variables('huntingQueryObject9')._huntingQuerycontentId9]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject9').huntingQueryVersion9]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject9')._huntingQuerycontentId9]",
        "contentKind": "HuntingQuery",
        "displayName": "Malicious Use of MSBuild as LOLBin",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject9')._huntingQuerycontentId9,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject9')._huntingQuerycontentId9,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject10').huntingQueryTemplateSpecName10]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "QakbotReconActivities_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject10').huntingQueryVersion10]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_10",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Qakbot Reconnaissance Activities",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents\n| where InitiatingProcessFileName == InitiatingProcessCommandLine\n| where ProcessCommandLine has_any (\n\"whoami /all\",\"cmd /c set\",\"arp -a\",\"ipconfig /all\",\"net view /all\",\"nslookup -querytype=ALL -timeout=10\",\n\"net share\",\"route print\",\"netstat -nao\",\"net localgroup\")\n| summarize dcount(FileName), make_set(ProcessCommandLine, 10000) by DeviceId,bin(TimeGenerated, 1d), InitiatingProcessFileName, InitiatingProcessCommandLine\n| where dcount_FileName >= 8\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query searches for reconnaissance and beaconing activities after code injection occurs in Qakbot infections."
                  },
                  {
                    "name": "tactics",
                    "value": "Discovery"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject10')._huntingQuerycontentId10),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 10",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject10')._huntingQuerycontentId10)]",
                "contentId": "[variables('huntingQueryObject10')._huntingQuerycontentId10]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject10').huntingQueryVersion10]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject10')._huntingQuerycontentId10]",
        "contentKind": "HuntingQuery",
        "displayName": "Qakbot Reconnaissance Activities",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject10')._huntingQuerycontentId10,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject10')._huntingQuerycontentId10,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject11').huntingQueryTemplateSpecName11]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "JudgementPandaExfilActivity_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject11').huntingQueryVersion11]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_11",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Judgement Panda Exfil Activity",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents\n| where TimeGenerated > ago(7d)\n| where ProcessCommandLine has @\"\\ldifde.exe -f -n \"\n     or ProcessCommandLine has @\"\\7za.exe a 1.7z \" \n     or ProcessCommandLine endswith @\" eprod.ldf\" \n     or ProcessCommandLine has @\"\\aaaa\\procdump64.exe\" \n     or ProcessCommandLine has @\"\\aaaa\\netsess.exe\" \n     or ProcessCommandLine has @\"\\aaaa\\7za.exe\" \n     or ProcessCommandLine has @\"copy .\\1.7z \\\" \n     or ProcessCommandLine has @\"copy \\client\\c$\\aaaa\\\" \n     or FolderPath == @\"C:\\Users\\Public\\7za.exe\"\n| top 100 by TimeGenerated desc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Original Sigma Rule: https://github.com/Neo23x0/sigma/blob/master/rules/apt/apt_judgement_panda_gtr19.yml.\nQuestions via Twitter: @janvonkirchheim."
                  },
                  {
                    "name": "tactics",
                    "value": "Collection"
                  },
                  {
                    "name": "techniques",
                    "value": "T1560"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject11')._huntingQuerycontentId11),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 11",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject11')._huntingQuerycontentId11)]",
                "contentId": "[variables('huntingQueryObject11')._huntingQuerycontentId11]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject11').huntingQueryVersion11]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject11')._huntingQuerycontentId11]",
        "contentKind": "HuntingQuery",
        "displayName": "Judgement Panda Exfil Activity",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject11')._huntingQuerycontentId11,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject11')._huntingQuerycontentId11,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject12').huntingQueryTemplateSpecName12]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "C2-NamedPipe_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject12').huntingQueryVersion12]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_12",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "C2-NamedPipe",
                "category": "Hunting Queries",
                "query": "// maximum lookback time\nlet minTimeRange = ago(7d);\n// this is what should be constantly tweaked with default C2 framework names, search uses has_any (wildcard)\nlet badPipeNames = pack_array(\n    '\\\\psexec',                                     // PSexec default pipe\n    '\\\\paexec',                                     // PSexec default pipe\n    '\\\\remcom',                                     // PSexec default pipe\n    '\\\\csexec',                                     // PSexec default pipe\n    '\\\\isapi_http',                                 // Uroburos Malware Named Pipe\n    '\\\\isapi_dg',                                   // Uroburos Malware Named Pipe\n    '\\\\isapi_dg2',                                  // Uroburos Malware Named Pipe\n    '\\\\sdlrpc',                                     // Cobra Trojan Named Pipe http://goo.gl/8rOZUX\n    '\\\\ahexec',                                     // Sofacy group malware\n    '\\\\winsession',                                 // Wild Neutron APT malware https://goo.gl/pivRZJ\n    '\\\\lsassw',                                     // Wild Neutron APT malware https://goo.gl/pivRZJ\n    '\\\\46a676ab7f179e511e30dd2dc41bd388',           // Project Sauron https://goo.gl/eFoP4A\n    '\\\\9f81f59bc58452127884ce513865ed20',           // Project Sauron https://goo.gl/eFoP4A\n    '\\\\e710f28d59aa529d6792ca6ff0ca1b34',           // Project Sauron https://goo.gl/eFoP4A\n    '\\\\rpchlp_3',                                   // Project Sauron https://goo.gl/eFoP4A - Technical Analysis Input\n    '\\\\NamePipe_MoreWindows',                       // Cloud Hopper Annex B https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf, US-CERT Alert - RedLeaves https://www.us-cert.gov/ncas/alerts/TA17-117A\n    '\\\\pcheap_reuse',                               // Pipe used by Equation Group malware 77486bb828dba77099785feda0ca1d4f33ad0d39b672190079c508b3feb21fb0\n    '\\\\gruntsvc',                                   // Covenant default named pipe\n    '\\\\583da945-62af-10e8-4902-a8f205c72b2e',       // SolarWinds SUNBURST malware report https://www.fireeye.com/blog/threat-research/2020/12/evasive-attacker-leverages-solarwinds-supply-chain-compromises-with-sunburst-backdoor.html\n    '\\\\bizkaz',                                     // Snatch Ransomware https://thedfirreport.com/2020/06/21/snatch-ransomware/\n    '\\\\atctl',                                      // https://www.virustotal.com/#/file/a4ddb2664a6c87a1d3c5da5a5a32a5df9a0b0c8f2e951811bd1ec1d44d42ccf1/detection\n    '\\\\userpipe',                                   // ruag apt case\n    '\\\\iehelper',                                   // ruag apt case\n    '\\\\sdlrpc',                                     // project cobra https://www.gdatasoftware.com/blog/2015/01/23926-analysis-of-project-cobra\n    '\\\\comnap',                                     // https://www.gdatasoftware.com/blog/2015/01/23926-analysis-of-project-cobra\n    '\\\\lsadump',                                    // Cred Dump-Tools Named Pipes\n    '\\\\cachedump',                                  // Cred Dump-Tools Named Pipes\n    '\\\\wceservicepipe',                             // Cred Dump-Tools Named Pipes\n    '\\\\jaccdpqnvbrrxlaf',                           // PoshC2 default named pipe\n    '\\\\svcctl',                                     // CrackMapExec default named pipe\n    '\\\\csexecsvc'                                   // CSEXEC default named pipe\n    '\\\\status_',                                    // CS default named pipes https://github.com/Neo23x0/sigma/issues/253\n    '\\\\MSSE-',                                      // CobaltStrike default named pipe\n    '\\\\status_',                                    // CobaltStrike default named pipe\n    '\\\\msagent_',                                   // (target) CobaltStrike default named pipe\n    '\\\\postex_ssh_',                                // CobaltStrike default named pipe\n    '\\\\postex_',                                    // CobaltStrike default named pipe\n    '\\\\Posh'                                        // PoshC2 default named pipe\n);\nDeviceEvents\n| where ActionType == \"NamedPipeEvent\" and Timestamp > minTimeRange\n| extend ParsedFields=parse_json(AdditionalFields)\n| where ParsedFields.FileOperation == \"File created\"\n| where ParsedFields.PipeName has_any (badPipeNames)\n| project TimeGenerated, ActionType, DeviceName, InitiatingProcessAccountDomain, InitiatingProcessAccountName, InitiatingProcessFolderPath, InitiatingProcessCommandLine, ParsedFields.FileOperation, ParsedFields.PipeName\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Detects the creation of a named pipe used by known APT malware.\nReference - https://docs.microsoft.com/openspecs/windows_protocols/ms-wpo/4de75e21-36fd-440a-859b-75accc74487c"
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject12')._huntingQuerycontentId12),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 12",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject12')._huntingQuerycontentId12)]",
                "contentId": "[variables('huntingQueryObject12')._huntingQuerycontentId12]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject12').huntingQueryVersion12]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject12')._huntingQuerycontentId12]",
        "contentKind": "HuntingQuery",
        "displayName": "C2-NamedPipe",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject12')._huntingQuerycontentId12,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject12')._huntingQuerycontentId12,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject13').huntingQueryTemplateSpecName13]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "ReconWithRundll_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject13').huntingQueryVersion13]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_13",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Recon with Rundll",
                "category": "Hunting Queries",
                "query": "DeviceNetworkEvents\n| where InitiatingProcessFileName =~ \"rundll32.exe\"\n// Empty command line\n| where InitiatingProcessCommandLine has \"rundll32.exe\" and InitiatingProcessCommandLine !contains \" \" \nand InitiatingProcessCommandLine != \"\" \n| summarize DestinationIPCount = dcount(RemoteIP), make_set(RemoteIP, 100000), make_set(RemoteUrl, 100000), \nmake_set(RemotePort, 100000) by InitiatingProcessCommandLine, DeviceId, bin(TimeGenerated, 5m)\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query detects suspicious rundll.exe activity associated with Trickbot campaigns."
                  },
                  {
                    "name": "tactics",
                    "value": "Discovery,Collection,CommandAndControl"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject13')._huntingQuerycontentId13),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 13",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject13')._huntingQuerycontentId13)]",
                "contentId": "[variables('huntingQueryObject13')._huntingQuerycontentId13]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject13').huntingQueryVersion13]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject13')._huntingQuerycontentId13]",
        "contentKind": "HuntingQuery",
        "displayName": "Recon with Rundll",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject13')._huntingQuerycontentId13,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject13')._huntingQuerycontentId13,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject14').huntingQueryTemplateSpecName14]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DoppelPaymerProcdump_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject14').huntingQueryVersion14]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_14",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "DopplePaymer Procdump",
                "category": "Hunting Queries",
                "query": "// Dumping of LSASS memory using procdump\nDeviceProcessEvents\n| where TimeGenerated > ago(7d)\n// Command lines that include \"lsass\" and -accepteula or -ma flags used in procdump\n| where (ProcessCommandLine has \"lsass\" and (ProcessCommandLine has \"-accepteula\" or\nProcessCommandLine contains \"-ma\"))\n// Omits possible FPs where the full command is just \"procdump.exe lsass\"\nor (FileName in~ ('procdump.exe','procdump64.exe') and ProcessCommandLine has 'lsass')\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Detects the use of ProcDump to dump credentials from LSASS memory by DoppelPaymer ransomware operators."
                  },
                  {
                    "name": "tactics",
                    "value": "CredentialAccess"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject14')._huntingQuerycontentId14),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 14",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject14')._huntingQuerycontentId14)]",
                "contentId": "[variables('huntingQueryObject14')._huntingQuerycontentId14]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject14').huntingQueryVersion14]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject14')._huntingQuerycontentId14]",
        "contentKind": "HuntingQuery",
        "displayName": "DopplePaymer Procdump",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject14')._huntingQuerycontentId14,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject14')._huntingQuerycontentId14,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject15').huntingQueryTemplateSpecName15]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "LaZagne_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject15').huntingQueryVersion15]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_15",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Credential Harvesting Using LaZagne",
                "category": "Hunting Queries",
                "query": "// Find credential theft via SAM database export by LaZagne\nDeviceProcessEvents\n| where TimeGenerated > ago(7d)\n| where FileName =~ 'reg.exe'\n    and ProcessCommandLine has 'save'\n    and ProcessCommandLine has 'hklm'\n    and ProcessCommandLine has 'sam'\n| project DeviceId, TimeGenerated, InitiatingProcessId,\nInitiatingProcessFileName, ProcessId, FileName, ProcessCommandLine\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Detects the use of LaZagne to steal credentials from the SAM database by Ryuk ransomware operators."
                  },
                  {
                    "name": "tactics",
                    "value": "CredentialAccess"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject15')._huntingQuerycontentId15),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 15",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject15')._huntingQuerycontentId15)]",
                "contentId": "[variables('huntingQueryObject15')._huntingQuerycontentId15]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject15').huntingQueryVersion15]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject15')._huntingQuerycontentId15]",
        "contentKind": "HuntingQuery",
        "displayName": "Credential Harvesting Using LaZagne",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject15')._huntingQuerycontentId15,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject15')._huntingQuerycontentId15,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject16').huntingQueryTemplateSpecName16]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "LSASSCredDumpProcdump_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject16').huntingQueryVersion16]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_16",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "LSASS Credential Dumping with Procdump",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents \n| where (FileName has_any (\"procdump.exe\", \"procdump64.exe\") and ProcessCommandLine has \"lsass\") or \n// Looking for Accepteula flag or Write a dump file with all process memory\n(ProcessCommandLine has \"lsass.exe\" and (ProcessCommandLine has \"-accepteula\" or ProcessCommandLine contains \"-ma\"))\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Detects the use of Procdump to dump credentials from LSASS memory."
                  },
                  {
                    "name": "tactics",
                    "value": "CredentialAccess"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject16')._huntingQuerycontentId16),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 16",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject16')._huntingQuerycontentId16)]",
                "contentId": "[variables('huntingQueryObject16')._huntingQuerycontentId16]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject16').huntingQueryVersion16]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject16')._huntingQuerycontentId16]",
        "contentKind": "HuntingQuery",
        "displayName": "LSASS Credential Dumping with Procdump",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject16')._huntingQuerycontentId16,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject16')._huntingQuerycontentId16,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject17').huntingQueryTemplateSpecName17]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DoppelpaymerStopServices_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject17').huntingQueryVersion17]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_17",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Doppelpaymer Stop Services",
                "category": "Hunting Queries",
                "query": "// Attempts to stop services and allow ransomware execution\nDeviceProcessEvents\n| where TimeGenerated > ago(7d)\n| where InitiatingProcessFileName startswith \"psexe\" and FileName =~ \"powershell.exe\" and\nProcessCommandLine has \"stop-service\"\nand ProcessCommandLine has \"sql\" and ProcessCommandLine has \"msexchange\"\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query searches for attempts to stop security services, which is a common tactic used by DoppelPaymer ransomware operators."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution,DefenseEvasion"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject17')._huntingQuerycontentId17),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 17",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject17')._huntingQuerycontentId17)]",
                "contentId": "[variables('huntingQueryObject17')._huntingQuerycontentId17]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject17').huntingQueryVersion17]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject17')._huntingQuerycontentId17]",
        "contentKind": "HuntingQuery",
        "displayName": "Doppelpaymer Stop Services",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject17')._huntingQuerycontentId17,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject17')._huntingQuerycontentId17,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject18').huntingQueryTemplateSpecName18]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "QakbotCampaignSelfDeletion_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject18').huntingQueryVersion18]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_18",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Qakbot Campaign Self Deletion",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents \n| where FileName =~ \"ping.exe\"\n| where InitiatingProcessFileName =~ \"cmd.exe\"\n| where (InitiatingProcessCommandLine has \"calc.exe\") and (InitiatingProcessCommandLine has \"-n 6\") and (InitiatingProcessCommandLine has \"127.0.0.1\")\n| project TimeGenerated, ProcessCommandLine, InitiatingProcessCommandLine, InitiatingProcessParentFileName, DeviceId\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query detects if an instance of Qakbot has attempted to overwrite its original binary."
                  },
                  {
                    "name": "tactics",
                    "value": "DefenseEvasion"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject18')._huntingQuerycontentId18),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 18",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject18')._huntingQuerycontentId18)]",
                "contentId": "[variables('huntingQueryObject18')._huntingQuerycontentId18]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject18').huntingQueryVersion18]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject18')._huntingQuerycontentId18]",
        "contentKind": "HuntingQuery",
        "displayName": "Qakbot Campaign Self Deletion",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject18')._huntingQuerycontentId18,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject18')._huntingQuerycontentId18,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject19').huntingQueryTemplateSpecName19]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SuspiciousCommandInitiatedByWebServerProcess_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject19').huntingQueryVersion19]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_19",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Detect Suspicious Commands Initiated by Webserver Processes",
                "category": "Hunting Queries",
                "query": "// Suspicious commands launched by web server processes\nDeviceProcessEvents \n| where TimeGenerated > ago(7d)\n// Pivoting on parents or grand parents\nand (((InitiatingProcessParentFileName in(\"w3wp.exe\", \"beasvc.exe\",\n\"httpd.exe\") or InitiatingProcessParentFileName startswith \"tomcat\")\nor InitiatingProcessFileName in(\"w3wp.exe\", \"beasvc.exe\", \"httpd.exe\") or\nInitiatingProcessFileName startswith \"tomcat\"))\n    and FileName in~('cmd.exe','powershell.exe')\n| where ProcessCommandLine contains '%temp%'\n    or ProcessCommandLine has 'wget'\n    or ProcessCommandLine has 'whoami'\n    or ProcessCommandLine has 'certutil'\n    or ProcessCommandLine has 'systeminfo'\n    or ProcessCommandLine has 'ping'\n    or ProcessCommandLine has 'ipconfig'\n    or ProcessCommandLine has 'timeout'\n| summarize take_any(TimeGenerated), take_any(TimeGenerated), take_any(FileName),\nmake_set(ProcessCommandLine, 100000), take_any(InitiatingProcessFileName),\ntake_any(InitiatingProcessParentFileName) by DeviceId\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Detect suspicious commands initiated by web server processes used for network discovery and user/owner discovery."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution,DefenseEvasion,Discovery"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject19')._huntingQuerycontentId19),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 19",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject19')._huntingQuerycontentId19)]",
                "contentId": "[variables('huntingQueryObject19')._huntingQuerycontentId19]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject19').huntingQueryVersion19]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject19')._huntingQuerycontentId19]",
        "contentKind": "HuntingQuery",
        "displayName": "Detect Suspicious Commands Initiated by Webserver Processes",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject19')._huntingQuerycontentId19,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject19')._huntingQuerycontentId19,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject20').huntingQueryTemplateSpecName20]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AnomalousPayloadDeliveredWithISOFile_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject20').huntingQueryVersion20]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_20",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Anomalous Payload Delivered from ISO files",
                "category": "Hunting Queries",
                "query": "DeviceEvents\n| where TimeGenerated > ago(30d) \n| where ActionType == 'BrowserLaunchedToOpenUrl' \n| where RemoteUrl endswith \".lnk\"\n| where RemoteUrl !startswith \"C:\"\n| project LNKLaunchTimestamp = TimeGenerated, DeviceName, RemoteUrl\n| parse RemoteUrl with Drive '\\\\' *\n| extend Drive= tostring(Drive)\n| where isnotempty(Drive)\n| join kind=innerunique (\nDeviceProcessEvents\n| where TimeGenerated > ago(30d)\n| where FolderPath !startswith \"C:\"\n| parse FolderPath with Drive '\\\\' *\n| project Drive= tostring(Drive), StartedProcessTimestamp = TimeGenerated, StartedProcessName = FileName, StartedProcessSHA1 = SHA1, StartedProcessCommandline = ProcessCommandLine, StartedProcessPath = FolderPath, DeviceName, StartedProcessParentName = InitiatingProcessFileName, StartedProcessParentCmdline = InitiatingProcessCommandLine, StartedParentProcessFolderPath = InitiatingProcessFolderPath, StartedProcessGrandParent = InitiatingProcessParentFileName, TimeGenerated\n) on DeviceName, Drive\n| where StartedProcessTimestamp between (LNKLaunchTimestamp ..(LNKLaunchTimestamp+1m))\n| project-away Drive1, DeviceName1\n| project-reorder LNKLaunchTimestamp, StartedProcessTimestamp, DeviceName, RemoteUrl, Drive, StartedProcessName, StartedProcessSHA1, StartedProcessPath,StartedProcessCommandline, StartedProcessParentName, StartedProcessParentCmdline, StartedParentProcessFolderPath, StartedProcessGrandParent, TimeGenerated\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query searches for lnk file executions from other locations than C: drive, which can relate to mounted ISO-files."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution"
                  },
                  {
                    "name": "techniques",
                    "value": "T1204"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject20')._huntingQuerycontentId20),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 20",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject20')._huntingQuerycontentId20)]",
                "contentId": "[variables('huntingQueryObject20')._huntingQuerycontentId20]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject20').huntingQueryVersion20]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject20')._huntingQuerycontentId20]",
        "contentKind": "HuntingQuery",
        "displayName": "Anomalous Payload Delivered from ISO files",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject20')._huntingQuerycontentId20,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject20')._huntingQuerycontentId20,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject21').huntingQueryTemplateSpecName21]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "BitsadminActivity_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject21').huntingQueryVersion21]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_21",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Bitsadmin Activity",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents\n| where \n    (FileName =~ \"bitsadmin.exe\" or column_ifexists('ProcessVersionInfoOriginalFileName','ColumnNotAvailable') =~ 'bitsadmin.exe')\n    and ProcessCommandLine has_any ('/Transfer','/AddFile', '/AddFileSet','/AddFileWithRanges')\n| extend \n    ParsedCommandLine = parse_command_line(ProcessCommandLine,'windows')\n| extend     \n    RemoteUrl = tostring(ParsedCommandLine[-2]),\n    LocalFile= tostring(ParsedCommandLine[-1]),\n    Direction = iff(ProcessCommandLine has \"/Upload\", 'Upload', 'Download')\n| project-reorder \n    TimeGenerated,\n    DeviceId,\n    DeviceName,\n    Direction,\n    RemoteUrl,\n    LocalFile,\n    InitiatingProcessFolderPath,\n    InitiatingProcessAccountDomain,\n    InitiatingProcessAccountName,\n    InitiatingProcessSHA256,\n    ProcessCommandLine\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query searches for use of bitsadmin.exe for file transfer, which can be used for legitimate purposes or as part of a malware downloader."
                  },
                  {
                    "name": "tactics",
                    "value": "Persistence,CommandAndControl,Exfiltration"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject21')._huntingQuerycontentId21),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 21",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject21')._huntingQuerycontentId21)]",
                "contentId": "[variables('huntingQueryObject21')._huntingQuerycontentId21]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject21').huntingQueryVersion21]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject21')._huntingQuerycontentId21]",
        "contentKind": "HuntingQuery",
        "displayName": "Bitsadmin Activity",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject21')._huntingQuerycontentId21,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject21')._huntingQuerycontentId21,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject22').huntingQueryTemplateSpecName22]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MaliciousUseOfMSIExec_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject22').huntingQueryVersion22]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_22",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Detect Malicious use of MSIExec",
                "category": "Hunting Queries",
                "query": "//Find possible download and execution using Msiexec\nDeviceProcessEvents\n| where TimeGenerated > ago(7d)\n//MSIExec\n| where FileName =~ \"msiexec.exe\" and \n//With domain in command line\n(ProcessCommandLine has \"http\" and ProcessCommandLine has \"return\")//Find PowerShell running files from the temp folder\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query detects possible download and execution using Msiexec."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution,PrivilegeEscalation,CredentialAccess"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject22')._huntingQuerycontentId22),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 22",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject22')._huntingQuerycontentId22)]",
                "contentId": "[variables('huntingQueryObject22')._huntingQuerycontentId22]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject22').huntingQueryVersion22]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject22')._huntingQuerycontentId22]",
        "contentKind": "HuntingQuery",
        "displayName": "Detect Malicious use of MSIExec",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject22')._huntingQuerycontentId22,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject22')._huntingQuerycontentId22,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject23').huntingQueryTemplateSpecName23]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MaliciousUseOfMsiExecMimikatz_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject23').huntingQueryVersion23]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_23",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Detect Malicious use of Msiexec Mimikatz",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents\n| where Timestamp > ago(7d)\n| where InitiatingProcessFileName =~ \"msiexec.exe\"\n//Mimikatz commands\nand (ProcessCommandLine contains \"privilege::\" \nor ProcessCommandLine has \"sekurlsa\" \nor ProcessCommandLine contains \"token::\")\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query searches for malicious use of msiexec.exe, particularly alongside mimikatz, a common credential dumper and privilege escalation tool."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution,CredentialAccess,PrivilegeEscalation"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject23')._huntingQuerycontentId23),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 23",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject23')._huntingQuerycontentId23)]",
                "contentId": "[variables('huntingQueryObject23')._huntingQuerycontentId23]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject23').huntingQueryVersion23]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject23')._huntingQuerycontentId23]",
        "contentKind": "HuntingQuery",
        "displayName": "Detect Malicious use of Msiexec Mimikatz",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject23')._huntingQuerycontentId23,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject23')._huntingQuerycontentId23,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject24').huntingQueryTemplateSpecName24]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "OfficeAppsLaunchingWscript_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject24').huntingQueryVersion24]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_24",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Office Apps Launching Wscipt",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents \n| where InitiatingProcessFileName in~('winword.exe', 'excel.exe', 'outlook.exe') \n| where FileName =~ \"wscript.exe\" and ProcessCommandLine has \".jse\" \n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "The query searches for Office applications launching wscript.exe to run a JSE file."
                  },
                  {
                    "name": "tactics",
                    "value": "LateralMovement,Collection,CommandAndControl"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject24')._huntingQuerycontentId24),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 24",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject24')._huntingQuerycontentId24)]",
                "contentId": "[variables('huntingQueryObject24')._huntingQuerycontentId24]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject24').huntingQueryVersion24]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject24')._huntingQuerycontentId24]",
        "contentKind": "HuntingQuery",
        "displayName": "Office Apps Launching Wscipt",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject24')._huntingQuerycontentId24,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject24')._huntingQuerycontentId24,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject25').huntingQueryTemplateSpecName25]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "PowerShellDownloads_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject25').huntingQueryVersion25]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_25",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "PowerShell Downloads",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents\n| where TimeGenerated > ago(7d)\n| where FileName in~ (\"powershell.exe\", \"powershell_ise.exe\")\n| where ProcessCommandLine has \"Net.WebClient\"\n   or ProcessCommandLine has \"DownloadFile\"\n   or ProcessCommandLine has \"Invoke-WebRequest\"\n   or ProcessCommandLine has \"Invoke-Shellcode\"\n   or ProcessCommandLine has \"http\"\n   or ProcessCommandLine has \"IEX\"\n   or ProcessCommandLine has \"Start-BitsTransfer\"\n   or ProcessCommandLine has \"mpcmdrun.exe\"\n| project TimeGenerated, DeviceName, InitiatingProcessFileName, FileName, ProcessCommandLine\n| top 100 by TimeGenerated\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "The query searches for PowerShell execution events that could involve a download."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject25')._huntingQuerycontentId25),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 25",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject25')._huntingQuerycontentId25)]",
                "contentId": "[variables('huntingQueryObject25')._huntingQuerycontentId25]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject25').huntingQueryVersion25]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject25')._huntingQuerycontentId25]",
        "contentKind": "HuntingQuery",
        "displayName": "PowerShell Downloads",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject25')._huntingQuerycontentId25,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject25')._huntingQuerycontentId25,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject26').huntingQueryTemplateSpecName26]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SuspiciousMshtaUsage_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject26').huntingQueryVersion26]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_26",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Detect Suspicious Mshta Usage",
                "category": "Hunting Queries",
                "query": "// mshta.exe script launching processes\nDeviceProcessEvents \n| where Timestamp > ago(7d)\nand InitiatingProcessFileName =~ 'mshta.exe'\nand InitiatingProcessCommandLine contains '<script>'\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query detects when mshta.exe has been run, which might include illegitimate usage by attackers."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject26')._huntingQuerycontentId26),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 26",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject26')._huntingQuerycontentId26)]",
                "contentId": "[variables('huntingQueryObject26')._huntingQuerycontentId26]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject26').huntingQueryVersion26]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject26')._huntingQuerycontentId26]",
        "contentKind": "HuntingQuery",
        "displayName": "Detect Suspicious Mshta Usage",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject26')._huntingQuerycontentId26,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject26')._huntingQuerycontentId26,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject27').huntingQueryTemplateSpecName27]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "FilesCopiedToUSBDrives_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject27').huntingQueryVersion27]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_27",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Files Copied to USB Drives",
                "category": "Hunting Queries",
                "query": "let UsbDriveMount = DeviceEvents\n| where ActionType==\"UsbDriveMounted\"\n| extend ParsedFields=parse_json(AdditionalFields)\n| project DeviceId, DeviceName, DriveLetter=ParsedFields.DriveLetter, MountTime=TimeGenerated,\nProductName=ParsedFields.ProductName,SerialNumber=ParsedFields.SerialNumber,Manufacturer=ParsedFields.Manufacturer\n| order by DeviceId asc, MountTime desc;\nlet FileCreation = DeviceFileEvents\n| where InitiatingProcessAccountName != \"system\"\n| where ActionType == \"FileCreated\"\n| where FolderPath !startswith \"C:\\\\\"\n| where FolderPath !startswith \"\\\\\"\n| project ReportId,DeviceId,InitiatingProcessAccountDomain,\nInitiatingProcessAccountName,InitiatingProcessAccountUpn,\nFileName, FolderPath, SHA256, TimeGenerated, SensitivityLabel, IsAzureInfoProtectionApplied\n| order by DeviceId asc, TimeGenerated desc;\nFileCreation | lookup kind=inner (UsbDriveMount) on DeviceId\n| where FolderPath startswith DriveLetter\n| where TimeGenerated >= MountTime\n| partition hint.strategy=native by ReportId ( top 1 by MountTime )\n| order by DeviceId asc, TimeGenerated desc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query lists files copied to USB external drives with USB drive information based on FileCreated events associated with most recent USBDriveMount events befor file creations."
                  },
                  {
                    "name": "tactics",
                    "value": "Exfiltration"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject27')._huntingQuerycontentId27),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 27",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject27')._huntingQuerycontentId27)]",
                "contentId": "[variables('huntingQueryObject27')._huntingQuerycontentId27]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject27').huntingQueryVersion27]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject27')._huntingQuerycontentId27]",
        "contentKind": "HuntingQuery",
        "displayName": "Files Copied to USB Drives",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject27')._huntingQuerycontentId27,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject27')._huntingQuerycontentId27,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject28').huntingQueryTemplateSpecName28]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SuspiciousDLLInSpoolFolder_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject28').huntingQueryVersion28]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_28",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Suspicious DLLs in spool Folder",
                "category": "Hunting Queries",
                "query": "DeviceFileEvents\n| where FolderPath contains @\"\\system32\\spool\\drivers\\x64\\3\\\"\n| where FileName endswith \".dll\"\n| where ActionType in (\"FileCreated\", \"FileRenamed\")\n| join kind=inner DeviceImageLoadEvents on DeviceId,DeviceName,FileName,InitiatingProcessFileName\n| where TimeGenerated1 >= TimeGenerated and FolderPath1 contains @\"\\system32\\spool\\drivers\\x64\\3\\Old\"\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Look for the creation of suspicious DLL files spawned in the \\spool\\ folder along with DLLs that were recently loaded afterwards from \\Old."
                  },
                  {
                    "name": "tactics",
                    "value": "PrivilegeEscalation,Execution"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject28')._huntingQuerycontentId28),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 28",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject28')._huntingQuerycontentId28)]",
                "contentId": "[variables('huntingQueryObject28')._huntingQuerycontentId28]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject28').huntingQueryVersion28]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject28')._huntingQuerycontentId28]",
        "contentKind": "HuntingQuery",
        "displayName": "Suspicious DLLs in spool Folder",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject28')._huntingQuerycontentId28,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject28')._huntingQuerycontentId28,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject29').huntingQueryTemplateSpecName29]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SuspiciousFilesInSpoolFolder_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject29').huntingQueryVersion29]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_29",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Suspicious Files in spool Folder",
                "category": "Hunting Queries",
                "query": "DeviceFileEvents\n| where FolderPath has @\"System32\\spool\\drivers\"\n| project DeviceName, TimeGenerated, ActionType, FolderPath, FileName, SHA1\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Monitor for creation of suspicious files in the /spools/driver/ folder. This is a broad-based search that will surface any creation or modification of files in the folder targeted by this exploit."
                  },
                  {
                    "name": "tactics",
                    "value": "PrivilegeEscalation,Execution"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject29')._huntingQuerycontentId29),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 29",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject29')._huntingQuerycontentId29)]",
                "contentId": "[variables('huntingQueryObject29')._huntingQuerycontentId29]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject29').huntingQueryVersion29]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject29')._huntingQuerycontentId29]",
        "contentKind": "HuntingQuery",
        "displayName": "Suspicious Files in spool Folder",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject29')._huntingQuerycontentId29,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject29')._huntingQuerycontentId29,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject30').huntingQueryTemplateSpecName30]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SuspiciousSpoolsvChildProcess_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject30').huntingQueryVersion30]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_30",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Suspicious Spoolsv Child Process",
                "category": "Hunting Queries",
                "query": "// Look for file load events for spoolsv\nDeviceImageLoadEvents\n| where TimeGenerated > ago(7d)\n| where InitiatingProcessFileName =~ \"spoolsv.exe\"\n| where FolderPath has @\"spool\\drivers\"\n| extend LoadFileTime = TimeGenerated\n| distinct DeviceId, LoadFileTime, FileName, SHA256\n// Join process data associated with spoolsv launching suspicious processes after image load\n| join DeviceProcessEvents on $left.DeviceId == $right.DeviceId\n| where TimeGenerated > ago(7d)\n| where TimeGenerated < LoadFileTime +5m\n| where InitiatingProcessFileName =~ \"spoolsv.exe\"\n| where ProcessIntegrityLevel =~ 'SYSTEM'\n| where (FileName1 in~(\"gpupdate.exe\", \"whoami.exe\", \"nltest.exe\", \"taskkill.exe\",\n            \"wmic.exe\", \"taskmgr.exe\", \"sc.exe\", \"findstr.exe\", \"curl.exe\", \"wget.exe\", \"certutil.exe\", \"bitsadmin.exe\", \"accesschk.exe\",\n            \"wevtutil.exe\", \"bcdedit.exe\", \"fsutil.exe\", \"cipher.exe\", \"schtasks.exe\", \"write.exe\", \"wuauclt.exe\") or \n// Processes with specific FPs removed          \n(FileName1 =~ \"net.exe\" and ProcessCommandLine !has \"start\") or \n(FileName1 =~ \"cmd.exe\" and not(ProcessCommandLine has_any(\".spl\", \"route add\", \"program files\"))) or \n(FileName1 =~ \"netsh.exe\" and not(ProcessCommandLine has_any(\"add portopening\", \"rule name\")))) or\n(FileName1 =~ \"powershell.exe\" and ProcessCommandLine!has \".spl\") or\n(FileName1 =~ \"rundll32.exe\" and ProcessCommandLine != \"\" and ProcessCommandLine !contains \" \")\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Surfaces suspicious spoolsv.exe behavior likely related to CVE-2021-1675"
                  },
                  {
                    "name": "tactics",
                    "value": "PrivilegeEscalation,Execution"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject30')._huntingQuerycontentId30),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 30",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject30')._huntingQuerycontentId30)]",
                "contentId": "[variables('huntingQueryObject30')._huntingQuerycontentId30]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject30').huntingQueryVersion30]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject30')._huntingQuerycontentId30]",
        "contentKind": "HuntingQuery",
        "displayName": "Suspicious Spoolsv Child Process",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject30')._huntingQuerycontentId30,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject30')._huntingQuerycontentId30,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject31').huntingQueryTemplateSpecName31]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CVE-2022-26134-Confluence_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject31').huntingQueryVersion31]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_31",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Suspicious Tomcat Confluence Process Launch",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents\n| where InitiatingProcessFileName hasprefix \"tomcat\" and InitiatingProcessCommandLine has \"confluence\"\n| where (ProcessCommandLine has_any(\"certutil\", \"whoami\", \"nltest\", \" dir \", \"curl\", \"ifconfig\", \"cat \", \"net user\",\n\"net time /domain\",\"tasklist\",\"-c ls\",\"ipconfig\",\"arp\",\"ping\",\"net view\",\"net group\",\"netstat\", \"wmic datafile\"))\nor (FileName =~ \"powershell.exe\" and ProcessCommandLine hasprefix \"-e\") \n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "The query checks for suspicious Tomcat process launches associated with likely exploitation of Confluence - CVE-2022-26134."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution,PrivilegeEscalation"
                  },
                  {
                    "name": "techniques",
                    "value": "T1203"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject31')._huntingQuerycontentId31),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 31",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject31')._huntingQuerycontentId31)]",
                "contentId": "[variables('huntingQueryObject31')._huntingQuerycontentId31]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject31').huntingQueryVersion31]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject31')._huntingQuerycontentId31]",
        "contentKind": "HuntingQuery",
        "displayName": "Suspicious Tomcat Confluence Process Launch",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject31')._huntingQuerycontentId31,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject31')._huntingQuerycontentId31,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject32').huntingQueryTemplateSpecName32]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MosaicLoader_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject32').huntingQueryVersion32]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_32",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "MosaicLoader",
                "category": "Hunting Queries",
                "query": "DeviceRegistryEvents \n| where ((ActionType == \"RegistryValueSet\") and (RegistryKey startswith @\"HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Windows Defender\\\\Exclusions\\\\Paths\" \nor RegistryKey startswith @\"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Extensions\"\nor RegistryKey startswith @\"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows Defender\\Exclusions\\Processes\"))\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This hunting query looks Malware Hides Itself Among Windows Defender Exclusions to Evade Detection."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject32')._huntingQuerycontentId32),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 32",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject32')._huntingQuerycontentId32)]",
                "contentId": "[variables('huntingQueryObject32')._huntingQuerycontentId32]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject32').huntingQueryVersion32]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject32')._huntingQuerycontentId32]",
        "contentKind": "HuntingQuery",
        "displayName": "MosaicLoader",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject32')._huntingQuerycontentId32,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject32')._huntingQuerycontentId32,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject33').huntingQueryTemplateSpecName33]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "PrintNightmareUsageDetection-CVE-2021-1675_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject33').huntingQueryVersion33]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_33",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "PrintNightmare CVE-2021-1675 usage Detection",
                "category": "Hunting Queries",
                "query": "DeviceFileEvents\n| where Timestamp > ago(7d)\n| where ActionType == \"FileCreated\"\n| where FolderPath startswith \"C:\\\\WINDOWS\\\\SYSTEM32\\\\SPOOL\\\\drivers\"\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query looks for any file creations in the print spooler drivers folder."
                  },
                  {
                    "name": "tactics",
                    "value": "PrivilegeEscalation,LateralMovement,Execution"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject33')._huntingQuerycontentId33),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 33",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject33')._huntingQuerycontentId33)]",
                "contentId": "[variables('huntingQueryObject33')._huntingQuerycontentId33]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject33').huntingQueryVersion33]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject33')._huntingQuerycontentId33]",
        "contentKind": "HuntingQuery",
        "displayName": "PrintNightmare CVE-2021-1675 usage Detection",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject33')._huntingQuerycontentId33,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject33')._huntingQuerycontentId33,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject34').huntingQueryTemplateSpecName34]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AnomalousVoulmeOfFileDeletion_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject34').huntingQueryVersion34]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_34",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Unusual Volume of file deletion by users",
                "category": "Hunting Queries",
                "query": "let relevantOperations = pack_array(\"FileDeleted\", \"FileRecycled\", \"FileDeletedFirstStageRecycleBin\", \"FileDeletedSecondStageRecycleBin\", \"FileVersionsAllMinorsRecycled\", \"FileVersionRecycled\", \"FileVersionsAllRecycled\");\nlet relevantAppIds = pack_array(int(20892), int(15600)); // App Ids for SharePoint and OneDrive\nlet timeWindow = 7d;\nlet timeNow = now();\n//\nlet riskyUsers= // Look for users with risky sign-ins\n  SigninLogs    \n  | where CreatedDateTime between ((timeNow - timeWindow) .. (timeNow))\n  | where isnotempty(UserId) and isnotempty(OriginalRequestId)\n  | where ResultType == '0'\n  | where RiskLevelDuringSignIn == 'high'\n  | project RiskLevelDuringSignIn, UserId, CreatedDateTime, SessionId=OriginalRequestId\n  ;\nlet hasUsers = isnotempty(toscalar(riskyUsers));\n //\nlet deleteEvents = // look for file deletion activity and scope it to risky users\n  CloudAppEvents\n  | where hasUsers\n  | where TimeGenerated between ((timeNow - timeWindow) .. (timeNow))\n  | where ApplicationId in (relevantAppIds)\n  | where isnotempty(AccountObjectId)\n  | where AccountObjectId in (riskyUsers)\n  | where ActionType in (relevantOperations)\n  | extend SessionId= tostring(RawEventData.AppAccessContext.AADSessionId)\n  | where isnotempty(SessionId)\n  | project UserId=AccountObjectId, AccountDisplayName, ApplicationId, SessionId, ActionType, TimeGenerated, ReportId\n  ;   \n //\ndeleteEvents  \n| join kind=leftsemi riskyUsers on UserId, SessionId\n| summarize Count=count() , (Timestamp, ReportId)=arg_min(TimeGenerated, ReportId) by UserId, AccountDisplayName, ApplicationId, ActionType, Time=bin(TimeGenerated, 5m)\n// look for only those scoped users who have generated an increase in file deletion activity.\n| summarize TotalCount= countif(Count > 50), (Timestamp, ReportId)=arg_min(Timestamp, ReportId) by UserId, AccountDisplayName, ApplicationId \n| where TotalCount >= 3\n| project UserId, AccountDisplayName, ApplicationId, TotalCount, ReportId, Timestamp\n| extend NTDomain = tostring(split(AccountDisplayName,'\\\\',0)[0]), Name = tostring(split(AccountDisplayName,'\\\\',1)[0])\n| extend Account_0_Name = Name\n| extend Account_0_NTDomain = NTDomain\n| extend Account_0_AadUserId = UserId\n| extend CloudApplication_0_AppId = ApplicationId\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query looks for users performing file deletion activities. Spikes in file deletion observed from risky sign-in sessions are flagged here."
                  },
                  {
                    "name": "tactics",
                    "value": "Impact"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject34')._huntingQuerycontentId34),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 34",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject34')._huntingQuerycontentId34)]",
                "contentId": "[variables('huntingQueryObject34')._huntingQuerycontentId34]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject34').huntingQueryVersion34]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject34')._huntingQuerycontentId34]",
        "contentKind": "HuntingQuery",
        "displayName": "Unusual Volume of file deletion by users",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject34')._huntingQuerycontentId34,'-', '1.0.1')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject34')._huntingQuerycontentId34,'-', '1.0.1')))]",
        "version": "1.0.1"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject35').huntingQueryTemplateSpecName35]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DetectMailSniper_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject35').huntingQueryVersion35]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_35",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Detect MaiSniper",
                "category": "Hunting Queries",
                "query": "let dateRange = ago(10d);\n//\nlet whoamiProcess = DeviceProcessEvents\n| where ProcessCreationTime >= dateRange\n| where FileName =~ 'whoami.exe' and InitiatingProcessParentFileName =~ 'powershell.exe'\n| project DeviceId, whoamiTime = ProcessCreationTime, whoamiProcessName = FileName, \nwhoamiParentName = InitiatingProcessParentFileName, whoamiParentPID = InitiatingProcessParentId;\n//\nlet netProcess = DeviceProcessEvents \n| where ProcessCreationTime >= dateRange\n| where FileName =~ 'net.exe' and InitiatingProcessParentFileName =~ 'powershell.exe'\n| project DeviceId, netTime = ProcessCreationTime, ProcessCreationTime = FileName, \nnetParentName = InitiatingProcessParentFileName, netParentPID = InitiatingProcessParentId;\n//\nlet mailServerEvents = DeviceNetworkEvents\n| where TimeGenerated >= dateRange\n| where InitiatingProcessFileName =~ 'powershell.exe'\n| where RemoteUrl contains 'onmicrosoft.com'\nor RemoteUrl contains 'outlook.com'\n| project DeviceId, mailTime = TimeGenerated, mailProcessName = InitiatingProcessFileName, \nmailPID = InitiatingProcessId;\n//\nmailServerEvents\n| join netProcess on DeviceId \n| where netParentPID == mailPID and netParentName == mailProcessName \n| join whoamiProcess on DeviceId \n| where whoamiParentPID == mailPID and whoamiParentName == mailProcessName \n| where netTime < mailTime + 4h and netTime > mailTime - 4h\n| where whoamiTime < mailTime + 4h and whoamiTime > mailTime - 4h\n| project DeviceId, EstimatedIncidentTime = mailTime, ProcessName = mailProcessName, \nProcessID = mailPID\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query searches for usage of MailSniper Exchange attack tool."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess,CredentialAccess,Collection,Exfiltration"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject35')._huntingQuerycontentId35),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 35",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject35')._huntingQuerycontentId35)]",
                "contentId": "[variables('huntingQueryObject35')._huntingQuerycontentId35]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject35').huntingQueryVersion35]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject35')._huntingQuerycontentId35]",
        "contentKind": "HuntingQuery",
        "displayName": "Detect MaiSniper",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject35')._huntingQuerycontentId35,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject35')._huntingQuerycontentId35,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject36').huntingQueryTemplateSpecName36]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AccountBruteForce_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject36').huntingQueryVersion36]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_36",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Account Brute Force",
                "category": "Hunting Queries",
                "query": "DeviceLogonEvents\n| where isnotempty(RemoteIP) \n    and AccountName !endswith \"$\"\n    and RemoteIPType == \"Public\"\n| extend Account=strcat(AccountDomain, \"\\\\\", AccountName)\n| summarize \n    Successful=countif(ActionType == \"LogonSuccess\"),\n    Failed = countif(ActionType == \"LogonFailed\"),\n    FailedAccountsCount = dcountif(Account, ActionType == \"LogonFailed\"),\n    SuccessfulAccountsCount = dcountif(Account, ActionType == \"LogonSuccess\"),\n    FailedAccounts = make_set(iff(ActionType == \"LogonFailed\", Account, \"\"), 5),\n    SuccessfulAccounts = make_set(iff(ActionType == \"LogonSuccess\", Account, \"\"), 5)\n    by DeviceName, RemoteIP, RemoteIPType\n| where Failed > 10 and Successful > 0 and FailedAccountsCount > 2 and SuccessfulAccountsCount == 1\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This hunting query searches for public IP addresses that failed to logon to a computer multiple times, using multiple accounts, and eventually succeeded."
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject36')._huntingQuerycontentId36),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 36",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject36')._huntingQuerycontentId36)]",
                "contentId": "[variables('huntingQueryObject36')._huntingQuerycontentId36]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject36').huntingQueryVersion36]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject36')._huntingQuerycontentId36]",
        "contentKind": "HuntingQuery",
        "displayName": "Account Brute Force",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject36')._huntingQuerycontentId36,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject36')._huntingQuerycontentId36,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject37').huntingQueryTemplateSpecName37]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "ServiceAccountsPerformingRemotePS_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject37').huntingQueryVersion37]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_37",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Service Accounts Performing Remote PS",
                "category": "Hunting Queries",
                "query": "let InteractiveTypes = pack_array(                                  // Declare Interactive logon type names\n    'Interactive',\n    'CachedInteractive',\n    'Unlock',\n    'RemoteInteractive',\n    'CachedRemoteInteractive',\n    'CachedUnlock'\n);\nlet WhitelistedCmdlets = pack_array(                                // List of whitelisted commands that don't provide a lot of value\n    'prompt',\n    'Out-Default',\n    'out-lineoutput',\n    'format-default',\n    'Set-StrictMode',\n    'TabExpansion2'\n);\nlet WhitelistedAccounts = pack_array('FakeWhitelistedAccount');     // List of accounts that are known to perform this activity in the environment and can be ignored\nDeviceLogonEvents                                                         // Get all logon events...\n| where AccountName !in~ (WhitelistedAccounts)                      // ...where it is not a whitelisted account...\n| where ActionType == \"LogonSuccess\"                                // ...and the logon was successful...\n| where AccountName !contains \"$\"                                   // ...and not a machine logon.\n| where AccountName !has \"winrm va_\"                                // WinRM will have pseudo account names that match this if there is an explicit permission for an admin to run the cmdlet, so assume it is good.\n| extend IsInteractive=(LogonType in (InteractiveTypes))            // Determine if the logon is interactive (True=1,False=0)...\n| summarize HasInteractiveLogon=max(IsInteractive)                  // ...then bucket and get the maximum interactive value (0 or 1)...\n            by AccountName                                          // ... by the AccountNames\n| where HasInteractiveLogon == 0                                    // ...and filter out all accounts that had an interactive logon.\n// At this point, we have a list of accounts that we believe to be service accounts\n// Now we need to find RemotePS sessions that were spawned by those accounts\n// Note that we look at all powershell cmdlets executed to form a 29-day baseline to evaluate the data on today\n| join kind=rightsemi (                                             // Start by dropping the account name and only tracking the...\n\tDeviceEvents                                                      // ...\n\t| where ActionType == 'PowerShellCommand'                       // ...PowerShell commands seen...\n\t| where InitiatingProcessFileName =~ 'wsmprovhost.exe'          // ...whose parent was wsmprovhost.exe (RemotePS Server)...\n    | extend AccountName = InitiatingProcessAccountName             // ...and add an AccountName field so the join is easier\n) on AccountName\n// At this point, we have all of the commands that were ran by service accounts\n| extend Command = tostring(extractjson('$.Command', tostring(AdditionalFields)))   // Extract the actual PowerShell command that was executed\n| where Command !in (WhitelistedCmdlets)                            // Remove any values that match the whitelisted cmdlets\n| summarize (Timestamp, ReportId)=argmax(TimeGenerated, ReportId),      // Then group all of the cmdlets and calculate the min/max times of execution...\n    makeset(Command), count(), min(TimeGenerated) by                    // ...as well as creating a list of cmdlets ran and the count..\n    AccountName, DeviceName, DeviceId                            // ...and have the commonality be the account, DeviceName and DeviceId\n// At this point, we have machine-account pairs along with the list of commands run as well as the first/last time the commands were ran\n| order by AccountName asc                                          // Order the final list by AccountName just to make it easier to go through\n| where Timestamp > ago(1d)                                     // Included to restrict the scope for the custom detection page\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query searches for any Service Accounts Performing Remote PowerShell."
                  },
                  {
                    "name": "tactics",
                    "value": "LateralMovement"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject37')._huntingQuerycontentId37),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 37",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject37')._huntingQuerycontentId37)]",
                "contentId": "[variables('huntingQueryObject37')._huntingQuerycontentId37]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject37').huntingQueryVersion37]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject37')._huntingQuerycontentId37]",
        "contentKind": "HuntingQuery",
        "displayName": "Service Accounts Performing Remote PS",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject37')._huntingQuerycontentId37,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject37')._huntingQuerycontentId37,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject38').huntingQueryTemplateSpecName38]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "LocalAdminGroupChanges_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject38').huntingQueryVersion38]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_38",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Local Admin Group Changes",
                "category": "Hunting Queries",
                "query": "let ADAZUsers =  IdentityInfo \n| extend DirectoryDomain = AccountDomain \n| extend DirectoryAccount = AccountName \n| extend OnPremSid = AccountSID\n| distinct DirectoryDomain , DirectoryAccount , OnPremSid , AccountCloudSID, AccountUPN, GivenName, Surname;\n // check for any new created or modified local accounts \nlet NewUsers =  DeviceEvents\n| where ActionType contains \"UserAccountCreated\"  // or ActionType contains \"UserAccountModified\"\n| extend lUserAdded = AccountName\n| extend NewUserSID = AccountSid\n| extend laccountdomain = AccountDomain\n| distinct NewUserSID, lUserAdded,laccountdomain;\n// Check for any local group changes and enrich the data with the account name obtained from the previous query\nDeviceEvents \n| where ActionType == 'UserAccountAddedToLocalGroup' \n| extend AddedAccountSID = tostring(parse_json(AdditionalFields).MemberSid)\n| extend LocalGroup = AccountName\n| extend LocalGroupSID = AccountSid\n| extend Actor = trim(@\"[^\\w]+\",InitiatingProcessAccountName)\n// limit to local administrators group\n//  | where LocalGroupSID contains \"S-1-5-32-544\"\n| join kind= leftouter    (NewUsers)\non $left.AddedAccountSID == $right.NewUserSID\n| project TimeGenerated, DeviceName, LocalGroup,LocalGroupSID, AddedAccountSID, lUserAdded , Actor, ActionType , laccountdomain \n| join kind= leftouter        (ADAZUsers)\non $left.AddedAccountSID == $right.OnPremSid\n| extend UserAdded = iff(isnotempty(lUserAdded),strcat(laccountdomain,\"\\\\\", lUserAdded), strcat(DirectoryDomain,\"\\\\\", DirectoryAccount))\n| project TimeGenerated, DeviceName, LocalGroup,LocalGroupSID, AddedAccountSID, UserAdded , Actor, ActionType  \n| where DeviceName !contains Actor \n// Provide details on actors that added users\n// | summarize count()  by Actor \n// | join ADAZUsers\n// on $left.Actor == $right.DirectoryAccount \n// | render piechart \n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This hunting query searches for changes to the local administrators group."
                  },
                  {
                    "name": "tactics",
                    "value": "Persistence"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject38')._huntingQuerycontentId38),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 38",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject38')._huntingQuerycontentId38)]",
                "contentId": "[variables('huntingQueryObject38')._huntingQuerycontentId38]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject38').huntingQueryVersion38]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject38')._huntingQuerycontentId38]",
        "contentKind": "HuntingQuery",
        "displayName": "Local Admin Group Changes",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject38')._huntingQuerycontentId38,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject38')._huntingQuerycontentId38,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject39').huntingQueryTemplateSpecName39]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "ScheduledTaskCreation_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject39').huntingQueryVersion39]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_39",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Scheduled Task Creation",
                "category": "Hunting Queries",
                "query": "DeviceEvents \n| where ActionType == \"ScheduledTaskCreated\"\n  and InitiatingProcessAccountSid != \"S-1-5-18\"\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query searches for any scheduled task creation event."
                  },
                  {
                    "name": "tactics",
                    "value": "Persistence"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject39')._huntingQuerycontentId39),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 39",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject39')._huntingQuerycontentId39)]",
                "contentId": "[variables('huntingQueryObject39')._huntingQuerycontentId39]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject39').huntingQueryVersion39]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject39')._huntingQuerycontentId39]",
        "contentKind": "HuntingQuery",
        "displayName": "Scheduled Task Creation",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject39')._huntingQuerycontentId39,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject39')._huntingQuerycontentId39,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject40').huntingQueryTemplateSpecName40]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DetectMultipleSignsOfRamsomwareActivity_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject40').huntingQueryVersion40]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_40",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Check for multiple signs of Ransomware Activity",
                "category": "Hunting Queries",
                "query": "// Find attempts to stop processes using taskkill.exe\nlet taskKill = DeviceProcessEvents\n| where TimeGenerated > ago(1d)\n| where FileName =~ \"taskkill.exe\" \n| summarize taskKillCount = dcount(tostring(ProcessCommandLine)), TaskKillList = make_set(ProcessCommandLine) by DeviceId, bin(TimeGenerated, 2m)\n| where taskKillCount > 10;\n// Find attempts to stop processes using net stop\nlet netStop = DeviceProcessEvents\n| where TimeGenerated > ago(1d)\n| where FileName =~ \"net.exe\" and ProcessCommandLine has \"stop\"\n| summarize netStopCount = dcount(tostring(ProcessCommandLine)), NetStopList = make_set(ProcessCommandLine) by DeviceId, bin(TimeGenerated, 2m)\n| where netStopCount > 10;\n// Look for cipher.exe deleting data from multiple drives\nlet cipher = DeviceProcessEvents\n| where TimeGenerated > ago(1d)\n| where FileName =~ \"cipher.exe\" \n// cipher.exe /w flag used for deleting data \n| where ProcessCommandLine has \"/w\" \n| summarize CipherCount = dcount(tostring(ProcessCommandLine)), \nCipherList = make_set(ProcessCommandLine) by DeviceId, bin(TimeGenerated, 1m) \n// cipher.exe accessing multiple drives in a short timeframe \n| where CipherCount > 1;\n// Look for use of wevtutil to clear multiple logs\nlet wevtutilClear = DeviceProcessEvents\n| where TimeGenerated > ago(1d)\n| where ProcessCommandLine has \"WEVTUTIL\" and ProcessCommandLine has \"CL\"\n| summarize LogClearCount = dcount(tostring(ProcessCommandLine)), ClearedLogList = make_set(ProcessCommandLine) by DeviceId, bin(TimeGenerated, 5m)\n| where LogClearCount > 10;\n// Look for sc.exe disabling services\nlet scDisable = DeviceProcessEvents\n| where TimeGenerated > ago(1d)\n| where ProcessCommandLine has \"sc\" and ProcessCommandLine has \"config\" and ProcessCommandLine has \"disabled\"\n| summarize ScDisableCount = dcount(tostring(ProcessCommandLine)), ScDisableList = make_set(ProcessCommandLine) by DeviceId, bin(TimeGenerated, 5m)\n| where ScDisableCount > 10;\n// Main query for counting and aggregating evidence\nDeviceProcessEvents\n| where TimeGenerated > ago(1d)\n| where FileName =~ \"vssadmin.exe\" and ProcessCommandLine has_any(\"list shadows\", \"delete shadows\")\nor FileName =~ \"fsutil.exe\" and ProcessCommandLine has \"usn\" and ProcessCommandLine has \"deletejournal\"\nor ProcessCommandLine has(\"bcdedit\") and ProcessCommandLine has_any(\"recoveryenabled no\", \"bootstatuspolicy ignoreallfailures\")\nor ProcessCommandLine has \"wbadmin\" and ProcessCommandLine has \"delete\" and ProcessCommandLine has_any(\"backup\", \"catalog\", \"systemstatebackup\")\nor (ProcessCommandLine has \"wevtutil\" and ProcessCommandLine has \"cl\") \nor (ProcessCommandLine has \"wmic\" and ProcessCommandLine has \"shadowcopy delete\")\nor (ProcessCommandLine has \"sc\" and ProcessCommandLine has \"config\" and ProcessCommandLine has \"disabled\")\n| extend Bcdedit = iff(ProcessCommandLine has \"bcdedit\" and ProcessCommandLine has_any(\"recoveryenabled no\", \"bootstatuspolicy ignoreallfailures\"), 1, 0)\n| extend ShadowCopyDelete = iff (ProcessCommandLine has \"shadowcopy delete\", 1, 0)\n| extend VssAdminShadows = iff(ProcessCommandLine has \"vssadmin\" and ProcessCommandLine has_any(\"list shadows\", \"delete shadows\"), 1, 0)\n| extend Wbadmin = iff(ProcessCommandLine has \"wbadmin\" and ProcessCommandLine has \"delete\" and ProcessCommandLine has_any(\"backup\", \"catalog\", \"systemstatebackup\"), 1,0)\n| extend Fsutil = iff(ProcessCommandLine has \"fsutil\" and ProcessCommandLine has \"usn\" and ProcessCommandLine has \"deletejournal\", 1, 0)\n| summarize FirstActivity = min(TimeGenerated), ReportId = any(ReportId), Commands = make_set(ProcessCommandLine) by DeviceId, Fsutil, Wbadmin, ShadowCopyDelete, Bcdedit, VssAdminShadows, bin(TimeGenerated, 6h)\n// Joining extra evidence\n| join kind=leftouter (wevtutilClear) on $left.DeviceId == $right.DeviceId\n| join kind=leftouter (cipher) on $left.DeviceId == $right.DeviceId\n| join kind=leftouter (netStop) on $left.DeviceId == $right.DeviceId\n| join kind=leftouter (taskKill) on $left.DeviceId == $right.DeviceId\n| join kind=leftouter (scDisable) on $left.DeviceId == $right.DeviceId\n| extend WevtutilUse = iff(LogClearCount > 10, 1, 0)\n| extend CipherUse = iff(CipherCount > 1, 1, 0)\n| extend NetStopUse = iff(netStopCount > 10, 1, 0)\n| extend TaskkillUse = iff(taskKillCount > 10, 1, 0)\n| extend ScDisableUse = iff(ScDisableCount > 10, 1, 0)\n// Adding up all evidence\n| mv-expand CommandList = NetStopList, TaskKillList, ClearedLogList, CipherList, Commands, ScDisableList\n// Format results\n| summarize BcdEdit = iff(make_set(Bcdedit) contains \"1\" , 1, 0), NetStop10PlusCommands = iff(make_set(NetStopUse) contains \"1\", 1, 0), Wevtutil10PlusLogsCleared = iff(make_set(WevtutilUse) contains \"1\", 1, 0),\nCipherMultipleDrives = iff(make_set(CipherUse) contains \"1\", 1, 0), Fsutil = iff(make_set(Fsutil) contains \"1\", 1, 0), ShadowCopyDelete = iff(make_set(ShadowCopyDelete) contains \"1\", 1, 0),\nWbadmin = iff(make_set(Wbadmin) contains \"1\", 1, 0), TaskKill10PlusCommand = iff(make_set(TaskkillUse) contains \"1\", 1, 0), VssAdminShadow = iff(make_set(VssAdminShadows) contains \"1\", 1, 0), \nScDisable = iff(make_set(ScDisableUse) contains \"1\", 1, 0), TotalEvidenceCount = dcount(tostring(CommandList)), EvidenceList = make_set(Commands), StartofBehavior = min(FirstActivity) by DeviceId, bin(TimeGenerated, 1d)\n| extend UniqueEvidenceCount = BcdEdit + NetStop10PlusCommands + Wevtutil10PlusLogsCleared + CipherMultipleDrives + Wbadmin + Fsutil + TaskKill10PlusCommand + VssAdminShadow + ScDisable + ShadowCopyDelete\n| where UniqueEvidenceCount > 2\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query checks for multiple signs of ransomware activity to identify affected devices."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution,Impact,Exfiltration"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject40')._huntingQuerycontentId40),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 40",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject40')._huntingQuerycontentId40)]",
                "contentId": "[variables('huntingQueryObject40')._huntingQuerycontentId40]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject40').huntingQueryVersion40]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject40')._huntingQuerycontentId40]",
        "contentKind": "HuntingQuery",
        "displayName": "Check for multiple signs of Ransomware Activity",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject40')._huntingQuerycontentId40,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject40')._huntingQuerycontentId40,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject41').huntingQueryTemplateSpecName41]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "IcedIdSuspiciousImageLoad_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject41').huntingQueryVersion41]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_41",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Suspicious Image Load related to IcedId",
                "category": "Hunting Queries",
                "query": "DeviceImageLoadEvents \n| where InitiatingProcessFileName in~ ('rundll32.exe','regsvr32.exe') \n| where FileName endswith '.txt' or FileName endswith '.pdf'\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query searches for suspicious load image events by rundll32.exe or regsvr32.exe, a behavior associated with IcedId, which can lead to IcedId ransomware."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution,DefenseEvasion"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject41')._huntingQuerycontentId41),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 41",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject41')._huntingQuerycontentId41)]",
                "contentId": "[variables('huntingQueryObject41')._huntingQuerycontentId41]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject41').huntingQueryVersion41]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject41')._huntingQuerycontentId41]",
        "contentKind": "HuntingQuery",
        "displayName": "Suspicious Image Load related to IcedId",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject41')._huntingQuerycontentId41,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject41')._huntingQuerycontentId41,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject42').huntingQueryTemplateSpecName42]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "LogDeletionUsingWevtutil_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject42').huntingQueryVersion42]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_42",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Clearing of forensic evidence from event logs using wevtutil",
                "category": "Hunting Queries",
                "query": "// Look for use of wevtutil to clear multiple logs\nDeviceProcessEvents\n| where TimeGenerated > ago(1d)\n| where ProcessCommandLine has \"WEVTUTIL\" and ProcessCommandLine has \"CL\"\n| summarize LogClearCount = dcount(tostring(ProcessCommandLine)), ClearedLogList = make_set(ProcessCommandLine, 100000) by DeviceId, bin(TimeGenerated, 5m)\n| where LogClearCount > 10\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query checks for attempts to clear at least 10 log entries from event logs using wevtutil."
                  },
                  {
                    "name": "tactics",
                    "value": "DefenseEvasion"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject42')._huntingQuerycontentId42),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 42",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject42')._huntingQuerycontentId42)]",
                "contentId": "[variables('huntingQueryObject42')._huntingQuerycontentId42]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject42').huntingQueryVersion42]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject42')._huntingQuerycontentId42]",
        "contentKind": "HuntingQuery",
        "displayName": "Clearing of forensic evidence from event logs using wevtutil",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject42')._huntingQuerycontentId42,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject42')._huntingQuerycontentId42,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject43').huntingQueryTemplateSpecName43]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MultiProcessKillWithTaskKill_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject43').huntingQueryVersion43]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_43",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Stopping multiple processes using taskkill",
                "category": "Hunting Queries",
                "query": "// Find attempts to stop processes using taskkill.exe\nDeviceProcessEvents\n| where TimeGenerated > ago(1d)\n| where FileName =~ \"taskkill.exe\" \n| summarize taskKillCount = dcount(ProcessCommandLine), TaskKillList = make_set(ProcessCommandLine) by DeviceId, bin(TimeGenerated, 2m)\n| where taskKillCount > 10\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query checks for attempts to stop at least 10 separate processes using the taskkill.exe utility."
                  },
                  {
                    "name": "tactics",
                    "value": "DefenseEvasion"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject43')._huntingQuerycontentId43),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 43",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject43')._huntingQuerycontentId43)]",
                "contentId": "[variables('huntingQueryObject43')._huntingQuerycontentId43]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject43').huntingQueryVersion43]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject43')._huntingQuerycontentId43]",
        "contentKind": "HuntingQuery",
        "displayName": "Stopping multiple processes using taskkill",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject43')._huntingQuerycontentId43,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject43')._huntingQuerycontentId43,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject44').huntingQueryTemplateSpecName44]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "PotentialCobaltStrikeRansomwareActivity_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject44').huntingQueryVersion44]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_44",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Potential Ransomware activity related to Cobalt Strike",
                "category": "Hunting Queries",
                "query": "// Look for sc.exe disabling services\nAlertInfo \n// Attempts to clear security event logs. \n| where Title in(\"Event log was cleared\", \n// List alerts flagging attempts to delete backup files. \n\"File backups were deleted\", \n// Potential Cobalt Strike activity - Note that other threat activity can also \n// trigger alerts for suspicious decoded content \n\"Suspicious decoded content\", \n// Cobalt Strike activity \n\"\\'Atosev\\' malware was detected\", \n\"\\'Ploty\\' malware was detected\", \n\"\\'Bynoco\\' malware was detected\",\n\"\\'Cobaltstrike\\' malware was detected\",\n\"Echo command over pipe on localhost\",\n\"Known attack framework activity was observed\",\n\"An active \\'Cobaltstrike\\' malware was detected\",\n\"Suspicious \\'CobaltStrike\\' behavior was prevented\",\n\"Suspicious process launch by Rundll32.exe\") \n| extend AlertTime = TimeGenerated | distinct AlertTime, AlertId, Title \n| join AlertEvidence on $left.AlertId == $right.AlertId\n| summarize by DeviceId, AlertTime, Title, AlertId\n// Get device IDs\n| join DeviceLogonEvents on $left.DeviceId == $right.DeviceId \n// Creating 10 day Window surrounding alert activity \n| where TimeGenerated < AlertTime +5d and TimeGenerated > AlertTime - 5d // Projecting specific columns \n| project Title, DeviceName, DeviceId, TimeGenerated, LogonType, AccountDomain, AccountName, AccountSid, AlertTime, AlertId, RemoteIP, RemoteDeviceName\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query searches for alerts related to suspected ransomware and Cobalt Strike activity, a tool used in numerous ransomware campaigns."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution,Persistence"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject44')._huntingQuerycontentId44),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 44",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject44')._huntingQuerycontentId44)]",
                "contentId": "[variables('huntingQueryObject44')._huntingQuerycontentId44]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject44').huntingQueryVersion44]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject44')._huntingQuerycontentId44]",
        "contentKind": "HuntingQuery",
        "displayName": "Potential Ransomware activity related to Cobalt Strike",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject44')._huntingQuerycontentId44,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject44')._huntingQuerycontentId44,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject45').huntingQueryTemplateSpecName45]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "QakbotDiscoveryActivities_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject45').huntingQueryVersion45]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_45",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Qakbot Discovery Activies",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents \n| where InitiatingProcessFileName in~('mobsync.exe','explorer.exe')\n| where (FileName =~ 'net.exe' and InitiatingProcessCommandLine has_all('view','/all'))\n     or (FileName =~ 'whoami.exe' and InitiatingProcessCommandLine has '/all')\n     or (FileName =~ 'nslookup.exe' and InitiatingProcessCommandLine has_all('querytype=ALL','timeout=10'))\n     or (FileName =~ 'netstat.exe' and InitiatingProcessCommandLine has '-nao')\n     or (FileName =~ 'arp.exe' and InitiatingProcessCommandLine has '-a')\n     or (FileName =~ 'ping.exe' and InitiatingProcessCommandLine has '-t' and InitiatingProcessCommandLine endswith '127.0.0.1')\n| summarize DiscoveryCommands = dcount(InitiatingProcessCommandLine), make_set(InitiatingProcessFileName), make_set(FileName), make_set(InitiatingProcessCommandLine) by DeviceId, bin(TimeGenerated, 5m)   \n| where DiscoveryCommands >= 3\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query searches for injected processes launching discovery activity. Qakbot has been observed leading to ransomware in numerous instances."
                  },
                  {
                    "name": "tactics",
                    "value": "DefenseEvasion,Discovery,Execution"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject45')._huntingQuerycontentId45),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 45",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject45')._huntingQuerycontentId45)]",
                "contentId": "[variables('huntingQueryObject45')._huntingQuerycontentId45]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject45').huntingQueryVersion45]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject45')._huntingQuerycontentId45]",
        "contentKind": "HuntingQuery",
        "displayName": "Qakbot Discovery Activies",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject45')._huntingQuerycontentId45,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject45')._huntingQuerycontentId45,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject46').huntingQueryTemplateSpecName46]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "ShadowCopyDeletion_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject46').huntingQueryVersion46]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_46",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Shadow Copy Deletions",
                "category": "Hunting Queries",
                "query": "let CommonRansomwareExecutionCommands = dynamic([@'vssadmin.exe delete shadows /all /quiet', \n@'wmic.exe shadowcopy delete', @'wbadmin delete catalog -quiet', \n@'Get-WmiObject Win32_Shadowcopy | ForEach-Object {$_.Delete();}',\n@'del /s /f /q c:\\*.VHD c:\\*.bac c:\\*.bak c:\\*.wbcat c:\\*.bkf c:\\Backup*.* c:\\backup*.* c:\\*.set c:\\*.win c:\\*.dsk', \n@'wbadmin delete systemstatebackup -keepVersions:0', \n@'schtasks.exe /Change /TN \"\\Microsoft\\Windows\\SystemRestore\\SR\" /disable', \n@'schtasks.exe /Change /TN \"\\Microsoft\\Windows\\SystemRestore\\SR\" /enable >nul 2>&1', \n@'reg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\SystemRestore\" /v \"DisableConfig\" /t \"REG_DWORD\" /d \"1\" /f', \n@'reg add \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\SystemRestore\" /v \"DisableSR\" /t \"REG_DWORD\" /d \"1\" /f', \n@'reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\" /v \"DisableConfig\" /t \"REG_DWORD\" /d \"1\" /f', \n@'reg add \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\" /v \"DisableSR\" /t \"REG_DWORD\" /d \"1\" /f', \n@'reg delete \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\SystemRestore\" /v \"DisableConfig\" /f >nul 2>&1', \n@'reg delete \"HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\SystemRestore\" /v \"DisableSR\" /f >nul 2>&1', \n@'reg delete \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\" /v \"DisableConfig\" /f >nul 2>&1', \n@'reg delete \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SystemRestore\" /v \"DisableSR\" /f >nul 2>&1']);\nDeviceProcessEvents\n| where ProcessCommandLine has_any (CommonRansomwareExecutionCommands)\n| project-reorder TimeGenerated, ProcessCommandLine, DeviceName, AccountName\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This rule detects when Shadow Copies are being deleted. This is a know actions that is performed by threat actors."
                  },
                  {
                    "name": "tactics",
                    "value": "Impact"
                  },
                  {
                    "name": "techniques",
                    "value": "T1490"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject46')._huntingQuerycontentId46),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 46",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject46')._huntingQuerycontentId46)]",
                "contentId": "[variables('huntingQueryObject46')._huntingQuerycontentId46]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject46').huntingQueryVersion46]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject46')._huntingQuerycontentId46]",
        "contentKind": "HuntingQuery",
        "displayName": "Shadow Copy Deletions",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject46')._huntingQuerycontentId46,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject46')._huntingQuerycontentId46,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject47').huntingQueryTemplateSpecName47]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "TurningOffServicesWithSCCommad_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject47').huntingQueryVersion47]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_47",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Turning off services using sc exe",
                "category": "Hunting Queries",
                "query": "// Look for sc.exe disabling services\nDeviceProcessEvents\n| where TimeGenerated > ago(1d)\n| where ProcessCommandLine has \"sc\" and ProcessCommandLine has \"config\" and ProcessCommandLine has \"disabled\"\n| summarize ScDisableCount = dcount(ProcessCommandLine), ScDisableList = make_set(ProcessCommandLine) by DeviceId, bin(TimeGenerated, 5m)\n| where ScDisableCount > 10\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query checks for attempts to turn off at least 10 existing services using sc.exe."
                  },
                  {
                    "name": "tactics",
                    "value": "DefenseEvasion"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject47')._huntingQuerycontentId47),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 47",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject47')._huntingQuerycontentId47)]",
                "contentId": "[variables('huntingQueryObject47')._huntingQuerycontentId47]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject47').huntingQueryVersion47]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject47')._huntingQuerycontentId47]",
        "contentKind": "HuntingQuery",
        "displayName": "Turning off services using sc exe",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject47')._huntingQuerycontentId47,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject47')._huntingQuerycontentId47,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject48').huntingQueryTemplateSpecName48]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Detect_CISA_Alert_AA22-117A2021_Top_Routinely_Exploited_Vulnerabilities_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject48').huntingQueryVersion48]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_48",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Detect CISA Alert (AA22-117A) 2021 Top Routinely Exploited Vulnerabilities",
                "category": "Hunting Queries",
                "query": "// CISA Alert (AA22-117A) 2021 Top Routinely Exploited Vulnerabilities https://www.cisa.gov/uscert/ncas/alerts/aa22-117a\nlet CISAAlertAA22117A= dynamic(\n[\n\"CVE-2021-44228\", // Log4Shell - Apache Log4j - Remote code execution (RCE)\n\"CVE-2021-40539\", // Zoho ManageEngine AD SelfService Plus - RCE\n\"CVE-2021-34523\", // ProxyShell - Microsoft Exchange Server - Elevation of privilege\n\"CVE-2021-34473\", // ProxyShell - Microsoft Exchange Server - RCE\n\"CVE-2021-31207\", // ProxyShell - Microsoft Exchange Server - Security feature bypass\n\"CVE-2021-27065\", // ProxyLogon - Microsoft Exchange Server - RCE\n\"CVE-2021-26858\", // ProxyLogon - Microsoft Exchange Server - RCE\n\"CVE-2021-26857\", // ProxyLogon - Microsoft Exchange Server - RCE\n\"CVE-2021-26855\", // ProxyLogon - Microsoft Exchange Server - RCE\n\"CVE-2021-26084\", // Atlassian Confluence Server and Data Center - Arbitrary code execution\n\"CVE-2021-21972\", // VMware vSphere Client - RCE \n\"CVE-2020-1472\", // ZeroLogon - Microsoft Netlogon Remote Protocol (MS-NRPC) - Elevation of privilege\n\"CVE-2020-0688\", // Microsoft Exchange Server - RCE\n\"CVE-2019-11510\", // Pulse Secure Pulse Connect Secure - Arbitrary file reading\n\"CVE-2018-13379\", // Fortinet FortiOS and FortiProxy - Path traversal\n\"CVE-2021-42237\", // Sitecore XP - RCE\n\"CVE-2021-35464\", // ForgeRock OpenAM server - RCE\n\"CVE-2021-27104\", // Accellion FTA - OS command execution\n\"CVE-2021-27103\", // Accellion FTA - Server-side request forgery\n\"CVE-2021-27102\", // Accellion FTA - OS command execution\n\"CVE-2021-27101\", // Accellion FTA - SQL injection\n\"CVE-2021-21985\", // SQL injection - RCE\n\"CVE-2021-20038\", // SonicWall Secure Mobile Access (SMA) - RCE\n\"CVE-2021-40444\", // Microsoft MSHTML - RCE\n\"CVE-2021-34527\", // Microsoft Windows Print Spooler - RCE\n\"CVE-2021-3156\", // Suco - Microsoft Windows Print Spooler\n\"CVE-2021-27852\", // Checkbox Survey - Remote arbitrary code execution\n\"CVE-2021-22893\", // Pulse Secure Pulse Connect Secure - Remote arbitrary code execution\n\"CVE-2021-20016\", // SonicWall SSLVPN SMA100 - Improper SQL command neutralization, allowing for credential access\n\"CVE-2021-1675\", // Windows Print Spooler - RCE\n\"CVE-2020-2509\", // QNAP QTS and QuTS hero - Remote arbitrary code execution\n\"CVE-2019-19781\", // Citrix Application Delivery Controller (ADC) and Gateway - Arbitrary code execution\n\"CVE-2019-18935\", // Progress Telerik UI for ASP.NET AJAX - Code execution\n\"CVE-2018-0171\", // Cisco IOS Software and IOS XE Software - Remote arbitrary code execution\n\"CVE-2017-11882\", // Microsoft Office - RCE\n\"CVE-2017-0199\" // Microsoft Office - RCE\n ]\n);\nDeviceTvmSoftwareVulnerabilitiesKB\n| where CveId in(CISAAlertAA22117A)\n| join DeviceTvmSoftwareVulnerabilities on CveId\n| project-away CveId1, VulnerabilitySeverityLevel1, AffectedSoftware\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This advanced hunting query detects CISA Alert (AA22-117A) 2021 Top Routinely Exploited Vulnerabilities https://www.cisa.gov/uscert/ncas/alerts/aa22-117a"
                  },
                  {
                    "name": "tactics",
                    "value": "Execution"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject48')._huntingQuerycontentId48),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 48",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject48')._huntingQuerycontentId48)]",
                "contentId": "[variables('huntingQueryObject48')._huntingQuerycontentId48]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject48').huntingQueryVersion48]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject48')._huntingQuerycontentId48]",
        "contentKind": "HuntingQuery",
        "displayName": "Detect CISA Alert (AA22-117A) 2021 Top Routinely Exploited Vulnerabilities",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject48')._huntingQuerycontentId48,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject48')._huntingQuerycontentId48,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject49').huntingQueryTemplateSpecName49]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "PayloadDropUsingCertUtil_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject49').huntingQueryVersion49]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_49",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Dropping Payload via certutil",
                "category": "Hunting Queries",
                "query": "DeviceFileEvents\n| where InitiatingProcessFileName !~ \"certutil.exe\"\n| where InitiatingProcessFileName !~ \"cmd.exe\"\n| where InitiatingProcessCommandLine has_all(\"-urlcache\", \"split\", \"http\")\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "BazaCall campaign tricks users into calling a fake customer support center, and download a malicious Excel file which contains a macro to infect users' device with BazaLoader. This query searches for a copy of certutil.exe used by the macro."
                  },
                  {
                    "name": "tactics",
                    "value": "InitialAccess,DefenseEvasion"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject49')._huntingQuerycontentId49),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 49",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject49')._huntingQuerycontentId49)]",
                "contentId": "[variables('huntingQueryObject49')._huntingQuerycontentId49]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject49').huntingQueryVersion49]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject49')._huntingQuerycontentId49]",
        "contentKind": "HuntingQuery",
        "displayName": "Dropping Payload via certutil",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject49')._huntingQuerycontentId49,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject49')._huntingQuerycontentId49,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject50').huntingQueryTemplateSpecName50]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "ImminentRansomware_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject50').huntingQueryVersion50]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_50",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Imminent Ransomware",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents \n// Pivot on specific commands \n| where ProcessCommandLine has_any(\"-ExclusionPath\", \"Set-MpPreference\", \"advfirewall\", \"-ExclusionExtension\", \n\"-EnableControlledFolderAccess\", \"windefend\", \"onstart\", \"bcdedit\", \"Startup\") \n// Making list of found commands \n| summarize ProcessCommandLine = make_set(ProcessCommandLine, 10000) by DeviceId, bin(TimeGenerated, 6h) \n// Extending columns for later aggregration, based on TTP \n| extend StartUpExclusionPath = iff(ProcessCommandLine has_all(\"-ExclusionPath\", \"Startup\"), 1, 0) \n| extend DefenderTamp = iff(ProcessCommandLine has \"Set-MpPreference\" \nand ProcessCommandLine has_any( \n\"-SevereThreatDefaultAction 6\" \n\"-HighThreatDefaultAction 6\", \n\"-ModerateThreatDefaultAction 6\", \n\"-LowThreatDefaultAction 6\" \n\"-ScanScheduleDay 8\"), 1, 0) \n| extend NetshFirewallTampering = iff(ProcessCommandLine has_all( \"netsh\", \"advfirewall\", \"allprofiles state off\"), 1, 0) \n| extend BatExclusion = iff(ProcessCommandLine has_all(\"-ExclusionExtension\", \".bat\"), 1, 0) \n| extend ExeExclusion = iff(ProcessCommandLine has_all(\"-ExclusionExtension\", \".exe\"), 1, 0) \n| extend DisableControlledFolderAccess = iff(ProcessCommandLine has_all(\"-EnableControlledFolderAccess\", \"Disabled\"), 1, 0) \n| extend ScDeleteDefend = iff(ProcessCommandLine has_all(\"sc\", \"delete\", \"windefend\"), 1, 0) \n| extend BootTampering = iff(ProcessCommandLine has_all(\"bcdedit\", \"default\") and ProcessCommandLine has_any (\"recoveryenabled No\", \"bootstatuspolicy ignoreallfailures\"), 1, 0) \n| extend SchTasks = iff(ProcessCommandLine has_all(\"/sc\", \"onstart\", \"system\", \"/create\", \"/delay\"), 1, 0) \n// Summarizing found commands \n| summarize by NetshFirewallTampering ,BatExclusion, ExeExclusion, DisableControlledFolderAccess, ScDeleteDefend, SchTasks, BootTampering, DefenderTamp, StartUpExclusionPath, DeviceId, TimeGenerated \n// Adding up each piece of evidence \n| extend EvidenceCount = NetshFirewallTampering + BatExclusion + ExeExclusion + DisableControlledFolderAccess + ScDeleteDefend + SchTasks + BootTampering + DefenderTamp + StartUpExclusionPath \n| where EvidenceCount > 4\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Before deploying Macaw ransomware in an organization, the attacker will run several commands designed to disable security tools and system recovery tools."
                  },
                  {
                    "name": "tactics",
                    "value": "DefenseEvasion"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject50')._huntingQuerycontentId50),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 50",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject50')._huntingQuerycontentId50)]",
                "contentId": "[variables('huntingQueryObject50')._huntingQuerycontentId50]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject50').huntingQueryVersion50]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject50')._huntingQuerycontentId50]",
        "contentKind": "HuntingQuery",
        "displayName": "Imminent Ransomware",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject50')._huntingQuerycontentId50,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject50')._huntingQuerycontentId50,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject51').huntingQueryTemplateSpecName51]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "RobbinhoodDriver_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject51').huntingQueryVersion51]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_51",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Robbinhood Driver",
                "category": "Hunting Queries",
                "query": "DeviceFileEvents\n| where TimeGenerated > ago(7d)\n| where SHA1 in('0b15b5cc64caf0c6ad9bd759eb35383b1f718edf3d7ab4cd912d0d8c1826edf8',\n'31f4cfb4c71da44120752721103a16512444c13c2ac2d857a7e6f13cb679b427')\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query detects the presence of the Robbinhood ransomware driver."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution,DefenseEvasion"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject51')._huntingQuerycontentId51),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 51",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject51')._huntingQuerycontentId51)]",
                "contentId": "[variables('huntingQueryObject51')._huntingQuerycontentId51]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject51').huntingQueryVersion51]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject51')._huntingQuerycontentId51]",
        "contentKind": "HuntingQuery",
        "displayName": "Robbinhood Driver",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject51')._huntingQuerycontentId51,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject51')._huntingQuerycontentId51,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject52').huntingQueryTemplateSpecName52]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Snip3MaliciousNetworkConnectivity_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject52').huntingQueryVersion52]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_52",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Snip3 Malicious Network Connectivity",
                "category": "Hunting Queries",
                "query": "DeviceNetworkEvents \n| where InitiatingProcessFileName in~ (\"RegSvcs.exe\",\"RegAsm.exe\", \"InstallUtil.exe\") \n| where InitiatingProcessCommandLine in~ (\"\\\"RegAsm.exe\\\"\",\"\\\"RegSvcs.exe\\\"\",\"\\\"InstallUtil.exe\\\"\") \n| where InitiatingProcessParentFileName endswith \"powershell.exe\" \n  or InitiatingProcessParentFileName endswith \"powershell_ise.exe\" \n  or InitiatingProcessParentFileName endswith \"pwsh.exe\"\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This hunting query looks for potentially hollowed processes that may be used to facilitate command-and-control or exfiltration by Snip3 malware."
                  },
                  {
                    "name": "tactics",
                    "value": "CommandAndControl,Exfiltration"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject52')._huntingQuerycontentId52),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 52",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject52')._huntingQuerycontentId52)]",
                "contentId": "[variables('huntingQueryObject52')._huntingQuerycontentId52]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject52').huntingQueryVersion52]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject52')._huntingQuerycontentId52]",
        "contentKind": "HuntingQuery",
        "displayName": "Snip3 Malicious Network Connectivity",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject52')._huntingQuerycontentId52,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject52')._huntingQuerycontentId52,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject53').huntingQueryTemplateSpecName53]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MaliciousCMDExecutionByJava_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject53').huntingQueryVersion53]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_53",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Java Executing cmd to run Powershell",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents                         \n| where InitiatingProcessFileName == 'java.exe' and FileName == 'cmd.exe' \nand ProcessCommandLine has_all('powershell iex','DownloadString')\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query finds instances of the Java process being used to execute cmd.exe, and download and execute a PowerShell script."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject53')._huntingQuerycontentId53),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 53",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject53')._huntingQuerycontentId53)]",
                "contentId": "[variables('huntingQueryObject53')._huntingQuerycontentId53]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject53').huntingQueryVersion53]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject53')._huntingQuerycontentId53]",
        "contentKind": "HuntingQuery",
        "displayName": "Java Executing cmd to run Powershell",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject53')._huntingQuerycontentId53,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject53')._huntingQuerycontentId53,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject54').huntingQueryTemplateSpecName54]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "ClearSystemLogs_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject54').huntingQueryVersion54]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_54",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Clear System Logs",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents\n| where TimeGenerated > ago(7d)\n| where FileName =~ \"fsutil.exe\"\nand ProcessCommandLine has \"usn\" and ProcessCommandLine has \"deletejournal\"\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This hunting query searches for attempts to use fsutil.exe to clear system logs and delete forensic artifacts."
                  },
                  {
                    "name": "tactics",
                    "value": "DefenseEvasion"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject54')._huntingQuerycontentId54),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 54",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject54')._huntingQuerycontentId54)]",
                "contentId": "[variables('huntingQueryObject54')._huntingQuerycontentId54]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject54').huntingQueryVersion54]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject54')._huntingQuerycontentId54]",
        "contentKind": "HuntingQuery",
        "displayName": "Clear System Logs",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject54')._huntingQuerycontentId54,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject54')._huntingQuerycontentId54,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject55').huntingQueryTemplateSpecName55]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Regsvr32Rundll32ImageLoadsAbnormalExtension_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject55').huntingQueryVersion55]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_55",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Regsvr32 Rundll32 Image Loads Abnormal Extension",
                "category": "Hunting Queries",
                "query": "DeviceImageLoadEvents \n| where TimeGenerated > ago(1d)\n| where InitiatingProcessFileName has_any (\"rundll32.exe\",\"regsvr32.exe\")\n| where FileName !endswith \".dll\"\n| join (\nDeviceNetworkEvents\n| where TimeGenerated > ago(30d)\n| where InitiatingProcessFileName has_any (\"rundll32.exe\",\"regsvr32.exe\")\n| where RemoteIPType == \"Public\"\n) on InitiatingProcessFileName, InitiatingProcessId, InitiatingProcessCreationTime, InitiatingProcessCommandLine\n| project TimeGenerated, DeviceName, FileName, FolderPath, SHA1, InitiatingProcessFileName, InitiatingProcessCommandLine, RemoteIP, RemoteUrl, RemotePort, InitiatingProcessParentFileName\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query is looking for regsvr32.exe or rundll32.exe loading DLL images with other extensions than .dll."
                  },
                  {
                    "name": "tactics",
                    "value": "DefenseEvasion"
                  },
                  {
                    "name": "techniques",
                    "value": "T1218.010,T1218.011"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject55')._huntingQuerycontentId55),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 55",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject55')._huntingQuerycontentId55)]",
                "contentId": "[variables('huntingQueryObject55')._huntingQuerycontentId55]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject55').huntingQueryVersion55]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject55')._huntingQuerycontentId55]",
        "contentKind": "HuntingQuery",
        "displayName": "Regsvr32 Rundll32 Image Loads Abnormal Extension",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject55')._huntingQuerycontentId55,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject55')._huntingQuerycontentId55,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject56').huntingQueryTemplateSpecName56]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Regsvr32Rundll32WithAnomalousParentProcess_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject56').huntingQueryVersion56]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_56",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Regsvr32 Rundll32 with Anomalous Parent Process",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents\n| where TimeGenerated > ago(30d)\n| where FileName has_any (\"rundll32.exe\",\"regsvr32.exe\")\n| where InitiatingProcessFileName has_any (\"wscript.exe\",\"powershell.exe\",\"cmd.exe\",\"pwsh.exe\",\"cscript.exe\")\n| project TimeGenerated,DeviceName, InvestigatedProcessName=FileName, InvestigatedProcessCommandLine = ProcessCommandLine,InvestigatedProcessStartTime = ProcessCreationTime, InvestigatedProcessId = ProcessId, InitiatingProcessFileName, InitiatingProcessCommandLine, InitiatingProcessParentFileName\n| join (\nDeviceNetworkEvents\n| where TimeGenerated > ago(30d)\n| where InitiatingProcessFileName has_any (\"rundll32.exe\",\"regsvr32.exe\")\n| where RemoteIPType == \"Public\"\n| project DeviceName, InvestigatedProcessName=InitiatingProcessFileName, InvestigatedProcessCommandLine = InitiatingProcessCommandLine,InvestigatedProcessStartTime = InitiatingProcessCreationTime, InvestigatedProcessId = InitiatingProcessId, RemoteIP, RemoteUrl\n) on DeviceName, InvestigatedProcessCommandLine, InvestigatedProcessId, InvestigatedProcessName, InvestigatedProcessStartTime\n| project-away DeviceName1, InvestigatedProcessCommandLine1, InvestigatedProcessId1, InvestigatedProcessName1, InvestigatedProcessStartTime1\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query searches for rundll32.exe or regsvr32.exe being spawned by abnormal processes such as wscript.exe, powershell.exe, cmd.exe, pwsh.exe, cscript.exe."
                  },
                  {
                    "name": "tactics",
                    "value": "DefenseEvasion"
                  },
                  {
                    "name": "techniques",
                    "value": "T1218.010,T1218.011"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject56')._huntingQuerycontentId56),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 56",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject56')._huntingQuerycontentId56)]",
                "contentId": "[variables('huntingQueryObject56')._huntingQuerycontentId56]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject56').huntingQueryVersion56]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject56')._huntingQuerycontentId56]",
        "contentKind": "HuntingQuery",
        "displayName": "Regsvr32 Rundll32 with Anomalous Parent Process",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject56')._huntingQuerycontentId56,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject56')._huntingQuerycontentId56,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject57').huntingQueryTemplateSpecName57]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "User&GroupEnumWithNetCommand_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject57').huntingQueryVersion57]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_57",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Enumeration of Users & Groups for Lateral Movement",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents \n| where TimeGenerated > ago(7d) \n| where FileName == 'net.exe' and AccountName != \"\" and ProcessCommandLine !contains '\\\\'  and ProcessCommandLine !contains '/add' \n| where (ProcessCommandLine contains ' user ' or ProcessCommandLine contains ' group ') and (ProcessCommandLine contains ' /do' or ProcessCommandLine contains ' /domain') \n| extend Target = extract(\"(?i)[user|group] (\\\"*[a-zA-Z0-9-_ ]+\\\"*)\", 1, ProcessCommandLine) | filter Target  != '' \n| project AccountName, Target, ProcessCommandLine, DeviceName, TimeGenerated  \n| sort by AccountName, Target\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query hunts for attempts to list users or groups using Net commands, which are commonly used for lateral movement."
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject57')._huntingQuerycontentId57),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 57",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject57')._huntingQuerycontentId57)]",
                "contentId": "[variables('huntingQueryObject57')._huntingQuerycontentId57]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject57').huntingQueryVersion57]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject57')._huntingQuerycontentId57]",
        "contentKind": "HuntingQuery",
        "displayName": "Enumeration of Users & Groups for Lateral Movement",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject57')._huntingQuerycontentId57,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject57')._huntingQuerycontentId57,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject58').huntingQueryTemplateSpecName58]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "PotentialKerberoastActivities_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject58').huntingQueryVersion58]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_58",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Detect Potential kerberoast Activities",
                "category": "Hunting Queries",
                "query": "let MaxCount = 70; //Number of requests per 2 minute timeframe, depending on org size.\nIdentityLogonEvents\n| where TimeGenerated > ago(1d)\n| where ActionType == \"LogonSuccess\"\n| where Protocol == \"Kerberos\"\n| extend json = todynamic(parse_json(tostring(AdditionalFields)))\n| extend SPN = json.Spns,\n       AttackTechniques = json.AttackTechniques\n      | project-away json\n| where isnotempty(SPN)\n| where AttackTechniques has \"T1558.003\"\n| mv-expand SPN\n        | extend SPNType = tostring(extract(@\"^\\w+\",0,tostring(SPN)))\n| distinct tostring(SPN),DeviceName,AccountUpn, AccountSid,bin(TimeGenerated,2m),ReportId, tostring(AttackTechniques)\n| summarize count(), SPNS=(make_list(SPN, 100000)),ReportId=tostring((make_list(ReportId, 100000))[0]) by AccountUpn,AccountSid,DeviceName, bin(TimeGenerated, 2m), tostring(AttackTechniques)\n| extend SPNS = (replace_regex(tostring(SPNS), @'[^\\w+-\\/]+', ''))\n| where count_ >= MaxCount\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query aim to detect if someone requests service tickets (where count => maxcount). The query requires trimming to set a baseline level for MaxCount."
                  },
                  {
                    "name": "tactics",
                    "value": "LateralMovement"
                  },
                  {
                    "name": "techniques",
                    "value": "T1558.003"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject58')._huntingQuerycontentId58),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 58",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject58')._huntingQuerycontentId58)]",
                "contentId": "[variables('huntingQueryObject58')._huntingQuerycontentId58]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject58').huntingQueryVersion58]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject58')._huntingQuerycontentId58]",
        "contentKind": "HuntingQuery",
        "displayName": "Detect Potential kerberoast Activities",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject58')._huntingQuerycontentId58,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject58')._huntingQuerycontentId58,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject59').huntingQueryTemplateSpecName59]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SuspiciousAppExeutedByWebserver_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject59').huntingQueryVersion59]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_59",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Webserver Executing Suspicious Applications",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents\n| where TimeGenerated > ago(7d)\n| where InitiatingProcessFileName in~ ('w3wp.exe', 'httpd.exe') // 'sqlservr.exe')\n| where FileName in~ ('cmd.exe', 'powershell.exe', 'cscript.exe', 'wscript.exe', 'net.exe', 'net1.exe', 'ping.exe', 'whoami.exe')\n| summarize instances = count() by ProcessCommandLine, FolderPath, DeviceName, DeviceId \n| order by instances asc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query looks for common webserver process names and identifies any processes launched using a scripting language (cmd, powershell, wscript, cscript)."
                  },
                  {
                    "name": "tactics",
                    "value": "Execution"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject59')._huntingQuerycontentId59),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 59",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject59')._huntingQuerycontentId59)]",
                "contentId": "[variables('huntingQueryObject59')._huntingQuerycontentId59]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject59').huntingQueryVersion59]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject59')._huntingQuerycontentId59]",
        "contentKind": "HuntingQuery",
        "displayName": "Webserver Executing Suspicious Applications",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject59')._huntingQuerycontentId59,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject59')._huntingQuerycontentId59,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject60').huntingQueryTemplateSpecName60]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SuspiciousFileCreationByPrintSpoolerService_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject60').huntingQueryVersion60]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_60",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Windows Print Spooler Service Suspicious File Creation",
                "category": "Hunting Queries",
                "query": "DeviceFileEvents\n| where TimeGenerated > ago(7d)\n| where ActionType == \"FileCreated\"\n| where FileName endswith \".dll\"\n| where FolderPath startswith \"C:\\\\WINDOWS\\\\SYSTEM32\\\\SPOOL\\\\drivers\\\\x64\\\\\\3\\\\\"\n   or FolderPath startswith \"C:\\\\WINDOWS\\\\SYSTEM32\\\\SPOOL\\\\drivers\\\\x64\\\\\\4\\\\\"\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "The query digs in Windows print spooler drivers folder for any file creations. This behavior is used from PoC Exploit of CVE-2021-34527, CVE-2021-1675 or CVE-2022-21999."
                  },
                  {
                    "name": "tactics",
                    "value": "PrivilegeEscalation,LateralMovement"
                  },
                  {
                    "name": "techniques",
                    "value": "T1574"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject60')._huntingQuerycontentId60),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 60",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject60')._huntingQuerycontentId60)]",
                "contentId": "[variables('huntingQueryObject60')._huntingQuerycontentId60]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject60').huntingQueryVersion60]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject60')._huntingQuerycontentId60]",
        "contentKind": "HuntingQuery",
        "displayName": "Windows Print Spooler Service Suspicious File Creation",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject60')._huntingQuerycontentId60,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject60')._huntingQuerycontentId60,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject61').huntingQueryTemplateSpecName61]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SpoolsvSpawningRundll32_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject61').huntingQueryVersion61]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_61",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Spoolsv Spawning Rundll32",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents\n| where InitiatingProcessParentFileName has \"spoolsv.exe\"\n| where InitiatingProcessFileName =~ \"rundll32.exe\"\n| where isempty(InitiatingProcessCommandLine) or InitiatingProcessCommandLine endswith \"rundll32.exe\" //either commandline is empty or just \"rundll32.exe\"\n| where FileName !in~ (\"WerFault.exe\")\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Look for the spoolsv.exe launching rundll32.exe with an empty command line."
                  },
                  {
                    "name": "tactics",
                    "value": "PrivilegeEscalation,Execution"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject61')._huntingQuerycontentId61),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 61",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject61')._huntingQuerycontentId61)]",
                "contentId": "[variables('huntingQueryObject61')._huntingQuerycontentId61]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject61').huntingQueryVersion61]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject61')._huntingQuerycontentId61]",
        "contentKind": "HuntingQuery",
        "displayName": "Spoolsv Spawning Rundll32",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject61')._huntingQuerycontentId61,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject61')._huntingQuerycontentId61,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject62').huntingQueryTemplateSpecName62]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MITRESuspiciousEvents_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject62').huntingQueryVersion62]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_62",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "MITRE - Suspicious Events",
                "category": "Hunting Queries",
                "query": "let weights = dynamic({\"Low\":1, \"Medium\":3, \"High\":5}); //Assign weights to the risk levels\n//Low risk events\nlet lowRiskEvents =\n    DeviceProcessEvents \n    | where\n        (FileName =~ \"powershell.exe\" and ProcessCommandLine has \"-command\") //T1086 PowerShell\n        or\n        (FileName =~ \"powershell.exe\" and ProcessCommandLine contains \"-nop\") //T1086 PowerShell\n        or\n        (FileName =~ \"schtasks.exe\" and ProcessCommandLine has \"create\") //T1053 Scheduled Task\n        or\n        (FileName =~ \"installutil.exe\") //T1118 InstallUtil\n        or\n        (FileName =~ \"msbuild.exe\") //T1127 Trusted Developer Utilities\n        or\n        (FileName =~ \"nbtstat.exe\") //T1016 System Network Configuration Discovery\n        or\n        (FileName == \"mshta.exe\") //T1170 Mshta\n        or\n        (FileName =~ \"netsh.exe\") //T1089 Disabling Security Tools, T1063 Security Software Discovery\n        or\n        (FileName == \"net.exe\" and ProcessCommandLine has \" start \") //T1007 System Service Discovery\n    | extend Weight = toint((weights[\"Low\"]));\n//Medium risk events\nlet mediumRiskEvents =\n    DeviceProcessEvents \n    | where\n        (FileName =~ \"regsvcs.exe\") //T1121 Regsvcs/Regasm\n        or\n        (FileName =~ \"arp.exe\" and ProcessCommandLine has \"-a\") //T1016 System Network Configuration Discovery\n        or\n        (FileName =~ \"ipconfig.exe\" and ProcessCommandLine has \"all\") //T1016 System Network Configuration Discovery\n        or\n        (FileName startswith \"psexe\") //T1035 Service Execution\n        or\n        (FileName == \"net.exe\" and ProcessCommandLine has \" share \") //T1135 Network Share Discovery\n        or\n        (FileName =~ \"netsh.exe\" and ProcessCommandLine has \"interface show\") //T1016 System Network Configuration Discovery\n    | extend Weight = toint((weights[\"Medium\"]));\n//Higher risk events\nlet highRiskEvents =\n    DeviceProcessEvents \n    | where\n        (FileName =~ \"net.exe\" and ProcessCommandLine has \"config\") //T1016 System Network Configuration Discovery\n        or\n        (FileName =~ \"net.exe\" and ProcessCommandLine has \"time\") //T1124 System Time Discovery\n        or \n        (FileName =~ \"w32tm.exe\" and ProcessCommandLine has \"/tz\") //T1124 System Time Discovery\n        or\n        (FileName == \"cmstp.exe\") //T1191 CMSTP\n        or\n        (FileName =~ \"netsh.exe\" and (ProcessCommandLine has \"portproxy\" or ProcessCommandLine has \"p\")) //T1090 Connection Proxy\n    | extend Weight = toint((weights[\"High\"]));\nunion kind=outer lowRiskEvents, mediumRiskEvents, highRiskEvents\n| project TimeGenerated, DeviceName, FileName, ProcessCommandLine, InitiatingProcessCommandLine, Weight\n| summarize Start_Time=min(TimeGenerated), End_Time=max(TimeGenerated), Weight_Sum=sum(Weight), Processes=make_set(FileName, 100000), Commands=make_set(ProcessCommandLine, 100000) by DeviceName\n| where Weight_Sum > 30\n| sort by Weight_Sum desc\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This hunting query looks for several different MITRE techniques, grouped by risk level. A weighting is applied to each risk level and a total score calculated per machine. Techniques can be added/removed as required."
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject62')._huntingQuerycontentId62),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 62",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject62')._huntingQuerycontentId62)]",
                "contentId": "[variables('huntingQueryObject62')._huntingQuerycontentId62]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject62').huntingQueryVersion62]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject62')._huntingQuerycontentId62]",
        "contentKind": "HuntingQuery",
        "displayName": "MITRE - Suspicious Events",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject62')._huntingQuerycontentId62,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject62')._huntingQuerycontentId62,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject63').huntingQueryTemplateSpecName63]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "RemoteFileCreationWithPsExec_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject63').huntingQueryVersion63]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_63",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Remote File Creation with PsExec",
                "category": "Hunting Queries",
                "query": "// Find PsExec creating multiple files on remote machines in a 10-minute window\nDeviceFileEvents\n| where TimeGenerated > ago(7d)\n// Looking for PsExec by accepteula command flag\n| where InitiatingProcessCommandLine has \"accepteula\"\n// Remote machines and file is exe\n| where FolderPath has \"\\\\\\\\\" and FileName endswith \".exe\"\n| extend Exe = countof(InitiatingProcessCommandLine, \".exe\")\n// Checking to see if command line has 2 .exe or .bat\n| where InitiatingProcessCommandLine !has \".ps1\" and Exe > 1 or\nInitiatingProcessCommandLine has \".bat\"\n// Exclusions: Remove the following line to widen scope of AHQ\n| where not(InitiatingProcessCommandLine has_any(\"batch\", \"auditpol\",\n\"script\", \"scripts\", \"illusive\", \"rebootrequired\"))\n| summarize FileCount = dcount(FolderPath), make_set(SHA1, 100000), make_set(FolderPath, 100000),\nmake_set(FileName, 100000), make_set(InitiatingProcessCommandLine, 100000) by DeviceId,\nTimeWindow=bin(TimeGenerated, 10m), InitiatingProcessFileName\n| where FileCount > 4\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query detects remote file creation events that might indicate an active attack using PsExec."
                  },
                  {
                    "name": "tactics",
                    "value": "LateralMovement"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject63')._huntingQuerycontentId63),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 63",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject63')._huntingQuerycontentId63)]",
                "contentId": "[variables('huntingQueryObject63')._huntingQuerycontentId63]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject63').huntingQueryVersion63]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject63')._huntingQuerycontentId63]",
        "contentKind": "HuntingQuery",
        "displayName": "Remote File Creation with PsExec",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject63')._huntingQuerycontentId63,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject63')._huntingQuerycontentId63,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject64').huntingQueryTemplateSpecName64]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "AccountCreation_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject64').huntingQueryVersion64]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_64",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Account Creation",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents\n// Pro-tip: \n// There are many different ways to run a process from a file - e.g. by using full path, env. variables, ~1 annotation, more...\n// So, to find executions of a known filename, better filter on the filename (and possibly on folder path) than on the commandline.\n| where FileName in~ (\"net.exe\", \"net1.exe\") and TimeGenerated > ago(3d)\n// Parse the user name from the commandline.\n// To have case-insensitive parsing use the i flag, to have non-greedy match (e.g. CreatedUser as short as possible), specify U flag:\n// \"kind=regex flags=i\"\n| parse kind=regex flags=iU ProcessCommandLine with * \"user \" CreatedUser \" \" * \"/ad\"\n// Filter rows where user could not be parsed - e.g. because it was not a user command, or the /add commandline switch was not specified.\n| where isnotempty(CreatedUser)\n// Every net.exe executed will run net1.exe with the same commandline.\n// in this where clause we remove such rows, as they duplicate the number of results we have without adding any value.\n| where not (FileName =~ \"net1.exe\" and InitiatingProcessFileName =~ \"net.exe\" and replace(\"net\", \"net1\", InitiatingProcessCommandLine) =~ ProcessCommandLine)\n// If /domain is specified, so the user is created on the domain controller.\n// Also, any prefix that's longer than 1 char will also do the same, e.g. /do, /dom, /doma, ....\n| extend CreatedOnLocalMachine=(ProcessCommandLine !contains \"/do\")\n| where ProcessCommandLine !contains \"/add\" or (CreatedOnLocalMachine == 0 and ProcessCommandLine !contains \"/domain\")\n| summarize MachineCount=dcount(DeviceName) by CreatedUser, CreatedOnLocalMachine, InitiatingProcessFileName, FileName, ProcessCommandLine, InitiatingProcessCommandLine \n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query looks for the creation of user accounts on a machine using the \"net user\" command."
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject64')._huntingQuerycontentId64),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 64",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject64')._huntingQuerycontentId64)]",
                "contentId": "[variables('huntingQueryObject64')._huntingQuerycontentId64]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject64').huntingQueryVersion64]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject64')._huntingQuerycontentId64]",
        "contentKind": "HuntingQuery",
        "displayName": "Account Creation",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject64')._huntingQuerycontentId64,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject64')._huntingQuerycontentId64,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject65').huntingQueryTemplateSpecName65]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "RareProcessAsService_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject65').huntingQueryVersion65]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_65",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Rare Process as a Service",
                "category": "Hunting Queries",
                "query": "let LookupTime = 30d;\nlet WhiteList = pack_array(\n\"svchost.exe\",\n\"mssense.exe\",\n\"msmpeng.exe\",\n\"searchindexer.exe\",\n\"microsoftedgeupdate.exe\"\n);\nlet GetServices = materialize (\nDeviceProcessEvents\n| where TimeGenerated > ago(LookupTime)\n| where InitiatingProcessParentFileName contains \"services.exe\"\n| where InitiatingProcessFileName !in~(WhiteList)\n| project TimeGenerated, DeviceName, StartedChildProcess = FileName, StartedChildProcessSHA1 = SHA1, StartedChildProcessCmdline = ProcessCommandLine, ServiceProcessSHA1 = InitiatingProcessSHA1, ServiceProcess = InitiatingProcessFileName, ServiceProcessCmdline = InitiatingProcessCommandLine, ServiceProcessID = InitiatingProcessId, ServiceProcessCreationTime = InitiatingProcessCreationTime, ServiceProcessUser = InitiatingProcessAccountName\n);\nGetServices\n| summarize count() by ServiceProcess, DeviceName\n| where count_ < 6 \n| join kind = inner GetServices on ServiceProcess, DeviceName \n| join kind = leftouter ( \nDeviceNetworkEvents \n| where TimeGenerated > ago(LookupTime)\n| where InitiatingProcessParentFileName contains \"services.exe\"\n| where InitiatingProcessFileName !in~(WhiteList)\n| project TimeGenerated, DeviceName, ServiceProcessSHA1 = InitiatingProcessSHA1, ServiceProcess = InitiatingProcessFileName, ServiceProcessCmdline = InitiatingProcessCommandLine, ServiceProcessID = InitiatingProcessId, ServiceProcessCreationTime = InitiatingProcessCreationTime, ServiceProcessUser = InitiatingProcessAccountName, NetworkAction = ActionType, RemoteIP, RemoteUrl\n) on DeviceName, ServiceProcess, ServiceProcessCmdline, ServiceProcessCreationTime, ServiceProcessID, ServiceProcessUser, ServiceProcessSHA1\n| join kind = leftouter (\nDeviceFileEvents\n| where TimeGenerated > ago(LookupTime)\n| where InitiatingProcessParentFileName contains \"services.exe\"\n| where InitiatingProcessFileName !in~(WhiteList)\n| project TimeGenerated, DeviceName, ServiceProcessSHA1 = InitiatingProcessSHA1, ServiceProcess = InitiatingProcessFileName, ServiceProcessCmdline = InitiatingProcessCommandLine, ServiceProcessID = InitiatingProcessId, ServiceProcessCreationTime = InitiatingProcessCreationTime, ServiceProcessUser = InitiatingProcessAccountName, FileAction = ActionType, ModifiedFile = FileName, ModifiedFileSHA1 = SHA1, ModifiedFilePath = FolderPath\n) on DeviceName, ServiceProcess, ServiceProcessCmdline, ServiceProcessCreationTime, ServiceProcessID, ServiceProcessUser, ServiceProcessSHA1\n| join kind = leftouter (\nDeviceImageLoadEvents\n| where TimeGenerated > ago(LookupTime)\n| where InitiatingProcessParentFileName contains \"services.exe\"\n| where InitiatingProcessFileName !in~(WhiteList)\n| project TimeGenerated, DeviceName, ServiceProcessSHA1 = InitiatingProcessSHA1, ServiceProcess = InitiatingProcessFileName, ServiceProcessCmdline = InitiatingProcessCommandLine, ServiceProcessID = InitiatingProcessId, ServiceProcessCreationTime = InitiatingProcessCreationTime, ServiceProcessUser = InitiatingProcessAccountName, LoadedDLL = FileName, LoadedDLLSHA1 = SHA1, LoadedDLLPath = FolderPath\n) on DeviceName, ServiceProcess, ServiceProcessCmdline, ServiceProcessCreationTime, ServiceProcessID, ServiceProcessUser, ServiceProcessSHA1\n| summarize ConnectedAddresses = make_set(RemoteIP, 100000), ConnectedUrls = make_set(RemoteUrl, 100000), FilesModified = make_set(ModifiedFile, 100000),FileModFolderPath = make_set(ModifiedFilePath, 100000),FileModHA1s = make_set(ModifiedFileSHA1, 100000), ChildProcesses = make_set(StartedChildProcess, 100000), ChildCommandlines = make_set(StartedChildProcessCmdline, 100000), DLLsLoaded = make_set(LoadedDLL, 100000), DLLSHA1 = make_set(LoadedDLLSHA1, 100000) by DeviceName, ServiceProcess, ServiceProcessCmdline, ServiceProcessCreationTime, ServiceProcessID, ServiceProcessUser, ServiceProcessSHA1\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query looks for rarely seen processes which are launched as a service."
                  },
                  {
                    "name": "tactics",
                    "value": "Persistence"
                  },
                  {
                    "name": "techniques",
                    "value": "T1543,T1543.003"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject65')._huntingQuerycontentId65),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 65",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject65')._huntingQuerycontentId65)]",
                "contentId": "[variables('huntingQueryObject65')._huntingQuerycontentId65]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject65').huntingQueryVersion65]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject65')._huntingQuerycontentId65]",
        "contentKind": "HuntingQuery",
        "displayName": "Rare Process as a Service",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject65')._huntingQuerycontentId65,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject65')._huntingQuerycontentId65,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject66').huntingQueryTemplateSpecName66]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SAMNameChange_CVE-2021-42278_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject66').huntingQueryVersion66]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_66",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "SAM Name Change CVE-2021-42278",
                "category": "Hunting Queries",
                "query": "IdentityDirectoryEvents\n| where TimeGenerated > ago(1d)\n| where ActionType == \"SAM Account Name changed\"\n| extend FROMSAM = parse_json(AdditionalFields)['FROM SAM Account Name']\n| extend TOSAM = parse_json(AdditionalFields)['TO SAM Account Name']\n| where (FROMSAM has \"$\" and TOSAM !has \"$\") \n        or TOSAM in (\"DC1\", \"DC2\", \"DC3\", \"DC4\") // DC Names in the org\n| project TimeGenerated, Application, ActionType, TargetDeviceName, FROMSAM, TOSAM, ReportId, AdditionalFields\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "The following query detects possible CVE-2021-42278 exploitation by finding changes of device names in the network using Microsoft Defender for Identity."
                  },
                  {
                    "name": "tactics",
                    "value": "PrivilegeEscalation,Vulnerability"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject66')._huntingQuerycontentId66),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 66",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject66')._huntingQuerycontentId66)]",
                "contentId": "[variables('huntingQueryObject66')._huntingQuerycontentId66]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject66').huntingQueryVersion66]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject66')._huntingQuerycontentId66]",
        "contentKind": "HuntingQuery",
        "displayName": "SAM Name Change CVE-2021-42278",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject66')._huntingQuerycontentId66,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject66')._huntingQuerycontentId66,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject67').huntingQueryTemplateSpecName67]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DisableSecurityServiceViaRegistry_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject67').huntingQueryVersion67]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_67",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Disabling Services via Registry",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents\n| where InitiatingProcessCommandLine has_all(@'\"reg\"', 'add', @'\"HKLM\\SOFTWARE\\Policies\\', '/v','/t', 'REG_DWORD', '/d', '/f')\n  and InitiatingProcessCommandLine has_any('DisableRealtimeMonitoring', 'UseTPMKey', 'UseTPMKeyPIN', 'UseAdvancedStartup', \n  'EnableBDEWithNoTPM', 'RecoveryKeyMessageSource')\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Search for processes modifying the registry to disable security features."
                  },
                  {
                    "name": "tactics",
                    "value": "DefenseEvasion"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject67')._huntingQuerycontentId67),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 67",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject67')._huntingQuerycontentId67)]",
                "contentId": "[variables('huntingQueryObject67')._huntingQuerycontentId67]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject67').huntingQueryVersion67]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject67')._huntingQuerycontentId67]",
        "contentKind": "HuntingQuery",
        "displayName": "Disabling Services via Registry",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject67')._huntingQuerycontentId67,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject67')._huntingQuerycontentId67,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject68').huntingQueryTemplateSpecName68]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DomainDiscoveryWMICwithDLLHostExe_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject68').huntingQueryVersion68]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_68",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "DLLHost.exe WMIC domain discovery",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents \n| where InitiatingProcessFileName =~ \"dllhost.exe\" and InitiatingProcessCommandLine == \"dllhost.exe\" \n| where ProcessCommandLine has \"wmic computersystem get domain\"\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query checks for dllhost.exe calling WMIC to discover additional hosts and associated domain."
                  },
                  {
                    "name": "tactics",
                    "value": "Reconnaissance"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject68')._huntingQuerycontentId68),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 68",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject68')._huntingQuerycontentId68)]",
                "contentId": "[variables('huntingQueryObject68')._huntingQuerycontentId68]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject68').huntingQueryVersion68]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject68')._huntingQuerycontentId68]",
        "contentKind": "HuntingQuery",
        "displayName": "DLLHost.exe WMIC domain discovery",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject68')._huntingQuerycontentId68,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject68')._huntingQuerycontentId68,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject69').huntingQueryTemplateSpecName69]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MDEExclusionUsingPowerShell_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject69').huntingQueryVersion69]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_69",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "PowerShell adding exclusion path for Microsoft Defender of ProgramData",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents \n| where FileName =~ \"powershell.exe\" and ProcessCommandLine has_all(\"try\", \"Add-MpPreference\", \"-ExclusionPath\", \"ProgramData\", \"catch\")\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "Identify PowerShell creating an exclusion path of ProgramData directory for Microsoft Defender to not monitor."
                  },
                  {
                    "name": "tactics",
                    "value": "DefenseEvasion"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject69')._huntingQuerycontentId69),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 69",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject69')._huntingQuerycontentId69)]",
                "contentId": "[variables('huntingQueryObject69')._huntingQuerycontentId69]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject69').huntingQueryVersion69]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject69')._huntingQuerycontentId69]",
        "contentKind": "HuntingQuery",
        "displayName": "PowerShell adding exclusion path for Microsoft Defender of ProgramData",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject69')._huntingQuerycontentId69,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject69')._huntingQuerycontentId69,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject70').huntingQueryTemplateSpecName70]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DataDeletionOnMulipleDrivesUsingCipherExe_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject70').huntingQueryVersion70]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_70",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Deletion of data on multiple drives using cipher exe",
                "category": "Hunting Queries",
                "query": "// Look for cipher.exe deleting data from multiple drives\nDeviceProcessEvents\n| where TimeGenerated > ago(1d)\n| where FileName =~ \"cipher.exe\" \n// cipher.exe /w flag used for deleting data \n| where ProcessCommandLine has \"/w\" \n| summarize CipherCount = dcount(ProcessCommandLine),\nCipherList = make_set(ProcessCommandLine, 1000) by DeviceId, bin(TimeGenerated, 1m) \n// cipher.exe accessing multiple drives in a short timeframe  \n| where CipherCount > 1\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query checks for attempts to delete data on multiple drives using cipher.exe. This activity is typically done by ransomware to prevent recovery of data after encryption."
                  },
                  {
                    "name": "tactics",
                    "value": "Impact"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject70')._huntingQuerycontentId70),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 70",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject70')._huntingQuerycontentId70)]",
                "contentId": "[variables('huntingQueryObject70')._huntingQuerycontentId70]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject70').huntingQueryVersion70]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject70')._huntingQuerycontentId70]",
        "contentKind": "HuntingQuery",
        "displayName": "Deletion of data on multiple drives using cipher exe",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject70')._huntingQuerycontentId70,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject70')._huntingQuerycontentId70,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('huntingQueryObject71').huntingQueryTemplateSpecName71]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "LaZagneCredTheft_HuntingQueries Hunting Query with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('huntingQueryObject71').huntingQueryVersion71]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.OperationalInsights/savedSearches",
              "apiVersion": "2022-10-01",
              "name": "Microsoft_Defender_XDR_Hunting_Query_71",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "LaZagne Credential Theft",
                "category": "Hunting Queries",
                "query": "DeviceProcessEvents \n| where FileName =~ 'reg.exe'\n| where ProcessCommandLine has_all('save','hklm','sam')\n| project DeviceId, TimeGenerated, InitiatingProcessId, InitiatingProcessFileName, ProcessId, FileName, ProcessCommandLine\n",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": "This query can be used to locate processes executing credential theft activity, often LaZagne in ransomware compromises."
                  },
                  {
                    "name": "tactics",
                    "value": "CredentialAccess"
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('HuntingQuery-', last(split(resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject71')._huntingQuerycontentId71),'/'))))]",
              "properties": {
                "description": "Microsoft Defender XDR Hunting Query 71",
                "parentId": "[resourceId('Microsoft.OperationalInsights/savedSearches', variables('huntingQueryObject71')._huntingQuerycontentId71)]",
                "contentId": "[variables('huntingQueryObject71')._huntingQuerycontentId71]",
                "kind": "HuntingQuery",
                "version": "[variables('huntingQueryObject71').huntingQueryVersion71]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('huntingQueryObject71')._huntingQuerycontentId71]",
        "contentKind": "HuntingQuery",
        "displayName": "LaZagne Credential Theft",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject71')._huntingQuerycontentId71,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','hq','-', uniqueString(concat(variables('_solutionId'),'-','HuntingQuery','-',variables('huntingQueryObject71')._huntingQuerycontentId71,'-', '1.0.0')))]",
        "version": "1.0.0"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MDO Insights Workbook with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Gain extensive insight into your organization's Microsoft Defender for Office Activity by analyzing, and correlating events.\nYou can track malware and phishing detection over time."
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Microsoft Defender for Office 365\\n---\\n\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"crossComponentResources\":[\"{Subscription}\"],\"parameters\":[{\"id\":\"6e647d99-1a32-4bca-8147-403b5d37d773\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subscription\",\"type\":6,\"isRequired\":true,\"value\":\"\",\"typeSettings\":{\"includeAll\":false,\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"timeContextFromParameter\":\"TimeRange\"},{\"id\":\"d57bcdf5-aec7-4f86-904c-67171864919b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Workspace\",\"type\":5,\"isRequired\":true,\"typeSettings\":{\"resourceTypeFilter\":{\"microsoft.operationalinsights/workspaces\":true},\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"value\":\"\"},{\"id\":\"2e238f92-709c-410b-93e0-60eab6150a75\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":604800000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}}],\"style\":\"pills\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},\"name\":\"parameters - 1\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"title\":\"Summary- MDO threat count\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let threatcount = EmailEvents\\r\\n| where isnotempty(ThreatTypes)\\r\\n| summarize Count = count()\\r\\n| extend Details = \\\"Email Events\\\";\\r\\nlet phishingcount = EmailEvents\\r\\n| where DetectionMethods has_any ('spoof','impersonation')\\r\\n| summarize Count= count()\\r\\n| extend Details = \\\"Phishing Emails\\\";\\r\\nlet emailposteliverycount = EmailPostDeliveryEvents \\r\\n|where ActionType =~ \\\"Phish ZAP\\\" or ActionType =~ \\\"Malware ZAP\\\"\\r\\n| summarize Count =count()\\r\\n| extend Details = \\\"ZAP Emails\\\";\\r\\nunion threatcount, phishingcount, emailposteliverycount\\r\\n| project Count, Details\\r\\n| order by Details asc\",\"size\":3,\"title\":\"Total Threat count \",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsDomain\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"greenRed\"}}]},\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Details\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"showBorder\":false},\"chartSettings\":{\"xAxis\":\"Count\",\"createOtherGroup\":0},\"mapSettings\":{\"locInfo\":\"LatLong\",\"sizeSettings\":\"Count\",\"sizeAggregation\":\"Sum\",\"legendMetric\":\"Count\",\"legendAggregation\":\"Sum\",\"itemColorSettings\":{\"type\":\"heatmap\",\"colorAggregation\":\"Sum\",\"nodeColorField\":\"Count\",\"heatmapPalette\":\"greenRed\"}}},\"customWidth\":\"100\",\"name\":\"query - 0 - Copy - Copy\"}]},\"customWidth\":\"100\",\"name\":\"Summary - MDO threat count - Copy\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"48578fe1-da47-4a4c-b495-ce7fe24ce495\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"By Email\",\"subTarget\":\"Email\",\"style\":\"link\"},{\"id\":\"30e93159-8bf5-4006-820f-406ea10bcd17\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"By Authentication\",\"subTarget\":\"Authentication\",\"style\":\"link\"},{\"id\":\"c40f76ed-94be-40ff-b65b-3fda306f2c3d\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"By Url\",\"subTarget\":\"Url\",\"style\":\"link\"}]},\"name\":\"links - 8\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents \\r\\n| where isnotempty(ThreatTypes) \\r\\n| summarize count() by ThreatTypes\",\"size\":1,\"title\":\"Threat Type\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"EmailDirection\",\"exportParameterName\":\"Direction\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"categoricalbar\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"EmailDirection\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isNotEqualTo\",\"value\":\"Authentication\"},\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where ThreatTypes has \\\"Malware\\\" or ThreatTypes has \\\"Phish\\\" \\r\\n| summarize count() by RecipientEmailAddress \\r\\n| sort by count_  \\r\\n| take 15\",\"size\":1,\"title\":\"Top Targeted users\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"DeliveryAction\",\"exportParameterName\":\"DeliveryAction\",\"exportDefaultValue\":\"All\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"DeliveryAction\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"showBorder\":false}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isNotEqualTo\",\"value\":\"Authentication\"},\"name\":\"query - 5 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where DeliveryLocation =~ \\\"Inbox/folder\\\" \\r\\n| where isnotempty(ThreatTypes) and OrgLevelAction =~ \\\"Allow\\\" \\r\\n| count\",\"size\":1,\"title\":\"Malicious Emails Allowed due to Admin overrides\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"EmailAction\",\"exportParameterName\":\"Action\",\"exportDefaultValue\":\"All\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"DeliveryAction\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}},\"showBorder\":false}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isNotEqualTo\",\"value\":\"Authentication\"},\"name\":\"query - 5 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| summarize count()by DeliveryLocation\",\"size\":0,\"title\":\"Original Email Delivery Location count\",\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"fieldName\":\"SenderMailFromAddress\",\"parameterName\":\"Sender2\",\"defaultValue\":\"All\"},{\"fieldName\":\"NetworkMessageIds\",\"parameterName\":\"NetworkMessageIdsSender\",\"parameterType\":1,\"defaultValue\":\"[]\"}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"29ch\"}},{\"columnMatch\":\"DistinctMessages\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"DistinctRecipients\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"21ch\"}},{\"columnMatch\":\"DistinctRecipientDomains\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isNotEqualTo\",\"value\":\"Authentication\"},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where isnotempty(ThreatTypes) \\r\\n| summarize count() by SenderFromDomain \\r\\n| sort by count_  \\r\\n| take 15\",\"size\":0,\"title\":\"Top Sender Domains for Malicious Emails\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsRecipient\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"28ch\"}},{\"columnMatch\":\"DistinctMessages\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"143px\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isNotEqualTo\",\"value\":\"Authentication\"},\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n//|where Timestamp > ago(30d)  \\r\\n| where isnotempty(ThreatNames) \\r\\n| summarize count() by ThreatNames \\r\\n| sort by count_ \",\"size\":0,\"showAnalytics\":true,\"title\":\"Top Malware families\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageId\",\"exportParameterName\":\"NetworkMessageId\",\"exportDefaultValue\":\"None\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"30ch\"}},{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"30ch\"}},{\"columnMatch\":\"Subject\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"35ch\"}},{\"columnMatch\":\"EmailDirection\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Outbound\",\"representation\":\"right\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Inbound\",\"representation\":\"left\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Intra-org\",\"representation\":\"Pending\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"DeliveryAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Delivered\",\"representation\":\"success\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Blocked\",\"representation\":\"failed\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Junked\",\"representation\":\"Disable\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"ConfidenceLevel\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25ch\"}},{\"columnMatch\":\"AttachmentCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"UrlCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"NetworkMessageId\",\"formatter\":5}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Authentication\"},\"name\":\"query - 6\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Email\"},\"name\":\"EmailGroup\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents \\r\\n| project Timestamp, AR=parse_json(AuthenticationDetails) , NetworkMessageId, EmailDirection, SenderFromAddress, ThreatTypes, DetectionMethods   \\r\\n| evaluate bag_unpack(AR) \\r\\n| where column_ifexists('DMARC','') =~ \\\"fail\\\" \\r\\n| summarize count() by bin(Timestamp, 1d) \",\"size\":0,\"title\":\"DMARC failure by time\",\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"fieldName\":\"SenderMailFromAddress\",\"parameterName\":\"Sender2\",\"defaultValue\":\"All\"},{\"fieldName\":\"NetworkMessageIds\",\"parameterName\":\"NetworkMessageIdsSender\",\"parameterType\":1,\"defaultValue\":\"[]\"}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"TotalAttachments\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"150px\"}},{\"columnMatch\":\"DistinctRecipients\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"21ch\"}},{\"columnMatch\":\"DistinctRecipientDomains\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]},\"graphSettings\":{\"type\":0}},\"customWidth\":\"50\",\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| project Timestamp, AR=parse_json(AuthenticationDetails) , NetworkMessageId, EmailDirection, SenderFromAddress, ThreatTypes, DetectionMethods   \\r\\n| evaluate bag_unpack(AR) \\r\\n| where column_ifexists('DKIM','') =~ \\\"fail\\\" \\r\\n| summarize count() by bin(Timestamp, 1d)\",\"size\":0,\"title\":\"DKIM Failure Trend\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsRecipient\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"28ch\"}},{\"columnMatch\":\"TotalAttachments\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"20ch\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"50\",\"name\":\"query - 0 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| project Timestamp, AR=parse_json(AuthenticationDetails) , NetworkMessageId, EmailDirection, SenderFromAddress, ThreatTypes, DetectionMethods   \\r\\n| evaluate bag_unpack(AR) \\r\\n| where column_ifexists('SPF','') =~ \\\"fail\\\" \\r\\n| summarize count() by bin(Timestamp, 1d)\",\"size\":0,\"title\":\"SPF Fail Trend\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsDomain\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientDomain\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25.8571ch\"}},{\"columnMatch\":\"TotalAttachments\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"22ch\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"50\",\"name\":\"query - 0 - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| project Timestamp, AR=parse_json(AuthenticationDetails) , NetworkMessageId, EmailDirection, SenderFromAddress, ThreatTypes, DetectionMethods   \\r\\n| evaluate bag_unpack(AR) \\r\\n| where column_ifexists('CompAuth','') =~ \\\"fail\\\" \\r\\n| summarize count() by bin(Timestamp, 1d) \",\"size\":0,\"title\":\"CompAuth Fail trend\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsDomain\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientDomain\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25.8571ch\"}},{\"columnMatch\":\"TotalAttachments\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"22ch\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"50\",\"name\":\"query - 0 - Copy - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where OrgLevelPolicy!=\\\"\\\" and OrgLevelAction =~ \\\"Allow\\\" \\r\\n| summarize count() by OrgLevelPolicy \",\"size\":0,\"showAnalytics\":true,\"title\":\"Top policies for Admin overrides (Allow) \",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIdWithFile\",\"exportParameterName\":\"NetworkMessageIdWithFile\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"NetworkMessageIdWithFile\",\"formatter\":5}]},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"FileName\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"UniqueEmailsWithThisAttachment\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"50\",\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"EmailEvents\\r\\n| where OrgLevelPolicy!=\\\"\\\" and OrgLevelAction =~ \\\"Block\\\" \\r\\n| summarize count() by OrgLevelPolicy \",\"size\":0,\"showAnalytics\":true,\"title\":\"Top policies for Admin overrides (Block) \",\"noDataMessage\":\"No file attachments were selected\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageId\",\"exportParameterName\":\"NetworkMessageId\",\"exportDefaultValue\":\"None\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"30ch\"}},{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"30ch\"}},{\"columnMatch\":\"Subject\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"35ch\"}},{\"columnMatch\":\"EmailDirection\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Outbound\",\"representation\":\"right\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Inbound\",\"representation\":\"left\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Intra-org\",\"representation\":\"Pending\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"DeliveryAction\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Delivered\",\"representation\":\"success\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Blocked\",\"representation\":\"failed\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Junked\",\"representation\":\"Disable\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"unknown\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"ConfidenceLevel\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"25ch\"}},{\"columnMatch\":\"AttachmentCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"UrlCount\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"NetworkMessageId\",\"formatter\":5}]}},\"customWidth\":\"50\",\"name\":\"query - 6 - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Authentication\"},\"name\":\"AuthenticationGroup\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"UrlClickEvents\\r\\n| where ActionType == \\\"ClickAllowed\\\" or IsClickedThrough !=\\\"0\\\" \\r\\n| where isnotempty(ThreatTypes) \\r\\n| summarize count() by bin (Timestamp,1d) \",\"size\":0,\"title\":\"URL Allowed clicks for Malicious clicks\",\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"fieldName\":\"SenderMailFromAddress\",\"parameterName\":\"Sender2\",\"defaultValue\":\"All\"},{\"fieldName\":\"NetworkMessageIds\",\"parameterName\":\"NetworkMessageIdsSender\",\"parameterType\":1,\"defaultValue\":\"[]\"}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SenderMailFromAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"TotalUrls\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"DistinctRecipients\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"21ch\"}},{\"columnMatch\":\"DistinctRecipientDomains\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"27ch\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Url\"},\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"UrlClickEvents \\r\\n| where isnotempty(ThreatTypes) \\r\\n| summarize count() by Workload \",\"size\":0,\"title\":\"Malicious Click by Workload \",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"NetworkMessageIds\",\"exportParameterName\":\"NetworkMessageIdsRecipient\",\"exportDefaultValue\":\"[]\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"RecipientEmailAddress\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"28ch\"}},{\"columnMatch\":\"TotalUrls\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"DistinctSenders\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\",\"customColumnWidthSetting\":\"140px\"}},{\"columnMatch\":\"NetworkMessageIds\",\"formatter\":5}]}},\"customWidth\":\"50\",\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Url\"},\"name\":\"query - 0 - Copy - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"Url\"},\"name\":\"UrlGroup\"}],\"fromTemplateId\":\"sentinel-MDOWorkbook\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=MDOWorkbook; logoFileName=Azure_Sentinel.svg; description=Gain extensive insight into your organization's Microsoft Defender for Office Activity by analyzing, and correlating events.\nYou can track malware and phishing detection over time.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Microsoft Defender XDR MDOWorkbook; templateRelativePath=MDO Insights.json; subtitle=; provider=Microsoft}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "SecurityAlert",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "MicrosoftThreatProtection",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MicrosoftDefenderForEndPoint Workbook with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId2')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "A wokbook to provide details about Microsoft Defender for Endpoint Advance Hunting to Overview & Analyse data brought through M365 Defender Connector."
              },
              "properties": {
                "displayName": "[parameters('workbook2-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Microsoft Defender for Endpoint (Preview)\\n---\\n\\nA workbook to provide details about Microsoft Defender for Endpoint Advance Hunting to Overview & Analyse data brought through Microsoft Defender XDR Connector.\\n\\n\\n\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"b22a3bd7-19b3-495d-a0df-95a7a59d98ff\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"value\":{\"durationMs\":172800000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"f0450560-ef16-4aa9-a3ad-7485dd909587\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Help\",\"type\":10,\"isRequired\":true,\"jsonData\":\"[{ \\\"value\\\": \\\"Yes\\\", \\\"label\\\": \\\"Yes\\\"},\\r\\n {\\\"value\\\": \\\"No\\\", \\\"label\\\": \\\"No\\\", \\\"selected\\\":true }]\",\"label\":\"Show Help\",\"value\":\"Yes\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 2\"},{\"type\":1,\"content\":{\"json\":\"\\r\\n|Overview|Device|Network|File|\\r\\n|--------|------|-------|----|\\r\\n|MDE Tables Last Data Received|Source of the AV detections|Internet Connected Devices|FileActivityCount per Device|\\r\\n|Daily Data Flow on MDE Tables|Get stats on ASR audit events|Count By Machine Group|Count by InitiatingProcessAccountUpn|\\r\\n|Device Heartbeat|Get stats on ASR blocks|Count By Network Adaptor||\\r\\n|Device where files are copied to USB Drive|AV Detections with USB Disk Drive|TimeSeries on Network Activity||\\r\\n|Device Internet Connectivity Status |List files copied to USB mounted drives|Top 10 RemoteUrl accessed over TimeRange||\\r\\n|Device Count by DNS Suffix ||Tor Clients||\\r\\n|Device Microsoft Entra ID Join status ||||\\r\\n|Device ClientVersion ||||\"},\"conditionalVisibility\":{\"parameterName\":\"Help\",\"comparison\":\"isEqualTo\",\"value\":\"Yes\"},\"name\":\"text - 8\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"454d4e02-26ba-4195-ae30-94752bbf4603\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Overview\",\"subTarget\":\"Overview\",\"preText\":\"Overview\",\"style\":\"link\"},{\"id\":\"3d902e84-3e5b-4631-85d1-c229ec2abf75\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Device\",\"subTarget\":\"Device\",\"style\":\"link\"},{\"id\":\"bbc20288-b398-4f63-b7a9-e3830213bb34\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Network\",\"subTarget\":\"Network\",\"style\":\"link\"},{\"id\":\"edab4a44-8ca3-4ba1-bede-4186f4376d28\",\"cellValue\":\"selectedTab\",\"linkTarget\":\"parameter\",\"linkLabel\":\"File\",\"subTarget\":\"File\",\"style\":\"link\"}]},\"name\":\"links - 3\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union \\r\\nisfuzzy = true\\r\\n(DeviceInfo | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type= \\\"DeviceInfo\\\" | extend Description = \\\"Machine information (including OS information)\\\"),\\r\\n(DeviceNetworkInfo | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceNetworkInfo\\\"  | extend Description = \\\"Network properties of machines\\\"),\\r\\n(DeviceProcessEvents | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceProcessEvents\\\" | extend Description = \\\"Process creation and related events\\\"),\\r\\n(DeviceNetworkEvents | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceNetworkEvents\\\" | extend Description = \\\"Network connection and related events\\\"),\\r\\n(DeviceFileEvents | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceFileEvents\\\" | extend Description = \\\"File creation, modification, and other file system events\\\"),\\r\\n(DeviceRegistryEvents | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceRegistryEvents\\\" | extend Description = \\\"Creation and modification of registry entries\\\"),\\r\\n(DeviceLogonEvents | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceLogonEvents\\\" | extend Description = \\\"Sign-ins and other authentication events\\\"),\\r\\n(DeviceImageLoadEvents | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceImageLoadEvents\\\" | extend Description = \\\"DLL loading events\\\"),\\r\\n(DeviceEvents | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceEvents\\\" | extend Description = \\\"Additional events types\\\"),\\r\\n(DeviceFileCertificateInfo | summarize arg_max(TimeGenerated,*) | project TimeGenerated, Type=\\\"DeviceFileCertificateInfo\\\" | extend Description = \\\"Certificate information of signed files)\\\")\\r\\n| extend [\\\"Last Log Received At (Local Time)\\\"] = TimeGenerated\\r\\n| project Type, Description, [\\\"Last Log Received At (Local Time)\\\"]\",\"size\":0,\"title\":\"MDE Tables Last Data Received based on {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Type\",\"formatter\":0,\"numberFormat\":{\"unit\":0,\"options\":{\"style\":\"decimal\"}}},{\"columnMatch\":\"Last Log Received At\",\"formatter\":6,\"dateFormat\":{\"formatName\":\"fullDateTimePattern\"}}],\"filter\":true}},\"name\":\"query - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let AllDeviceNames = DeviceInfo | distinct DeviceId, DeviceName;\\nlet DeviceEventSummary = DeviceEvents | summarize count() by DeviceId, Type, bin(TimeGenerated,1d);\\nlet DeviceNetworkEventsSummary = DeviceNetworkEvents | summarize count() by DeviceId,Type, bin(TimeGenerated,1d);\\nlet DeviceNetworkInfoSummary = DeviceNetworkInfo | summarize count() by DeviceId,Type, bin(TimeGenerated,1d);\\nlet DeviceLogonEventsSummary = DeviceLogonEvents | summarize count() by DeviceId,Type, bin(TimeGenerated,1d);\\nlet DeviceRegistryEventsSummary = DeviceRegistryEvents | summarize count() by DeviceId,Type, bin(TimeGenerated,1d);\\nlet DeviceProcessEventsSummary = DeviceProcessEvents | summarize count() by DeviceId,Type, bin(TimeGenerated,1d);\\n(DeviceEventSummary\\n| union DeviceNetworkEventsSummary,\\nDeviceNetworkEventsSummary,\\nDeviceNetworkInfoSummary,\\nDeviceLogonEventsSummary,\\nDeviceRegistryEventsSummary,\\nDeviceProcessEventsSummary)\\n| join kind=inner ( \\nAllDeviceNames\\n)\\non $left.DeviceId == $right.DeviceId\\n| project-reorder Type, TimeGenerated, count_\\n//| project-away DeviceId, DeviceId1\",\"size\":1,\"title\":\"Daily Data Flow on MDE Tables over {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"xAxis\":\"count_\"}},\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceInfo \\r\\n| summarize arg_max(TimeGenerated,*) by DeviceId\\r\\n| extend ParsedFields=parse_json(LoggedOnUsers)[0]\\r\\n| extend DurationAtLeast= format_timespan(now()-TimeGenerated,'dd:hh:mm:ss')\\r\\n| project DurationAtLeast,TimeGenerated,DeviceName,DomainName=ParsedFields.DomainName,UserName=ParsedFields.UserName\\r\\n| order by DurationAtLeast asc\",\"size\":0,\"title\":\"Device Heartbeat from TimeTange {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"filter\":true}},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let UsbDriveMount = DeviceEvents\\r\\n| where ActionType==\\\"UsbDriveMounted\\\"\\r\\n| extend ParsedFields=parse_json(AdditionalFields)\\r\\n| project DeviceId, DeviceName, DriveLetter=ParsedFields.DriveLetter, MountTime=Timestamp,\\r\\nProductName=ParsedFields.ProductName,SerialNumber=ParsedFields.SerialNumber,Manufacturer=ParsedFields.Manufacturer\\r\\n| order by DeviceId asc, MountTime desc;\\r\\nlet FileCreation = DeviceFileEvents\\r\\n| where InitiatingProcessAccountName != \\\"system\\\"\\r\\n| where ActionType == \\\"FileCreated\\\"\\r\\n| where FolderPath !startswith \\\"C:\\\\\\\\\\\"\\r\\n| where FolderPath !startswith \\\"\\\\\\\\\\\"\\r\\n| project ReportId,DeviceId,InitiatingProcessAccountDomain,\\r\\nInitiatingProcessAccountName,InitiatingProcessAccountUpn,\\r\\nFileName, FolderPath, SHA256, Timestamp, SensitivityLabel, IsAzureInfoProtectionApplied\\r\\n| order by DeviceId asc, Timestamp desc;\\r\\nFileCreation | lookup kind=inner (UsbDriveMount) on DeviceId\\r\\n| where FolderPath startswith DriveLetter\\r\\n| where Timestamp >= MountTime\\r\\n| partition by ReportId ( top 1 by MountTime )\\r\\n| order by DeviceId asc, Timestamp desc\\r\\n| summarize FileCount = count() by DeviceName\\r\\n| order by FileCount desc\",\"size\":1,\"title\":\"Device where files are copied to USB Drive from TimeTange {TimeRange}\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"FileCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"red\"}}],\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceNetworkInfo\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceId\\r\\n| mvexpand ConnectedNetworks\\r\\n| summarize count() by tostring(ConnectedNetworks.IsConnectedToInternet)\",\"size\":1,\"title\":\"Device Internet Connectivity Status from TimeTange {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"FileCount\",\"formatter\":8,\"formatOptions\":{\"palette\":\"red\"}}],\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 0 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceInfo\\r\\n| where isnotempty(OSPlatform)\\r\\n| summarize arg_max(Timestamp, DeviceName) by DeviceId\\r\\n| extend DeviceMachineName = split(DeviceName, '.')[0]\\r\\n| extend DeviceDomain = substring(DeviceName, strlen(DeviceMachineName) + 1, strlen(DeviceName) - strlen(DeviceMachineName) - 1)\\r\\n| summarize count() by DeviceDomain\",\"size\":1,\"title\":\"Device Count by DNS Suffix\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"gridSettings\":{\"filter\":true},\"chartSettings\":{\"showMetrics\":false,\"showLegend\":true}},\"customWidth\":\"30\",\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceInfo\\r\\n| where isnotempty(OSPlatform)\\r\\n| summarize arg_max(TimeGenerated, *) by DeviceId\\r\\n| summarize count() by tostring(IsAzureADJoined)\",\"size\":1,\"title\":\"Device EntraID Join status\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"gridSettings\":{\"filter\":true},\"chartSettings\":{\"showMetrics\":false,\"showLegend\":true}},\"customWidth\":\"30\",\"name\":\"query - 0 - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceInfo\\r\\n| where isnotempty(OSPlatform)\\r\\n| summarize arg_max(TimeGenerated, *) by DeviceId\\r\\n| summarize count() by ClientVersion\",\"size\":1,\"title\":\"Device ClientVersion\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"gridSettings\":{\"filter\":true},\"chartSettings\":{\"showMetrics\":false,\"showLegend\":true}},\"customWidth\":\"30\",\"name\":\"query - 0 - Copy - Copy - Copy - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"Overview\"},\"name\":\"groupOverview\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"//This query shows the source of the AV detections (e.g., the website the file was downloaded from etc.)\\r\\n//\\r\\n//Get the list of AV detections\\r\\nlet avDetections =\\r\\nDeviceEvents\\r\\n| where ActionType == \\\"AntivirusDetection\\\" and isnotempty(MD5)\\r\\n| extend ParsedFields=parse_json(AdditionalFields)\\r\\n| project Timestamp, DeviceName, ThreatName=tostring(ParsedFields.ThreatName), FileName, FolderPath, MD5;\\r\\n//Get a list of file creations\\r\\nlet fileCreations =\\r\\nDeviceFileEvents \\r\\n| where (isnotempty(FileOriginReferrerUrl) or isnotempty(FileOriginUrl)) and isnotempty(MD5)\\r\\n| project MD5, FileOriginUrl, FileOriginReferrerUrl, InitiatingProcessFileName, InitiatingProcessParentFileName;\\r\\n//Join the file creations and AV detections on the MD5 of the file\\r\\navDetections | join kind=inner (fileCreations) on MD5\\r\\n| project-away MD51 //Remove the duplicated MD5 field\\r\\n| sort by Timestamp desc \",\"size\":0,\"title\":\"Source of the AV detections for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"filter\":true}},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceEvents\\r\\n| where ActionType startswith \\\"Asr\\\" and ActionType endswith \\\"Audited\\\"\\r\\n// Count total stats - count events and machines per rule\\r\\n| summarize EventCount=count(), MachinesCount=dcount(DeviceId) by ActionType\",\"size\":0,\"title\":\"Get stats on ASR audit events - count events and machines per rule for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceEvents\\r\\n| where ActionType startswith \\\"Asr\\\" and ActionType endswith \\\"Blocked\\\"\\r\\n// Count total stats - count events and machines per rule\\r\\n| summarize EventCount=count(), MachinesCount=dcount(DeviceId) by ActionType\",\"size\":0,\"title\":\"Get stats on ASR blocks - count events and machines per rule for {TimeRange}\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 1 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"//This query make a best-guess detection regarding which removable media device caused an AV detection\\r\\n//The query is best run over 30 days to get the full USB history\\r\\n//\\r\\n//Get a list of USB AV detections. This assumes any path not beginning with C is a removable/USB device\\r\\nlet usbDetections =\\r\\n    DeviceEvents\\r\\n    | where ActionType == \\\"AntivirusDetection\\\" and FolderPath !startswith \\\"c\\\" and FolderPath matches regex \\\"^[A-Za-z]{1}\\\"\\r\\n    | extend ParsedFields=parse_json(AdditionalFields)\\r\\n    | project DetectionTime=Timestamp, DeviceName, ThreatName=tostring(ParsedFields.ThreatName), FileName, FolderPath;\\r\\n//Get a list of USB disk drive connections, grouped by computer name and DeviceID\\r\\nlet usbConnections = \\r\\n    DeviceEvents\\r\\n    | where ActionType == \\\"PnpDeviceConnected\\\"\\r\\n    | extend parsed=parse_json(AdditionalFields)\\r\\n    | project Timestamp, DeviceName, DeviceId=tostring(parsed.DeviceId), ClassName=tostring(parsed.ClassName)\\r\\n    | where ClassName == \\\"DiskDrive\\\"\\r\\n    | summarize UsbFirstSeen=min(Timestamp), UsbLastSeen=max(Timestamp) by DeviceId, DeviceName;\\r\\n//Join USB AV detections and connections, where the detection occurs after the USB has been plugged in\\r\\nusbDetections | join kind=inner (usbConnections) on DeviceName | where DetectionTime > UsbFirstSeen and DetectionTime < UsbLastSeen\\r\\n| project DetectionTime, DeviceName, ThreatName, FileName, FolderPath, DeviceId, UsbFirstSeen, UsbLastSeen\\r\\n| sort by DetectionTime desc\",\"size\":0,\"title\":\"AV Detections with USB Disk Drive for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let UsbDriveMount = DeviceEvents\\r\\n| where ActionType==\\\"UsbDriveMounted\\\"\\r\\n| extend ParsedFields=parse_json(AdditionalFields)\\r\\n| project DeviceId, DeviceName, DriveLetter=ParsedFields.DriveLetter, MountTime=Timestamp,\\r\\nProductName=ParsedFields.ProductName,SerialNumber=ParsedFields.SerialNumber,Manufacturer=ParsedFields.Manufacturer\\r\\n| order by DeviceId asc, MountTime desc;\\r\\nlet FileCreation = DeviceFileEvents\\r\\n| where InitiatingProcessAccountName != \\\"system\\\"\\r\\n| where ActionType == \\\"FileCreated\\\"\\r\\n| where FolderPath !startswith \\\"C:\\\\\\\\\\\"\\r\\n| where FolderPath !startswith \\\"\\\\\\\\\\\"\\r\\n| project ReportId,DeviceId,InitiatingProcessAccountDomain,\\r\\nInitiatingProcessAccountName,InitiatingProcessAccountUpn,\\r\\nFileName, FolderPath, SHA256, Timestamp, SensitivityLabel, IsAzureInfoProtectionApplied\\r\\n| order by DeviceId asc, Timestamp desc;\\r\\nFileCreation | lookup kind=inner (UsbDriveMount) on DeviceId\\r\\n| where FolderPath startswith DriveLetter\\r\\n| where Timestamp >= MountTime\\r\\n| partition by ReportId ( top 1 by MountTime )\\r\\n| order by DeviceId asc, Timestamp desc\",\"size\":0,\"title\":\"List files copied to USB mounted drives for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 4\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"Device\"},\"name\":\"groupDevice\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceNetworkInfo\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceId\\r\\n| mv-apply ConnectedNetworks on \\r\\n(\\r\\nwhere ConnectedNetworks.IsConnectedToInternet == true\\r\\n)\\r\\n| project DeviceName, DefaultGateways, IPv4Dhcp, IPv6Dhcp,MacAddress,MachineGroup, ConnectedNetworks.IsConnectedToInternet\",\"size\":0,\"title\":\"Internet Connected Devices for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceNetworkInfo\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceId\\r\\n| summarize count() by MachineGroup\",\"size\":0,\"title\":\"Count By Machine Group for {TimeRange}\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"filter\":true}},\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceNetworkInfo\\r\\n| summarize arg_max(TimeGenerated,*) by DeviceId\\r\\n| summarize count() by NetworkAdapterType, NetworkAdapterStatus\",\"size\":0,\"title\":\"Count By Network Adaptor\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"filter\":true}},\"name\":\"query - 0 - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceNetworkEvents\\r\\n| summarize count() by DeviceName, DeviceId,bin( TimeGenerated,5m)\",\"size\":0,\"title\":\"TimeSeries on Network Activity for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\"},\"name\":\"query - 0 - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceNetworkEvents\\r\\n| where isnotempty(RemoteUrl)\\r\\n| summarize count() by RemoteUrl\\r\\n| order by count_ desc\\r\\n| limit 10\",\"size\":0,\"title\":\"Top 10 RemoteUrl accessed over TimeRange {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"categoricalbar\"},\"name\":\"query - 0 - Copy - Copy - Copy - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"// This query looks for Tor client, or for a common Tor plugin called Meek.\\r\\n// We query for active Tor connections, but could have alternatively looked for active Tor runs (ProcessCreateEvents) or Tor downloads (DeviceFileEvents)\\r\\n// To read more about this technique, see:\\r\\n// Tor: https://attack.mitre.org/wiki/Software/S0183#Techniques_Used\\r\\n// Meek plugin: https://attack.mitre.org/wiki/Software/S0175\\r\\n// Multi-hop proxy technique: https://attack.mitre.org/wiki/Technique/T1188\\r\\n// Tags: #Tor, #MultiHopProxy, #CnC\\r\\nDeviceNetworkEvents  \\r\\n| where Timestamp < ago(3d) and InitiatingProcessFileName in~ (\\\"tor.exe\\\", \\\"meek-client.exe\\\")\\r\\n// Returns MD5 hashes of files used by Tor, to enable you to block them.\\r\\n// We count how prevalent each file is (by machines) and show examples for some of them (up to 5 machine names per hash).\\r\\n| summarize MachineCount=dcount(DeviceName), MachineNames=makeset(DeviceName, 5) by InitiatingProcessMD5\\r\\n| order by MachineCount desc\",\"size\":0,\"title\":\"Tor Clients for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 5\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"Network\"},\"name\":\"groupNetwork\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceFileEvents\\r\\n| summarize FileActivityCount = count() by DeviceName\",\"size\":0,\"title\":\"FileActivityCount per Device for {TimeRange}\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"unstackedbar\"},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"DeviceFileEvents\\r\\n| summarize count() by InitiatingProcessAccountUpn\",\"size\":0,\"title\":\"Count by InitiatingProcessAccountUpn for {TimeRange}\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"unstackedbar\"},\"name\":\"query - 0 - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"selectedTab\",\"comparison\":\"isEqualTo\",\"value\":\"File\"},\"name\":\"groupFile\"}],\"fromTemplateId\":\"sentinel-MicrosoftDefenderForEndPoint\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId2'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=MicrosoftDefenderForEndPoint; logoFileName=Azure_Sentinel.svg; description=A wokbook to provide details about Microsoft Defender for Endpoint Advance Hunting to Overview & Analyse data brought through M365 Defender Connector.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Microsoft Defender For EndPoint; templateRelativePath=MicrosoftDefenderForEndPoint.json; subtitle=; provider=Microsoft Sentinel Community}.description",
                "parentId": "[variables('workbookId2')]",
                "contentId": "[variables('_workbookContentId2')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId2')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook2-name')]",
        "contentProductId": "[variables('_workbookcontentProductId2')]",
        "id": "[variables('_workbookcontentProductId2')]",
        "version": "[variables('workbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MicrosoftDefenderForIdentity Workbook with template version 3.0.8",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion3')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId3')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Use this workbook to analyse the advance hunting data ingested for Defender For Identity."
              },
              "properties": {
                "displayName": "[parameters('workbook3-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":1,\"content\":{\"json\":\"## Microsoft Defender for Identity\\n---\\n\"},\"name\":\"text - 2\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"6e647d99-1a32-4bca-8147-403b5d37d773\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subscription\",\"type\":6,\"isRequired\":true,\"value\":\"\",\"typeSettings\":{\"includeAll\":false,\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"timeContextFromParameter\":\"TimeRange\"},{\"id\":\"d57bcdf5-aec7-4f86-904c-67171864919b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Workspace\",\"type\":5,\"isRequired\":true,\"query\":\"resources\\r\\n| where type =~ \\\"microsoft.operationalinsights/workspaces\\\"\",\"crossComponentResources\":[\"{Subscription}\"],\"typeSettings\":{\"resourceTypeFilter\":{\"microsoft.operationalinsights/workspaces\":true},\"showDefault\":false},\"timeContext\":{\"durationMs\":86400000},\"timeContextFromParameter\":\"TimeRange\",\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\"},{\"id\":\"2e238f92-709c-410b-93e0-60eab6150a75\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":1800000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":86400000}},{\"id\":\"ec13514a-7e54-4d41-86db-2805727a2fa7\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"About\",\"type\":10,\"description\":\"\",\"isRequired\":true,\"value\":\"Show\",\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[\\r\\n    \\\"Show\\\",\\r\\n    \\\"Hide\\\"\\r\\n]\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.resourcegraph/resources\"},\"name\":\"parameters - 1\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"### Microsoft Defender for Identity Analysis Workbook\\r\\n\\r\\n\",\"style\":\"info\"},\"name\":\"text - 0\"}]},\"conditionalVisibility\":{\"parameterName\":\"About\",\"comparison\":\"isEqualTo\",\"value\":\"Show\"},\"name\":\"AboutGroup\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"48578fe1-da47-4a4c-b495-ce7fe24ce495\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Overview\",\"subTarget\":\"grpOverview\",\"style\":\"link\"},{\"id\":\"30e93159-8bf5-4006-820f-406ea10bcd17\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"LogOnEvents\",\"subTarget\":\"grpLogOnEvents\",\"style\":\"link\"},{\"id\":\"c40f76ed-94be-40ff-b65b-3fda306f2c3d\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"QueryEvents\",\"subTarget\":\"grpQueryEvents\",\"style\":\"link\"},{\"id\":\"38c88a53-f7b1-42da-83d6-0c809835eaab\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"DirectoryEvents\",\"subTarget\":\"grpDirectoryEvents\",\"style\":\"link\"},{\"id\":\"0ad83579-c492-4c20-8db6-27883db5abc8\",\"cellValue\":\"Nav\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Alerts\",\"subTarget\":\"grpAlerts\",\"style\":\"link\"}]},\"name\":\"links - 8\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityLogonEvents\\r\\n| summarize count() by LogonType\",\"size\":0,\"title\":\"Log On Summary\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"tiles\",\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"LogonType\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"customWidth\":\"40\",\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityLogonEvents\\r\\n|summarize count() by ActionType\",\"size\":0,\"title\":\"Log On Status\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"piechart\"},\"customWidth\":\"30\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityLogonEvents\\r\\n| summarize count() by Protocol\",\"size\":0,\"title\":\"Log On Protocol\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"barchart\"},\"customWidth\":\"30\",\"name\":\"query - 1 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityQueryEvents\\r\\n| summarize count() by Protocol\",\"size\":0,\"title\":\"Query Summary\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"barchart\"},\"customWidth\":\"30\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityQueryEvents\\r\\n| summarize count() by DestinationPort\",\"size\":0,\"title\":\"Query Destination Port\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"piechart\"},\"customWidth\":\"30\",\"name\":\"query - 3 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityQueryEvents\\r\\n| where isnotempty(QueryType)\\r\\n| summarize count() by QueryType\\r\\n| order by count_ desc\\r\\n| take 10\",\"size\":0,\"title\":\"Top 10 Query Types\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}}]}},\"customWidth\":\"30\",\"name\":\"query - 7\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityDirectoryEvents\\r\\n| summarize count() by Protocol\",\"size\":0,\"title\":\"Directory Events Protocol\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"categoricalbar\"},\"customWidth\":\"40\",\"name\":\"query - 6\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityDirectoryEvents\\r\\n| summarize count() by AccountDomain\",\"size\":0,\"title\":\"Directory Events Protocol\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"piechart\"},\"customWidth\":\"30\",\"name\":\"query - 6 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityDirectoryEvents\\r\\n| where isnotempty(AccountUpn)\\r\\n| summarize count() by AccountUpn\\r\\n| order by count_ desc \\r\\n| take 10\",\"size\":0,\"title\":\"Top 10 Accounts Activity\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"30\",\"name\":\"query - 6 - Copy - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"grpOverview\"},\"name\":\"grpOverview\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityLogonEvents\\r\\n| where LogonType == \\\"Resource access\\\"\\r\\n| extend FROM_DEVICE_ = tostring(AdditionalFields.[\\\"FROM.DEVICE\\\"])\\r\\n| extend TO_DEVICE_ = tostring(AdditionalFields.[\\\"TO.DEVICE\\\"])\\r\\n| extend Count_ = toint(AdditionalFields.Count)\\r\\n| summarize sum(Count_) by FROM_DEVICE_, TO_DEVICE_\\r\\n| order by sum_Count_ desc\",\"size\":0,\"title\":\"Resource Access Summary in Devices\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"sum_Count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"45\",\"name\":\"query - 0\",\"styleSettings\":{\"margin\":\"5px\",\"padding\":\"5px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityLogonEvents\\r\\n| where LogonType == \\\"Resource access\\\"\\r\\n| extend TargetComputerOperatingSystem_ = tostring(AdditionalFields.TargetComputerOperatingSystem)\\r\\n| extend DestinationComputerOperatingSystem_ = tostring(AdditionalFields.DestinationComputerOperatingSystem)\\r\\n| extend Count_ = toint(AdditionalFields.Count)\\r\\n| summarize sum(Count_) by TargetComputerOperatingSystem_, DestinationComputerOperatingSystem_\\r\\n| order by sum_Count_ desc\",\"size\":0,\"title\":\"Resource Access Summary in OS\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"sum_Count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"45\",\"name\":\"query - 0 - Copy\",\"styleSettings\":{\"margin\":\"5px\",\"padding\":\"5px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityLogonEvents\\r\\n| where LogonType == \\\"Credentials validation\\\"\\r\\n| extend FROM_DEVICE = tostring(AdditionalFields.[\\\"FROM.DEVICE\\\"])\\r\\n| extend TO_DEVICE = tostring(AdditionalFields.[\\\"TO.DEVICE\\\"])\\r\\n| extend Count = toint(AdditionalFields.Count)\\r\\n| summarize sum(Count) by FROM_DEVICE, TO_DEVICE\\r\\n| order by sum_Count desc\",\"size\":0,\"title\":\"Credentials validation Summary in Devices\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"sum_Count\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"45\",\"name\":\"query - 0 - Copy\",\"styleSettings\":{\"margin\":\"5px\",\"padding\":\"5px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = IdentityLogonEvents\\r\\n| where LogonType == \\\"Credentials validation\\\"\\r\\n| extend TO_DEVICE = tostring(AdditionalFields.[\\\"TO.DEVICE\\\"])\\r\\n| extend Count = toint(AdditionalFields.Count);\\r\\ndata\\r\\n| summarize sum(Count) by  TO_DEVICE\\r\\n| order by sum_Count desc\\r\\n| join kind=inner\\r\\n(\\r\\ndata\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by TO_DEVICE\\r\\n)\\r\\non $left.TO_DEVICE == $right.TO_DEVICE\",\"size\":0,\"title\":\"Credentials validation by Domain Controllers\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"sum_Count\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TO_DEVICE1\",\"formatter\":5},{\"columnMatch\":\"Trend\",\"formatter\":10,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true}},\"customWidth\":\"45\",\"name\":\"query - 0 - Copy - Copy\",\"styleSettings\":{\"margin\":\"5px\",\"padding\":\"5px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = IdentityLogonEvents;\\r\\ndata\\r\\n| extend Count = toint(AdditionalFields.Count)\\r\\n| summarize LogonSuccess = sumif(Count,ActionType == \\\"LogonSuccess\\\"),LogonFailed= sumif(Count,ActionType == \\\"LogonFailed\\\") by AccountUpn\\r\\n| join kind = inner\\r\\n(\\r\\ndata\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by AccountUpn\\r\\n) on $left.AccountUpn == $right.AccountUpn\",\"size\":0,\"title\":\"Logon Summary by Users\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"LogonSuccess\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"LogonFailed\",\"formatter\":8,\"formatOptions\":{\"palette\":\"redPurple\"}},{\"columnMatch\":\"AccountUpn1\",\"formatter\":5},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 0 - Copy - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"grpLogOnEvents\"},\"name\":\"AttachmentGroup\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = IdentityQueryEvents\\r\\n| extend TO_DEVICE = tostring(AdditionalFields.[\\\"TO.DEVICE\\\"]);\\r\\ndata\\r\\n| summarize count() by QueryType, TO_DEVICE\\r\\n| join kind =inner \\r\\n(\\r\\ndata\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by QueryType, TO_DEVICE\\r\\n) on $left.QueryType == $right.QueryType and $left.TO_DEVICE== $right.TO_DEVICE\",\"size\":0,\"title\":\"Device Query Summary\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"TO_DEVICE\",\"formatter\":5},{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"QueryType1\",\"formatter\":5},{\"columnMatch\":\"TO_DEVICE1\",\"formatter\":5},{\"columnMatch\":\"Trend\",\"formatter\":21,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true,\"hierarchySettings\":{\"treeType\":1,\"groupBy\":[\"TO_DEVICE\"],\"expandTopLevel\":true}}},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = IdentityQueryEvents;\\r\\ndata\\r\\n| summarize count() by DeviceName\\r\\n| join kind =inner \\r\\n(\\r\\ndata\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by DeviceName\\r\\n) on $left.DeviceName == $right.DeviceName\",\"size\":0,\"title\":\"Query Summary from Source Devices\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"DeviceName1\",\"formatter\":5},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true}},\"name\":\"query - 0 - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"grpQueryEvents\"},\"name\":\"UrlGroup\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityDirectoryEvents\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by ActionType \",\"size\":0,\"title\":\"Timeline on ActionType\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"timechart\"},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityDirectoryEvents\\r\\n| summarize count() by ActionType \\r\\n| order by count_ desc\",\"size\":0,\"title\":\"Top 10 Actions\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"categoricalbar\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}]},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"DestinationPort\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"name\":\"query - 0 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"IdentityDirectoryEvents\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by AccountUpn\",\"size\":0,\"title\":\"Account Trend on Directory Events\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"blue\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}],\"rowLimit\":10000,\"filter\":true},\"tileSettings\":{\"showBorder\":false,\"titleContent\":{\"columnMatch\":\"DestinationPort\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"auto\"},\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}}},\"name\":\"query - 0 - Copy - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"grpDirectoryEvents\"},\"name\":\"group - 8\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = SecurityAlert\\r\\n| where ProductName == \\\"Azure Advanced Threat Protection\\\"\\r\\n| summarize arg_max(TimeGenerated,*) by SystemAlertId;\\r\\ndata\\r\\n| summarize count() by AlertName\\r\\n| join kind=inner \\r\\n(\\r\\ndata\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by AlertName\\r\\n) on AlertName\",\"size\":0,\"noDataMessage\":\"Alerts\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"red\"}},{\"columnMatch\":\"AlertName1\",\"formatter\":5},{\"columnMatch\":\"Trend\",\"formatter\":21,\"formatOptions\":{\"palette\":\"red\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let data = SecurityAlert\\r\\n| where ProductName == \\\"Azure Advanced Threat Protection\\\"\\r\\n| summarize arg_max(TimeGenerated,*) by SystemAlertId\\r\\n| mv-expand todynamic(Entities)\\r\\n| where Entities[\\\"Type\\\"] == \\\"host\\\"\\r\\n| where isnotempty(Entities[\\\"HostName\\\"])\\r\\n| extend HostName = tostring(Entities[\\\"HostName\\\"]);\\r\\ndata\\r\\n| summarize count() by HostName\\r\\n| join kind=inner \\r\\n(\\r\\ndata\\r\\n| make-series Trend = count() default = 0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step {TimeRange:grain} by HostName\\r\\n) on $left.HostName == $right.HostName\",\"size\":0,\"title\":\"Impacted Hosts\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"count_\",\"formatter\":8,\"formatOptions\":{\"palette\":\"red\"}},{\"columnMatch\":\"HostName1\",\"formatter\":5},{\"columnMatch\":\"Trend\",\"formatter\":9,\"formatOptions\":{\"palette\":\"red\"}},{\"columnMatch\":\"TimeGenerated\",\"formatter\":5}]}},\"name\":\"query - 1\"}]},\"conditionalVisibility\":{\"parameterName\":\"Nav\",\"comparison\":\"isEqualTo\",\"value\":\"grpAlerts\"},\"name\":\"group - 8\"}],\"fromTemplateId\":\"sentinel-MicrosoftDefenderForIdentity\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId3'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=MicrosoftDefenderForIdentity; logoFileName=Azure_Sentinel.svg; description=Use this workbook to analyse the advance hunting data ingested for Defender For Identity.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Microsoft Defender For Identity; templateRelativePath=MicrosoftDefenderForIdentity.json; subtitle=; provider=Microsoft Sentinel Community}.description",
                "parentId": "[variables('workbookId3')]",
                "contentId": "[variables('_workbookContentId3')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender XDR",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "IdentityLogonEvents",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "IdentityQueryEvents",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "IdentityDirectoryEvents",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "SecurityAlert",
                      "kind": "DataType"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId3')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook3-name')]",
        "contentProductId": "[variables('_workbookcontentProductId3')]",
        "id": "[variables('_workbookcontentProductId3')]",
        "version": "[variables('workbookVersion3')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.8",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Microsoft Defender XDR",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Microsoft%20Defender%20XDR/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The <a href=\"https://www.microsoft.com/security/business/threat-protection/microsoft-365-defender\">Microsoft Defender XDR</a> solution for Microsoft Sentinel enables you to ingest Security Alerts/Incidents and raw logs from the products within Microsoft Defender XDR suite into Microsoft Sentinel.</p>\n<p>Additional Hunting Queries to support proactive and reactive hunting for the Microsoft Defender XDR solution can be found on <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Hunting%20Queries/Microsoft%20365%20Defender\">GitHub</a>. This repository has a collection of queries developed by Microsoft Security Research and Microsoft Sentinel community contributions.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution takes a dependency on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs:</p>\n<ol type=\"a\">\n<li><a href=\"https://docs.microsoft.com/azure/azure-monitor/logs/data-collector-api\">Azure Monitor HTTP Data Collector API</a></li>\n</ol>\n<p><strong>Data Connectors:</strong> 1, <strong>Workbooks:</strong> 3, <strong>Analytic Rules:</strong> 40, <strong>Hunting Queries:</strong> 71</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Azure_Sentinel.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Microsoft Defender XDR",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
              "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
              "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
              "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
              "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
              "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
              "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
              "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
              "version": "[variables('analyticRuleObject10').analyticRuleVersion10]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
              "version": "[variables('analyticRuleObject11').analyticRuleVersion11]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
              "version": "[variables('analyticRuleObject12').analyticRuleVersion12]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
              "version": "[variables('analyticRuleObject13').analyticRuleVersion13]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject14')._analyticRulecontentId14]",
              "version": "[variables('analyticRuleObject14').analyticRuleVersion14]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject15')._analyticRulecontentId15]",
              "version": "[variables('analyticRuleObject15').analyticRuleVersion15]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject16')._analyticRulecontentId16]",
              "version": "[variables('analyticRuleObject16').analyticRuleVersion16]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject17')._analyticRulecontentId17]",
              "version": "[variables('analyticRuleObject17').analyticRuleVersion17]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject18')._analyticRulecontentId18]",
              "version": "[variables('analyticRuleObject18').analyticRuleVersion18]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject19')._analyticRulecontentId19]",
              "version": "[variables('analyticRuleObject19').analyticRuleVersion19]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject20')._analyticRulecontentId20]",
              "version": "[variables('analyticRuleObject20').analyticRuleVersion20]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject21')._analyticRulecontentId21]",
              "version": "[variables('analyticRuleObject21').analyticRuleVersion21]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject22')._analyticRulecontentId22]",
              "version": "[variables('analyticRuleObject22').analyticRuleVersion22]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject23')._analyticRulecontentId23]",
              "version": "[variables('analyticRuleObject23').analyticRuleVersion23]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject24')._analyticRulecontentId24]",
              "version": "[variables('analyticRuleObject24').analyticRuleVersion24]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject25')._analyticRulecontentId25]",
              "version": "[variables('analyticRuleObject25').analyticRuleVersion25]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject26')._analyticRulecontentId26]",
              "version": "[variables('analyticRuleObject26').analyticRuleVersion26]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject27')._analyticRulecontentId27]",
              "version": "[variables('analyticRuleObject27').analyticRuleVersion27]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject28')._analyticRulecontentId28]",
              "version": "[variables('analyticRuleObject28').analyticRuleVersion28]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject29')._analyticRulecontentId29]",
              "version": "[variables('analyticRuleObject29').analyticRuleVersion29]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject30')._analyticRulecontentId30]",
              "version": "[variables('analyticRuleObject30').analyticRuleVersion30]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject31')._analyticRulecontentId31]",
              "version": "[variables('analyticRuleObject31').analyticRuleVersion31]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject32')._analyticRulecontentId32]",
              "version": "[variables('analyticRuleObject32').analyticRuleVersion32]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject33')._analyticRulecontentId33]",
              "version": "[variables('analyticRuleObject33').analyticRuleVersion33]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject34')._analyticRulecontentId34]",
              "version": "[variables('analyticRuleObject34').analyticRuleVersion34]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject35')._analyticRulecontentId35]",
              "version": "[variables('analyticRuleObject35').analyticRuleVersion35]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject36')._analyticRulecontentId36]",
              "version": "[variables('analyticRuleObject36').analyticRuleVersion36]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject37')._analyticRulecontentId37]",
              "version": "[variables('analyticRuleObject37').analyticRuleVersion37]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject38')._analyticRulecontentId38]",
              "version": "[variables('analyticRuleObject38').analyticRuleVersion38]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject39')._analyticRulecontentId39]",
              "version": "[variables('analyticRuleObject39').analyticRuleVersion39]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject40')._analyticRulecontentId40]",
              "version": "[variables('analyticRuleObject40').analyticRuleVersion40]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject1')._huntingQuerycontentId1]",
              "version": "[variables('huntingQueryObject1').huntingQueryVersion1]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject2')._huntingQuerycontentId2]",
              "version": "[variables('huntingQueryObject2').huntingQueryVersion2]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject3')._huntingQuerycontentId3]",
              "version": "[variables('huntingQueryObject3').huntingQueryVersion3]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject4')._huntingQuerycontentId4]",
              "version": "[variables('huntingQueryObject4').huntingQueryVersion4]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject5')._huntingQuerycontentId5]",
              "version": "[variables('huntingQueryObject5').huntingQueryVersion5]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject6')._huntingQuerycontentId6]",
              "version": "[variables('huntingQueryObject6').huntingQueryVersion6]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject7')._huntingQuerycontentId7]",
              "version": "[variables('huntingQueryObject7').huntingQueryVersion7]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject8')._huntingQuerycontentId8]",
              "version": "[variables('huntingQueryObject8').huntingQueryVersion8]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject9')._huntingQuerycontentId9]",
              "version": "[variables('huntingQueryObject9').huntingQueryVersion9]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject10')._huntingQuerycontentId10]",
              "version": "[variables('huntingQueryObject10').huntingQueryVersion10]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject11')._huntingQuerycontentId11]",
              "version": "[variables('huntingQueryObject11').huntingQueryVersion11]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject12')._huntingQuerycontentId12]",
              "version": "[variables('huntingQueryObject12').huntingQueryVersion12]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject13')._huntingQuerycontentId13]",
              "version": "[variables('huntingQueryObject13').huntingQueryVersion13]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject14')._huntingQuerycontentId14]",
              "version": "[variables('huntingQueryObject14').huntingQueryVersion14]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject15')._huntingQuerycontentId15]",
              "version": "[variables('huntingQueryObject15').huntingQueryVersion15]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject16')._huntingQuerycontentId16]",
              "version": "[variables('huntingQueryObject16').huntingQueryVersion16]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject17')._huntingQuerycontentId17]",
              "version": "[variables('huntingQueryObject17').huntingQueryVersion17]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject18')._huntingQuerycontentId18]",
              "version": "[variables('huntingQueryObject18').huntingQueryVersion18]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject19')._huntingQuerycontentId19]",
              "version": "[variables('huntingQueryObject19').huntingQueryVersion19]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject20')._huntingQuerycontentId20]",
              "version": "[variables('huntingQueryObject20').huntingQueryVersion20]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject21')._huntingQuerycontentId21]",
              "version": "[variables('huntingQueryObject21').huntingQueryVersion21]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject22')._huntingQuerycontentId22]",
              "version": "[variables('huntingQueryObject22').huntingQueryVersion22]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject23')._huntingQuerycontentId23]",
              "version": "[variables('huntingQueryObject23').huntingQueryVersion23]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject24')._huntingQuerycontentId24]",
              "version": "[variables('huntingQueryObject24').huntingQueryVersion24]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject25')._huntingQuerycontentId25]",
              "version": "[variables('huntingQueryObject25').huntingQueryVersion25]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject26')._huntingQuerycontentId26]",
              "version": "[variables('huntingQueryObject26').huntingQueryVersion26]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject27')._huntingQuerycontentId27]",
              "version": "[variables('huntingQueryObject27').huntingQueryVersion27]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject28')._huntingQuerycontentId28]",
              "version": "[variables('huntingQueryObject28').huntingQueryVersion28]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject29')._huntingQuerycontentId29]",
              "version": "[variables('huntingQueryObject29').huntingQueryVersion29]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject30')._huntingQuerycontentId30]",
              "version": "[variables('huntingQueryObject30').huntingQueryVersion30]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject31')._huntingQuerycontentId31]",
              "version": "[variables('huntingQueryObject31').huntingQueryVersion31]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject32')._huntingQuerycontentId32]",
              "version": "[variables('huntingQueryObject32').huntingQueryVersion32]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject33')._huntingQuerycontentId33]",
              "version": "[variables('huntingQueryObject33').huntingQueryVersion33]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject34')._huntingQuerycontentId34]",
              "version": "[variables('huntingQueryObject34').huntingQueryVersion34]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject35')._huntingQuerycontentId35]",
              "version": "[variables('huntingQueryObject35').huntingQueryVersion35]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject36')._huntingQuerycontentId36]",
              "version": "[variables('huntingQueryObject36').huntingQueryVersion36]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject37')._huntingQuerycontentId37]",
              "version": "[variables('huntingQueryObject37').huntingQueryVersion37]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject38')._huntingQuerycontentId38]",
              "version": "[variables('huntingQueryObject38').huntingQueryVersion38]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject39')._huntingQuerycontentId39]",
              "version": "[variables('huntingQueryObject39').huntingQueryVersion39]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject40')._huntingQuerycontentId40]",
              "version": "[variables('huntingQueryObject40').huntingQueryVersion40]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject41')._huntingQuerycontentId41]",
              "version": "[variables('huntingQueryObject41').huntingQueryVersion41]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject42')._huntingQuerycontentId42]",
              "version": "[variables('huntingQueryObject42').huntingQueryVersion42]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject43')._huntingQuerycontentId43]",
              "version": "[variables('huntingQueryObject43').huntingQueryVersion43]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject44')._huntingQuerycontentId44]",
              "version": "[variables('huntingQueryObject44').huntingQueryVersion44]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject45')._huntingQuerycontentId45]",
              "version": "[variables('huntingQueryObject45').huntingQueryVersion45]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject46')._huntingQuerycontentId46]",
              "version": "[variables('huntingQueryObject46').huntingQueryVersion46]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject47')._huntingQuerycontentId47]",
              "version": "[variables('huntingQueryObject47').huntingQueryVersion47]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject48')._huntingQuerycontentId48]",
              "version": "[variables('huntingQueryObject48').huntingQueryVersion48]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject49')._huntingQuerycontentId49]",
              "version": "[variables('huntingQueryObject49').huntingQueryVersion49]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject50')._huntingQuerycontentId50]",
              "version": "[variables('huntingQueryObject50').huntingQueryVersion50]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject51')._huntingQuerycontentId51]",
              "version": "[variables('huntingQueryObject51').huntingQueryVersion51]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject52')._huntingQuerycontentId52]",
              "version": "[variables('huntingQueryObject52').huntingQueryVersion52]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject53')._huntingQuerycontentId53]",
              "version": "[variables('huntingQueryObject53').huntingQueryVersion53]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject54')._huntingQuerycontentId54]",
              "version": "[variables('huntingQueryObject54').huntingQueryVersion54]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject55')._huntingQuerycontentId55]",
              "version": "[variables('huntingQueryObject55').huntingQueryVersion55]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject56')._huntingQuerycontentId56]",
              "version": "[variables('huntingQueryObject56').huntingQueryVersion56]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject57')._huntingQuerycontentId57]",
              "version": "[variables('huntingQueryObject57').huntingQueryVersion57]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject58')._huntingQuerycontentId58]",
              "version": "[variables('huntingQueryObject58').huntingQueryVersion58]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject59')._huntingQuerycontentId59]",
              "version": "[variables('huntingQueryObject59').huntingQueryVersion59]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject60')._huntingQuerycontentId60]",
              "version": "[variables('huntingQueryObject60').huntingQueryVersion60]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject61')._huntingQuerycontentId61]",
              "version": "[variables('huntingQueryObject61').huntingQueryVersion61]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject62')._huntingQuerycontentId62]",
              "version": "[variables('huntingQueryObject62').huntingQueryVersion62]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject63')._huntingQuerycontentId63]",
              "version": "[variables('huntingQueryObject63').huntingQueryVersion63]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject64')._huntingQuerycontentId64]",
              "version": "[variables('huntingQueryObject64').huntingQueryVersion64]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject65')._huntingQuerycontentId65]",
              "version": "[variables('huntingQueryObject65').huntingQueryVersion65]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject66')._huntingQuerycontentId66]",
              "version": "[variables('huntingQueryObject66').huntingQueryVersion66]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject67')._huntingQuerycontentId67]",
              "version": "[variables('huntingQueryObject67').huntingQueryVersion67]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject68')._huntingQuerycontentId68]",
              "version": "[variables('huntingQueryObject68').huntingQueryVersion68]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject69')._huntingQuerycontentId69]",
              "version": "[variables('huntingQueryObject69').huntingQueryVersion69]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject70')._huntingQuerycontentId70]",
              "version": "[variables('huntingQueryObject70').huntingQueryVersion70]"
            },
            {
              "kind": "HuntingQuery",
              "contentId": "[variables('huntingQueryObject71')._huntingQuerycontentId71]",
              "version": "[variables('huntingQueryObject71').huntingQueryVersion71]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId2')]",
              "version": "[variables('workbookVersion2')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId3')]",
              "version": "[variables('workbookVersion3')]"
            }
          ]
        },
        "firstPublishDate": "2022-05-02",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Security - Threat Protection"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
