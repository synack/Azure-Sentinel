// Title:           Symantec VIP Data Parser
// Author:          Microsoft
// Version:         1.0
// Last Updated:    05/12/2020
// Comment:         Inital Release
//  
// DESCRIPTION:
// This parser takes raw Symantec VIP logs from a Syslog data stream and parses the data into a normalized schema
//
// REFERENCES: 
// Using functions in Azure monitor log queries: https://docs.microsoft.com/azure/azure-monitor/log-query/functions
// Symantec VIP logging format: https://help.symantec.com/cs/VIP_EG_INSTALL_CONFIG/VIP/v134651706_v128483142/Legacy-log-format?locale=EN_US
// 
//      AUDIT "2020-05-12 12:16:56.610 GMT-0500" 10.99.99.99 TokenOnly:1812 0 0 22905 "text=Access GRANTED 0x0: Success&tokenid=SAMP7282958 ,reason=0&tokenid=SAMP7282958; Success" Thread-2500 VSValidationEngine.c
//      INFO "2020-05-13 11:19:55.906 GMT-0500" 0.0.0.0 TokenOnly:1812 0 0 86017 "text=Sending Acces-Reject for user [user72] , reason=12; Authentication Failed." Thread-2520 VSAuthOTPStandardControllerImpl.cpp
//
//
Syslog 
| where Computer in ("datasource") and Facility == "local5"
| extend parser = extract_all(@'^([A-Z]+)\s\"([0-9\.\-\s\:GMT]+)\"\s(\S+)\s([\w]+)\:(\d+)\s(\d+)\s(\d+)\s(\d+)\s\"text\=([\S\s]+)\"\sThread-(\d+)\s(.*)',dynamic([1,2,3,4,5,6,7,8,9,10,11]), SyslogMessage)
| mv-expand todynamic(parser)
| extend 
    LogLevel = tostring(parser[0]),
    LogTime = todatetime(parser[1]),
    ClientIP = tostring(parser[2]),
    Component = tostring(parser[3]),
    TransactionID = tostring(parser[5]),
    SessionID= tostring(parser[7]),
    ErrorCode = tostring(parser[6]),
    RawMessage = split(tostring(parser[8]),","),
    ThreadID = tostring(parser[9]),
    SourceClassName = tostring(parser[10])
| extend Message = extract(@"([\w\s\-\_\[\]\\]+)\.",1,tostring(RawMessage[0]))
| extend User = extract(@"(for\s)?(U|u)ser\s\[(\S+)\]",3,tostring(RawMessage[0]))
| extend Reason = extract(@'reason=(\d+)+\s([\w\s]+)',2,tostring(RawMessage[1]))
| extend TokenID = extract(@'tokenid=([A-Z0-9]+)',1,tostring(RawMessage[1]))
| extend AccessResult = extract(@"Access\s(GRANTED|DENIED)",1,tostring(RawMessage[0]))
| extend AuthResult = extract(@"Authentication\s(\S+)\s",1,tostring(RawMessage[0]))
| extend StatusMessage = extract(@'StatusMessage:\s(0x0:\s)?([\w\s]+)[&."]',2,tostring(RawMessage[1]))
| extend RADIUSAuth = extract(@'Acces-(\S+)\s',1,tostring(RawMessage[0]))
| extend StatusCode = extract(@'StatusCode\:\s(\d+)',1,tostring(RawMessage[0]))
| project-away parser
